{"id":"39c3960004241ea61066b514e8a0bd55","_format":"hh-sol-build-info-1","solcVersion":"0.8.13","solcLongVersion":"0.8.13+commit.abaa5c0e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/allocation-vester/AllocationVester.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"../Claimable.sol\";\n\n/**\n * @title Allocation Vester\n * @author shung for Arcanum\n * @notice This contract allows allocating and distributing tokens to recipients by vesting (i.e.,\n * streaming) it for arbitrary durations for each recipient.\n */\ncontract AllocationVester is Claimable {\n    using SafeERC20 for IERC20;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /**\n     * @notice The properties of an address. `reserve` is the remaining tokens to be distributed,\n     * `stash` is the tokens stored when the allocation changes, `lastUpdate` is the time stamp of\n     * the last harvest, and `rate` is the reward tokens per second being vested.\n     */\n    struct Member {\n        uint96 reserve;\n        uint96 stash;\n        uint64 lastUpdate;\n        uint256 rate;\n    }\n\n    /**\n     * @notice The mapping of member addresses to their properties.\n     */\n    mapping(address => Member) public members;\n\n    /**\n     * @notice The set of members who have any remaining allocation.\n     */\n    EnumerableSet.AddressSet private _membersAddresses;\n\n    /**\n     * @notice The address of the token being distributed.\n     */\n    IERC20 public immutable token;\n\n    /**\n     * @notice The total amount of tokens set to be vested to all members.\n     */\n    uint256 public reserve;\n\n    /**\n     * @notice The minimum duration a vesting can last.\n     */\n    uint256 public minDuration = 2 weeks;\n\n    /**\n     * @notice Emit an event whenever an allocation is changed.\n     * @param member The address of the member whose allocation was changed.\n     * @param allocation The new amount of tokens allocated for the member.\n     * @param duration The time it will take to distribute the whole `allocation`.\n     */\n    event AllocationSet(address indexed member, uint256 allocation, uint256 duration);\n\n    /**\n     * @notice Emit an event whenever the `minDuration` is changed.\n     * @param newMinDuration The minimum duration that can be defined for any allocation set after\n     * this event.\n     */\n    event MinDurationSet(uint256 newMinDuration);\n\n    /**\n     * @notice Emit an event whenever a member's pending rewards are harvested.\n     * @param member The address of the member whose rewards were harvested.\n     * @param amount The amount of reward tokens that was harvested.\n     */\n    event Harvested(address indexed member, uint256 amount);\n\n    /**\n     * @notice Emit an event when unallocated tokens from the contract are withdrawn by the admin.\n     * @param amount The amount of reward tokens that was withdrawn from the contract.\n     */\n    event Withdrawn(uint256 amount);\n\n    /**\n     * @notice Constructs a new AllocationVester contract.\n     * @param distributionToken The address of the token to be distributed.\n     */\n    constructor(address distributionToken) {\n        // Ensure the supplied argument is not null.\n        require(distributionToken != address(0), \"zero address\");\n\n        // Set the reward token to the supplied argument.\n        token = IERC20(distributionToken);\n    }\n\n    /**\n     * @notice External function to claim pending rewards of the caller.\n     */\n    function harvest() external {\n        // Get the member using a storage pointer.\n        Member storage member = members[msg.sender];\n\n        // Get the claimable rewards of the member.\n        uint256 amount = pendingHarvest(msg.sender);\n        require(amount != 0, \"no pending harvest\");\n\n        // Update the Member properties.\n        member.lastUpdate = uint64(block.timestamp);\n        member.stash = 0;\n        member.reserve -= uint96(amount);\n\n        // Free claimed tokens from the reserves.\n        reserve -= amount;\n\n        // Remove the member from the set if it has no allocation remaining.\n        if (member.reserve == 0) {\n            _membersAddresses.remove(msg.sender);\n        }\n\n        // Transfer the rewards from the contract to the member, and then emit an event.\n        token.safeTransfer(msg.sender, amount);\n        emit Harvested(msg.sender, amount);\n    }\n\n    /**\n     * @notice External restricted function to withdraw unallocated tokens from the contract.\n     * @param amount The amount of tokens to withdraw.\n     */\n    function withdraw(uint256 amount) external onlyOwner {\n        // Ensure only unallocated reward tokens are being withdrawn.\n        require(unreserved() >= amount, \"low balance\");\n\n        // Transfer the tokens from the contract to the owner, and then emit an event.\n        token.safeTransfer(msg.sender, amount);\n        emit Withdrawn(amount);\n    }\n\n\n    /**\n     * @notice External restricted function to add or removes members, or change their allocations.\n     * @param accounts An array of member addresses.\n     * @param allocations The amount of tokens to allocate to the corresponding member.\n     * @param durations The duration the corresponding allocation will last for.\n     */\n    function setAllocations(\n        address[] calldata accounts,\n        uint256[] calldata allocations,\n        uint256[] calldata durations\n    ) external onlyOwner {\n        // Record variables in memory to save gas when looping.\n        uint256 length = accounts.length;\n        uint256 tmpReserve = reserve;\n        uint256 tmpMinDuration = minDuration;\n\n        // Ensure all array lengths are equal and non-zero.\n        require(length != 0, \"empty array\");\n        require(\n            length == allocations.length && length == durations.length,\n            \"varying-length arrays\"\n        );\n\n        // Loop through all the supplied members.\n        for (uint256 i; i < length; ++i) {\n            // Record variables in memory to save gas.\n            address account = accounts[i];\n            uint256 allocation = allocations[i];\n            uint256 duration = durations[i];\n\n            // Ensure the supplied member address is not null.\n            require(account != address(0), \"bad recipient\");\n\n            // Get the member using a storage pointer, and record its reserve.\n            Member storage member = members[account];\n            uint96 tmpMemberReserve = member.reserve;\n\n            // Check the member's remaining allocation.\n            if (tmpMemberReserve != 0) {\n                // Stash the pending rewards of the member so it remains claimable.\n                uint96 tmpMemberStash = uint96(pendingHarvest(account));\n                member.stash = tmpMemberStash;\n\n                // Free non-stashed reserves of the member from the reserves.\n                tmpReserve -= (tmpMemberReserve - tmpMemberStash);\n\n                // Free non-stashed tokens from member's reserves.\n                tmpMemberReserve = tmpMemberStash;\n            }\n\n            // Check the member's new allocation.\n            if (allocation != 0) {\n                // Ensure duration is at or above the minimum duration and allocation fits 96 bits.\n                require(duration >= tmpMinDuration, \"short vesting duration\");\n                require(allocation <= type(uint96).max, \"invalid allocation\");\n\n                // Lock the new allocation as reserve.\n                tmpReserve += allocation;\n\n                // Get reward rate and ensure that is not truncated to zero.\n                uint256 rate = allocation / duration;\n                require(rate != 0, \"rate truncated to zero\");\n\n                // Update Member properties.\n                tmpMemberReserve += uint96(allocation);\n                member.rate = rate;\n                member.lastUpdate = uint64(block.timestamp);\n\n                // Add the member to the members set if it is not already included in the set.\n                _membersAddresses.add(account);\n            } else if (tmpMemberReserve == 0) {\n                // Remove member from the set if has no reserves remaining.\n                _membersAddresses.remove(account);\n            }\n\n            // Assign back the temporary variable to the member storage property.\n            member.reserve = tmpMemberReserve;\n\n            // Emit an event for the new allocation.\n            emit AllocationSet(account, allocation, duration);\n        }\n\n        // Ensure sufficient balance is present for the allocations.\n        require(token.balanceOf(address(this)) >= tmpReserve, \"low balance\");\n\n        // Assign back the temporary variable to the storage.\n        reserve = tmpReserve;\n    }\n\n    /**\n     * @notice External restricted function to change the minimum duration.\n     * @param newMinDuration The new minimum duration a vesting can last for.\n     */\n    function setMinDuration(uint256 newMinDuration) external onlyOwner {\n        // Ensure the supplied argument is not null.\n        require(newMinDuration != 0, \"zero duration\");\n\n        // Set minimum duration and emit an event.\n        minDuration = newMinDuration;\n        emit MinDurationSet(newMinDuration);\n    }\n\n    /**\n     * @notice External view function to get all active the members.\n     * @return The list of all members who have remaining allocation.\n     */\n    function getMembers() external view returns (address[] memory) {\n        return _membersAddresses.values();\n    }\n\n    /**\n     * @notice Public view function to get the amount of pending reward tokens of a member.\n     * @param account The address of the member.\n     * @return The amount of harvestable reward tokens of the member.\n     */\n    function pendingHarvest(address account) public view returns (uint256) {\n        // Get the member into the memory.\n        Member memory member = members[account];\n\n        // Get the amount by adding stashed amount to reward rate multiplied by time.\n        uint256 amount = member.stash + ((block.timestamp - member.lastUpdate) * member.rate);\n\n        // Clamp the returned amount to member's reserve amount.\n        return amount > member.reserve ? member.reserve : amount;\n    }\n\n    /**\n     * @notice Public view function to get the amount of unallocated reward tokens in the contract.\n     * @return The amount of unallocated reward tokens in the contract.\n     */\n    function unreserved() public view returns (uint256) {\n        return token.balanceOf(address(this)) - reserve;\n    }\n}\n"},"contracts/Claimable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nabstract contract Claimable is Ownable {\n    address private _pendingOwner;\n\n    event PendingOwnerSet(address indexed pendingOwner);\n\n    constructor() {\n        _pendingOwner = _msgSender();\n    }\n\n    function claimOwnership() external {\n        require(_msgSender() == _pendingOwner, \"Claimable: not pending owner\");\n        _transferOwnership(_pendingOwner);\n    }\n\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit PendingOwnerSet(newOwner);\n    }\n\n    function renounceOwnership() public virtual override onlyOwner {\n        require(_pendingOwner == address(0), \"Claimable: pending owner not zero address\");\n        _transferOwnership(address(0));\n    }\n\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":2000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[859],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":860,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":859,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,859],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":124,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":124,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":124,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":124,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":133,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":133,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":133,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":133,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":190,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":147,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":190,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":157,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":190,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":167,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":190,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":177,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":177,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":190,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":189,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":189,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":190,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[226]},"id":227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"139:480:2","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":226,"linearizedBaseContracts":[226],"name":"IERC20Permit","nameLocation":"630:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"649:792:2","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:2","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"owner","nameLocation":"1479:5:2","nodeType":"VariableDeclaration","scope":211,"src":"1471:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"spender","nameLocation":"1502:7:2","nodeType":"VariableDeclaration","scope":211,"src":"1494:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"value","nameLocation":"1527:5:2","nodeType":"VariableDeclaration","scope":211,"src":"1519:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:2","nodeType":"VariableDeclaration","scope":211,"src":"1542:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"v","nameLocation":"1574:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1568:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":203,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"r","nameLocation":"1593:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1585:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"s","nameLocation":"1612:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1604:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:2"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"1628:0:2"},"scope":226,"src":"1446:183:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"1635:294:2","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:2","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"owner","nameLocation":"1958:5:2","nodeType":"VariableDeclaration","scope":219,"src":"1950:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:2"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"1988:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:2"},"scope":226,"src":"1934:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"2003:128:2","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:2","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"2214:2:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"2240:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:2"},"scope":226,"src":"2189:60:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":227,"src":"620:1631:2","usedErrors":[]}],"src":"114:2138:2"},"id":2},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[837],"IERC20":[190],"IERC20Permit":[226],"SafeERC20":[507]},"id":508,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":228,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":508,"sourceUnit":191,"src":"140:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":508,"sourceUnit":227,"src":"164:46:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":508,"sourceUnit":838,"src":"211:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"249:457:3","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":507,"linearizedBaseContracts":[507],"name":"SafeERC20","nameLocation":"715:9:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":235,"libraryName":{"id":233,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":837,"src":"737:7:3"},"nodeType":"UsingForDirective","src":"731:26:3","typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":257,"nodeType":"Block","src":"865:103:3","statements":[{"expression":{"arguments":[{"id":246,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"895:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":249,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"925:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"925:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":252,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"950:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"954:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":247,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":245,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"875:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"875:86:3"}]},"id":258,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:3","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"token","nameLocation":"801:5:3","nodeType":"VariableDeclaration","scope":258,"src":"794:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":237,"nodeType":"UserDefinedTypeName","pathNode":{"id":236,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"794:6:3"},"referencedDeclaration":190,"src":"794:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"824:2:3","nodeType":"VariableDeclaration","scope":258,"src":"816:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"844:5:3","nodeType":"VariableDeclaration","scope":258,"src":"836:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:3"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"865:0:3"},"scope":507,"src":"763:205:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"1102:113:3","statements":[{"expression":{"arguments":[{"id":271,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1132:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":274,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1162:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":189,"src":"1162:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":277,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"1191:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":278,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1197:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1201:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":272,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":270,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"1112:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"1112:96:3"}]},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"token","nameLocation":"1016:5:3","nodeType":"VariableDeclaration","scope":284,"src":"1009:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1009:6:3"},"referencedDeclaration":190,"src":"1009:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"from","nameLocation":"1039:4:3","nodeType":"VariableDeclaration","scope":284,"src":"1031:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"to","nameLocation":"1061:2:3","nodeType":"VariableDeclaration","scope":284,"src":"1053:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"value","nameLocation":"1081:5:3","nodeType":"VariableDeclaration","scope":284,"src":"1073:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:3"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"1102:0:3"},"scope":507,"src":"974:241:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":327,"nodeType":"Block","src":"1581:497:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1830:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":304,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}],"id":303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:3","typeDescriptions":{}}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1877:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":300,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"1846:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"1846:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"1808:163:3"},{"expression":{"arguments":[{"id":316,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2001:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":319,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2031:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2031:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":322,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2055:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2064:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":317,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":315,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"1981:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":326,"nodeType":"ExpressionStatement","src":"1981:90:3"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"1221:249:3","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":328,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:3","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"token","nameLocation":"1512:5:3","nodeType":"VariableDeclaration","scope":328,"src":"1505:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":287,"nodeType":"UserDefinedTypeName","pathNode":{"id":286,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1505:6:3"},"referencedDeclaration":190,"src":"1505:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"spender","nameLocation":"1535:7:3","nodeType":"VariableDeclaration","scope":328,"src":"1527:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"value","nameLocation":"1560:5:3","nodeType":"VariableDeclaration","scope":328,"src":"1552:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:3"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"1581:0:3"},"scope":507,"src":"1475:603:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":363,"nodeType":"Block","src":"2200:194:3","statements":[{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:3","nodeType":"VariableDeclaration","scope":363,"src":"2210:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":350,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}],"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:3","typeDescriptions":{}}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"2264:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":340,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2233:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"2233:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2275:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:3"},{"expression":{"arguments":[{"id":352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2310:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":355,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2340:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":358,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"2364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2373:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":351,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"2290:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"2290:97:3"}]},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:3","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"token","nameLocation":"2131:5:3","nodeType":"VariableDeclaration","scope":364,"src":"2124:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":330,"nodeType":"UserDefinedTypeName","pathNode":{"id":329,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2124:6:3"},"referencedDeclaration":190,"src":"2124:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"spender","nameLocation":"2154:7:3","nodeType":"VariableDeclaration","scope":364,"src":"2146:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"value","nameLocation":"2179:5:3","nodeType":"VariableDeclaration","scope":364,"src":"2171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:3"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"2200:0:3"},"scope":507,"src":"2084:310:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":411,"nodeType":"Block","src":"2516:370:3","statements":[{"id":410,"nodeType":"UncheckedBlock","src":"2526:354:3","statements":[{"assignments":[375],"declarations":[{"constant":false,"id":375,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:3","nodeType":"VariableDeclaration","scope":410,"src":"2550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":384,"initialValue":{"arguments":[{"arguments":[{"id":380,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}],"id":379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:3","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2604:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":376,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2573:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"2573:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2634:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2650:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"2626:75:3"},{"assignments":[393],"declarations":[{"constant":false,"id":393,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:3","nodeType":"VariableDeclaration","scope":410,"src":"2715:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":397,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2738:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2753:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:3"},{"expression":{"arguments":[{"id":399,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2792:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":402,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2822:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2822:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2846:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2855:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":400,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":398,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"2772:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"2772:97:3"}]}]},"id":412,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"token","nameLocation":"2447:5:3","nodeType":"VariableDeclaration","scope":412,"src":"2440:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":366,"nodeType":"UserDefinedTypeName","pathNode":{"id":365,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2440:6:3"},"referencedDeclaration":190,"src":"2440:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"spender","nameLocation":"2470:7:3","nodeType":"VariableDeclaration","scope":412,"src":"2462:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"value","nameLocation":"2495:5:3","nodeType":"VariableDeclaration","scope":412,"src":"2487:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:3"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"2516:0:3"},"scope":507,"src":"2400:486:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"3107:257:3","statements":[{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:3","nodeType":"VariableDeclaration","scope":467,"src":"3117:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":438,"initialValue":{"arguments":[{"id":436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"3152:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":434,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3139:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":219,"src":"3139:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:3"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"3181:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"3188:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3197:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":445,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"3204:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":446,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3214:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":447,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3217:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":448,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"3220:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":439,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3168:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":211,"src":"3168:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"3168:54:3"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:3","nodeType":"VariableDeclaration","scope":467,"src":"3232:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":457,"initialValue":{"arguments":[{"id":455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"3266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":453,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3253:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":219,"src":"3253:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3290:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":460,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3304:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"3282:75:3"}]},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:3","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"token","nameLocation":"2934:5:3","nodeType":"VariableDeclaration","scope":468,"src":"2921:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"},"typeName":{"id":414,"nodeType":"UserDefinedTypeName","pathNode":{"id":413,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":226,"src":"2921:12:3"},"referencedDeclaration":226,"src":"2921:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"owner","nameLocation":"2957:5:3","nodeType":"VariableDeclaration","scope":468,"src":"2949:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"spender","nameLocation":"2980:7:3","nodeType":"VariableDeclaration","scope":468,"src":"2972:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"value","nameLocation":"3005:5:3","nodeType":"VariableDeclaration","scope":468,"src":"2997:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:3","nodeType":"VariableDeclaration","scope":468,"src":"3020:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"v","nameLocation":"3052:1:3","nodeType":"VariableDeclaration","scope":468,"src":"3046:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":424,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"r","nameLocation":"3071:1:3","nodeType":"VariableDeclaration","scope":468,"src":"3063:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"s","nameLocation":"3090:1:3","nodeType":"VariableDeclaration","scope":468,"src":"3082:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:3"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"3107:0:3"},"scope":507,"src":"2892:472:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":505,"nodeType":"Block","src":"3817:636:3","statements":[{"assignments":[478],"declarations":[{"constant":false,"id":478,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:3","nodeType":"VariableDeclaration","scope":505,"src":"4166:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":487,"initialValue":{"arguments":[{"id":484,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4220:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4200:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:3","typeDescriptions":{}}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":597,"src":"4192:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":488,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4275:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"IfStatement","src":"4271:176:3","trueBody":{"id":503,"nodeType":"Block","src":"4298:149:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":495,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4370:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:3","typeDescriptions":{}}}],"id":498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":493,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"4351:85:3"}]}}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"3370:372:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":506,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:3","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"token","nameLocation":"3783:5:3","nodeType":"VariableDeclaration","scope":506,"src":"3776:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":471,"nodeType":"UserDefinedTypeName","pathNode":{"id":470,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3776:6:3"},"referencedDeclaration":190,"src":"3776:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"data","nameLocation":"3803:4:3","nodeType":"VariableDeclaration","scope":506,"src":"3790:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:3"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"3817:0:3"},"scope":507,"src":"3747:706:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":508,"src":"707:3748:3","usedErrors":[]}],"src":"115:4341:3"},"id":3},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[837]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":509,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":837,"linearizedBaseContracts":[837],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":524,"nodeType":"Block","src":"1241:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":518,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"1465:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":517,"id":523,"nodeType":"Return","src":"1458:30:4"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"216:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:4","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"account","nameLocation":"1203:7:4","nodeType":"VariableDeclaration","scope":525,"src":"1195:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:4"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":525,"src":"1235:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:4"},"scope":837,"src":"1175:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"2483:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":536,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}],"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:4","typeDescriptions":{}}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":539,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2526:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"2493:73:4"},{"assignments":[545,null],"declarations":[{"constant":false,"id":545,"mutability":"mutable","name":"success","nameLocation":"2583:7:4","nodeType":"VariableDeclaration","scope":558,"src":"2578:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":552,"initialValue":{"arguments":[{"hexValue":"","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":546,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2596:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":548,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2618:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:4"},{"expression":{"arguments":[{"id":554,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"2647:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"2639:78:4"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"1501:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:4","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:4","nodeType":"VariableDeclaration","scope":559,"src":"2431:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"amount","nameLocation":"2466:6:4","nodeType":"VariableDeclaration","scope":559,"src":"2458:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:4"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"2483:0:4"},"scope":837,"src":"2412:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"3555:96:4","statements":[{"expression":{"arguments":[{"id":570,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3594:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3602:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":569,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[617,661],"referencedDeclaration":661,"src":"3572:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":568,"id":575,"nodeType":"Return","src":"3565:79:4"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"2730:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"target","nameLocation":"3496:6:4","nodeType":"VariableDeclaration","scope":577,"src":"3488:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"3517:4:4","nodeType":"VariableDeclaration","scope":577,"src":"3504:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"3541:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":566,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:4"},"scope":837,"src":"3466:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"4020:76:4","statements":[{"expression":{"arguments":[{"id":590,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4059:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4067:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":593,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4076:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":589,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[617,661],"referencedDeclaration":661,"src":"4037:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":588,"id":595,"nodeType":"Return","src":"4030:59:4"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"3657:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:4","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"target","nameLocation":"3912:6:4","nodeType":"VariableDeclaration","scope":597,"src":"3904:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"data","nameLocation":"3941:4:4","nodeType":"VariableDeclaration","scope":597,"src":"3928:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":581,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:4","nodeType":"VariableDeclaration","scope":597,"src":"3955:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":583,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"4006:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":586,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:4"},"scope":837,"src":"3873:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"4601:111:4","statements":[{"expression":{"arguments":[{"id":610,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4640:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"4648:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4654:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":609,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[617,661],"referencedDeclaration":661,"src":"4618:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":608,"id":615,"nodeType":"Return","src":"4611:94:4"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4102:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:4","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"target","nameLocation":"4506:6:4","nodeType":"VariableDeclaration","scope":617,"src":"4498:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"data","nameLocation":"4535:4:4","nodeType":"VariableDeclaration","scope":617,"src":"4522:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"4557:5:4","nodeType":"VariableDeclaration","scope":617,"src":"4549:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:4"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"4587:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":606,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:4"},"scope":837,"src":"4458:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":660,"nodeType":"Block","src":"5139:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":634,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}],"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:4","typeDescriptions":{}}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5182:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"5149:81:4"},{"assignments":[643,645],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"success","nameLocation":"5246:7:4","nodeType":"VariableDeclaration","scope":660,"src":"5241:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":642,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:4","nodeType":"VariableDeclaration","scope":660,"src":"5255:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":644,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":652,"initialValue":{"arguments":[{"id":650,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5308:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":646,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5282:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:4"},{"expression":{"arguments":[{"id":654,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5357:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":656,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"5374:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":657,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5386:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":653,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"5330:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":630,"id":659,"nodeType":"Return","src":"5323:76:4"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4718:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":661,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:4","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"target","nameLocation":"5008:6:4","nodeType":"VariableDeclaration","scope":661,"src":"5000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"data","nameLocation":"5037:4:4","nodeType":"VariableDeclaration","scope":661,"src":"5024:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"value","nameLocation":"5059:5:4","nodeType":"VariableDeclaration","scope":661,"src":"5051:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:4","nodeType":"VariableDeclaration","scope":661,"src":"5074:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":625,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:4"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":661,"src":"5125:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":628,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:4"},"scope":837,"src":"4960:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":677,"nodeType":"Block","src":"5683:97:4","statements":[{"expression":{"arguments":[{"id":672,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5719:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"5727:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":671,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[678,707],"referencedDeclaration":707,"src":"5700:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":670,"id":676,"nodeType":"Return","src":"5693:80:4"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"5412:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":678,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:4","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"target","nameLocation":"5619:6:4","nodeType":"VariableDeclaration","scope":678,"src":"5611:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"data","nameLocation":"5640:4:4","nodeType":"VariableDeclaration","scope":678,"src":"5627:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:4"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"5669:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":668,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:4"},"scope":837,"src":"5583:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"6122:168:4","statements":[{"assignments":[691,693],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"success","nameLocation":"6138:7:4","nodeType":"VariableDeclaration","scope":706,"src":"6133:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:4","nodeType":"VariableDeclaration","scope":706,"src":"6147:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":692,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":698,"initialValue":{"arguments":[{"id":696,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6192:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":694,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6174:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:4"},{"expression":{"arguments":[{"id":700,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6241:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"6249:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":702,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"6258:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":703,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"6270:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":699,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6214:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":689,"id":705,"nodeType":"Return","src":"6207:76:4"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"5786:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:4","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"target","nameLocation":"6009:6:4","nodeType":"VariableDeclaration","scope":707,"src":"6001:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"data","nameLocation":"6038:4:4","nodeType":"VariableDeclaration","scope":707,"src":"6025:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:4","nodeType":"VariableDeclaration","scope":707,"src":"6052:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:4"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"6108:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":687,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:4"},"scope":837,"src":"5964:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"6566:101:4","statements":[{"expression":{"arguments":[{"id":718,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6604:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6612:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":717,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[724,753],"referencedDeclaration":753,"src":"6583:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":716,"id":722,"nodeType":"Return","src":"6576:84:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6296:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:4","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"target","nameLocation":"6507:6:4","nodeType":"VariableDeclaration","scope":724,"src":"6499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"data","nameLocation":"6528:4:4","nodeType":"VariableDeclaration","scope":724,"src":"6515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:4"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"6552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":714,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:4"},"scope":837,"src":"6469:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"7008:170:4","statements":[{"assignments":[737,739],"declarations":[{"constant":false,"id":737,"mutability":"mutable","name":"success","nameLocation":"7024:7:4","nodeType":"VariableDeclaration","scope":752,"src":"7019:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":736,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:4","nodeType":"VariableDeclaration","scope":752,"src":"7033:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":738,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[{"id":742,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"7080:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":740,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"7060:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:4"},{"expression":{"arguments":[{"id":746,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"7129:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":747,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":748,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"7146:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":749,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"7158:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":745,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7102:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":735,"id":751,"nodeType":"Return","src":"7095:76:4"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"6673:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:4","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"target","nameLocation":"6900:6:4","nodeType":"VariableDeclaration","scope":753,"src":"6892:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"data","nameLocation":"6929:4:4","nodeType":"VariableDeclaration","scope":753,"src":"6916:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:4","nodeType":"VariableDeclaration","scope":753,"src":"6943:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":730,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:4"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"6994:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":733,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:4"},"scope":837,"src":"6853:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"7660:434:4","statements":[{"condition":{"id":767,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7674:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":789,"nodeType":"Block","src":"8030:58:4","statements":[{"expression":{"arguments":[{"id":785,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8052:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":786,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"8064:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":784,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"8044:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"8044:33:4"}]},"id":790,"nodeType":"IfStatement","src":"7670:418:4","trueBody":{"id":783,"nodeType":"Block","src":"7683:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":768,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"7701:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":780,"nodeType":"IfStatement","src":"7697:286:4","trueBody":{"id":779,"nodeType":"Block","src":"7725:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":774,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7927:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7916:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"7908:60:4"}]}},{"expression":{"id":781,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8003:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":766,"id":782,"nodeType":"Return","src":"7996:17:4"}]}}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"7184:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":792,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:4","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"target","nameLocation":"7519:6:4","nodeType":"VariableDeclaration","scope":792,"src":"7511:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"success","nameLocation":"7540:7:4","nodeType":"VariableDeclaration","scope":792,"src":"7535:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":757,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:4","nodeType":"VariableDeclaration","scope":792,"src":"7557:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":759,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:4","nodeType":"VariableDeclaration","scope":792,"src":"7590:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":761,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:4"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"7646:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":764,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:4"},"scope":837,"src":"7466:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"8475:135:4","statements":[{"condition":{"id":804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"8489:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":813,"nodeType":"Block","src":"8546:58:4","statements":[{"expression":{"arguments":[{"id":809,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8568:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":810,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"8580:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":808,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"8560:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"8560:33:4"}]},"id":814,"nodeType":"IfStatement","src":"8485:119:4","trueBody":{"id":807,"nodeType":"Block","src":"8498:42:4","statements":[{"expression":{"id":805,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8519:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":803,"id":806,"nodeType":"Return","src":"8512:17:4"}]}}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"8100:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:4","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"success","nameLocation":"8355:7:4","nodeType":"VariableDeclaration","scope":816,"src":"8350:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":794,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:4","nodeType":"VariableDeclaration","scope":816,"src":"8372:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:4","nodeType":"VariableDeclaration","scope":816,"src":"8405:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":798,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:4"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"8461:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":801,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:4"},"scope":837,"src":"8315:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"8699:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":823,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8775:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":833,"nodeType":"Block","src":"9105:45:4","statements":[{"expression":{"arguments":[{"id":830,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9126:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":829,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"ExpressionStatement","src":"9119:20:4"}]},"id":834,"nodeType":"IfStatement","src":"8771:379:4","trueBody":{"id":828,"nodeType":"Block","src":"8798:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:4"},"nodeType":"YulFunctionCall","src":"8997:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:4"},"nodeType":"YulFunctionCall","src":"9038:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:4"},"nodeType":"YulFunctionCall","src":"9031:44:4"},"nodeType":"YulExpressionStatement","src":"9031:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":818,"isOffset":false,"isSlot":false,"src":"9003:10:4","valueSize":1},{"declaration":818,"isOffset":false,"isSlot":false,"src":"9046:10:4","valueSize":1}],"id":827,"nodeType":"InlineAssembly","src":"8947:142:4"}]}}]},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:4","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:4","nodeType":"VariableDeclaration","scope":836,"src":"8633:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":817,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:4","nodeType":"VariableDeclaration","scope":836,"src":"8658:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":819,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:4"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"8699:0:4"},"scope":837,"src":"8616:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":838,"src":"194:8964:4","usedErrors":[]}],"src":"101:9058:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[859]},"id":860,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":859,"linearizedBaseContracts":[859],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":848,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":844,"id":847,"nodeType":"Return","src":"712:17:5"}]},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":859,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":853,"id":856,"nodeType":"Return","src":"819:15:5"}]},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":851,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":859,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":860,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[1472]},"id":1473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":861,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"230:1090:6","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":1472,"linearizedBaseContracts":[1472],"name":"EnumerableSet","nameLocation":"1329:13:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":870,"members":[{"constant":false,"id":865,"mutability":"mutable","name":"_values","nameLocation":"1853:7:6","nodeType":"VariableDeclaration","scope":870,"src":"1843:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1843:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":864,"nodeType":"ArrayTypeName","src":"1843:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"_indexes","nameLocation":"2021:8:6","nodeType":"VariableDeclaration","scope":870,"src":"1993:36:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":868,"keyType":{"id":866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2001:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1993:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1796:3:6","nodeType":"StructDefinition","scope":1472,"src":"1789:247:6","visibility":"public"},{"body":{"id":911,"nodeType":"Block","src":"2275:335:6","statements":[{"condition":{"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2289:22:6","subExpression":{"arguments":[{"id":882,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2300:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"2305:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":881,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2290:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":909,"nodeType":"Block","src":"2567:37:6","statements":[{"expression":{"hexValue":"66616c7365","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2588:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":880,"id":908,"nodeType":"Return","src":"2581:12:6"}]},"id":910,"nodeType":"IfStatement","src":"2285:319:6","trueBody":{"id":906,"nodeType":"Block","src":"2313:248:6","statements":[{"expression":{"arguments":[{"id":891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"2344:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":886,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2327:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"2327:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2327:16:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"2327:23:6"},{"expression":{"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":894,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2485:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":869,"src":"2485:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":898,"indexExpression":{"id":896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"2498:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2485:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":899,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2507:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"2507:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2507:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2485:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ExpressionStatement","src":"2485:40:6"},{"expression":{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2546:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":880,"id":905,"nodeType":"Return","src":"2539:11:6"}]}}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"2042:159:6","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2215:4:6","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"set","nameLocation":"2232:3:6","nodeType":"VariableDeclaration","scope":912,"src":"2220:15:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":873,"nodeType":"UserDefinedTypeName","pathNode":{"id":872,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"2220:3:6"},"referencedDeclaration":870,"src":"2220:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"value","nameLocation":"2245:5:6","nodeType":"VariableDeclaration","scope":912,"src":"2237:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2237:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2219:32:6"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"2269:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":878,"name":"bool","nodeType":"ElementaryTypeName","src":"2269:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2268:6:6"},"scope":1472,"src":"2206:404:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":995,"nodeType":"Block","src":"2850:1316:6","statements":[{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"valueIndex","nameLocation":"2968:10:6","nodeType":"VariableDeclaration","scope":995,"src":"2960:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":929,"initialValue":{"baseExpression":{"expression":{"id":925,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2981:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":869,"src":"2981:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":928,"indexExpression":{"id":927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"2994:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2981:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2960:40:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3015:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3015:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":993,"nodeType":"Block","src":"4123:37:6","statements":[{"expression":{"hexValue":"66616c7365","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4144:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":922,"id":992,"nodeType":"Return","src":"4137:12:6"}]},"id":994,"nodeType":"IfStatement","src":"3011:1149:6","trueBody":{"id":990,"nodeType":"Block","src":"3032:1085:6","statements":[{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3392:13:6","nodeType":"VariableDeclaration","scope":990,"src":"3384:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":938,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3408:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3421:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3408:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3384:38:6"},{"assignments":[940],"declarations":[{"constant":false,"id":940,"mutability":"mutable","name":"lastIndex","nameLocation":"3444:9:6","nodeType":"VariableDeclaration","scope":990,"src":"3436:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":946,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":941,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3456:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"3456:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3456:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3456:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3436:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":947,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"3497:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":948,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3510:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3497:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":974,"nodeType":"IfStatement","src":"3493:398:6","trueBody":{"id":973,"nodeType":"Block","src":"3525:366:6","statements":[{"assignments":[951],"declarations":[{"constant":false,"id":951,"mutability":"mutable","name":"lastValue","nameLocation":"3551:9:6","nodeType":"VariableDeclaration","scope":973,"src":"3543:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3543:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":956,"initialValue":{"baseExpression":{"expression":{"id":952,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3563:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"3563:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":955,"indexExpression":{"id":954,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"3575:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3563:22:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3543:42:6"},{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":957,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3685:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"3685:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":961,"indexExpression":{"id":959,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3697:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3685:26:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":962,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3714:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3685:38:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":964,"nodeType":"ExpressionStatement","src":"3685:38:6"},{"expression":{"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":965,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3797:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":869,"src":"3797:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":969,"indexExpression":{"id":967,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3810:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3797:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":970,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3823:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":972,"nodeType":"ExpressionStatement","src":"3797:36:6"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":975,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3969:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"3969:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3969:15:6","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3969:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"ExpressionStatement","src":"3969:17:6"},{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4054:26:6","subExpression":{"baseExpression":{"expression":{"id":982,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"4061:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":869,"src":"4061:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":985,"indexExpression":{"id":984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"4074:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4061:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"4054:26:6"},{"expression":{"hexValue":"74727565","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4102:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":922,"id":989,"nodeType":"Return","src":"4095:11:6"}]}}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"2616:157:6","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2787:7:6","nodeType":"FunctionDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"set","nameLocation":"2807:3:6","nodeType":"VariableDeclaration","scope":996,"src":"2795:15:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":915,"nodeType":"UserDefinedTypeName","pathNode":{"id":914,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"2795:3:6"},"referencedDeclaration":870,"src":"2795:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"value","nameLocation":"2820:5:6","nodeType":"VariableDeclaration","scope":996,"src":"2812:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2812:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:32:6"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":996,"src":"2844:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":920,"name":"bool","nodeType":"ElementaryTypeName","src":"2844:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2843:6:6"},"scope":1472,"src":"2778:1388:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1014,"nodeType":"Block","src":"4326:48:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1007,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"4343:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":869,"src":"4343:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1010,"indexExpression":{"id":1009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"4356:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4343:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4366:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4343:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1006,"id":1013,"nodeType":"Return","src":"4336:31:6"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"4172:70:6","text":" @dev Returns true if the value is in the set. O(1)."},"id":1015,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4256:9:6","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"set","nameLocation":"4278:3:6","nodeType":"VariableDeclaration","scope":1015,"src":"4266:15:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":999,"nodeType":"UserDefinedTypeName","pathNode":{"id":998,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"4266:3:6"},"referencedDeclaration":870,"src":"4266:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"value","nameLocation":"4291:5:6","nodeType":"VariableDeclaration","scope":1015,"src":"4283:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4283:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4265:32:6"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"4320:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1004,"name":"bool","nodeType":"ElementaryTypeName","src":"4320:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4319:6:6"},"scope":1472,"src":"4247:127:6","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1028,"nodeType":"Block","src":"4520:42:6","statements":[{"expression":{"expression":{"expression":{"id":1024,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4537:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"4537:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4537:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1023,"id":1027,"nodeType":"Return","src":"4530:25:6"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"4380:70:6","text":" @dev Returns the number of values on the set. O(1)."},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4464:7:6","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"set","nameLocation":"4484:3:6","nodeType":"VariableDeclaration","scope":1029,"src":"4472:15:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1018,"nodeType":"UserDefinedTypeName","pathNode":{"id":1017,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"4472:3:6"},"referencedDeclaration":870,"src":"4472:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4471:17:6"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1029,"src":"4511:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4510:9:6"},"scope":1472,"src":"4455:107:6","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1045,"nodeType":"Block","src":"4980:42:6","statements":[{"expression":{"baseExpression":{"expression":{"id":1040,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4997:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"4997:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1043,"indexExpression":{"id":1042,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5009:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4997:18:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1039,"id":1044,"nodeType":"Return","src":"4990:25:6"}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"4568:331:6","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4913:3:6","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"set","nameLocation":"4929:3:6","nodeType":"VariableDeclaration","scope":1046,"src":"4917:15:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1032,"nodeType":"UserDefinedTypeName","pathNode":{"id":1031,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"4917:3:6"},"referencedDeclaration":870,"src":"4917:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"index","nameLocation":"4942:5:6","nodeType":"VariableDeclaration","scope":1046,"src":"4934:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4916:32:6"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1046,"src":"4971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4971:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4970:9:6"},"scope":1472,"src":"4904:118:6","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1059,"nodeType":"Block","src":"5636:35:6","statements":[{"expression":{"expression":{"id":1056,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5653:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":865,"src":"5653:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1055,"id":1058,"nodeType":"Return","src":"5646:18:6"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"5028:529:6","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5571:7:6","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"set","nameLocation":"5591:3:6","nodeType":"VariableDeclaration","scope":1060,"src":"5579:15:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1049,"nodeType":"UserDefinedTypeName","pathNode":{"id":1048,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"5579:3:6"},"referencedDeclaration":870,"src":"5579:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5578:17:6"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1060,"src":"5618:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5618:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1053,"nodeType":"ArrayTypeName","src":"5618:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5617:18:6"},"scope":1472,"src":"5562:109:6","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1064,"members":[{"constant":false,"id":1063,"mutability":"mutable","name":"_inner","nameLocation":"5728:6:6","nodeType":"VariableDeclaration","scope":1064,"src":"5724:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1062,"nodeType":"UserDefinedTypeName","pathNode":{"id":1061,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"5724:3:6"},"referencedDeclaration":870,"src":"5724:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5703:10:6","nodeType":"StructDefinition","scope":1472,"src":"5696:45:6","visibility":"public"},{"body":{"id":1081,"nodeType":"Block","src":"5987:47:6","statements":[{"expression":{"arguments":[{"expression":{"id":1076,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6009:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"6009:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"6021:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1075,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6004:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6004:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1074,"id":1080,"nodeType":"Return","src":"5997:30:6"}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"5747:159:6","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5920:3:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"set","nameLocation":"5943:3:6","nodeType":"VariableDeclaration","scope":1082,"src":"5924:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1067,"nodeType":"UserDefinedTypeName","pathNode":{"id":1066,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1064,"src":"5924:10:6"},"referencedDeclaration":1064,"src":"5924:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"value","nameLocation":"5956:5:6","nodeType":"VariableDeclaration","scope":1082,"src":"5948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5948:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5923:39:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"5981:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"5981:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5980:6:6"},"scope":1472,"src":"5911:123:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1099,"nodeType":"Block","src":"6281:50:6","statements":[{"expression":{"arguments":[{"expression":{"id":1094,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"6306:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"6306:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"6318:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1093,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"6298:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6298:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1092,"id":1098,"nodeType":"Return","src":"6291:33:6"}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"6040:157:6","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6211:6:6","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"set","nameLocation":"6237:3:6","nodeType":"VariableDeclaration","scope":1100,"src":"6218:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1085,"nodeType":"UserDefinedTypeName","pathNode":{"id":1084,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1064,"src":"6218:10:6"},"referencedDeclaration":1064,"src":"6218:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"value","nameLocation":"6250:5:6","nodeType":"VariableDeclaration","scope":1100,"src":"6242:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6242:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:39:6"},"returnParameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"6275:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1090,"name":"bool","nodeType":"ElementaryTypeName","src":"6275:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6274:6:6"},"scope":1472,"src":"6202:129:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1117,"nodeType":"Block","src":"6498:52:6","statements":[{"expression":{"arguments":[{"expression":{"id":1112,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6525:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"6525:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6537:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1111,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6515:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6515:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1110,"id":1116,"nodeType":"Return","src":"6508:35:6"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"6337:70:6","text":" @dev Returns true if the value is in the set. O(1)."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6421:8:6","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"set","nameLocation":"6449:3:6","nodeType":"VariableDeclaration","scope":1118,"src":"6430:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1103,"nodeType":"UserDefinedTypeName","pathNode":{"id":1102,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1064,"src":"6430:10:6"},"referencedDeclaration":1064,"src":"6430:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"value","nameLocation":"6462:5:6","nodeType":"VariableDeclaration","scope":1118,"src":"6454:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6454:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6429:39:6"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"6492:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1108,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6491:6:6"},"scope":1472,"src":"6412:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"6703:43:6","statements":[{"expression":{"arguments":[{"expression":{"id":1128,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"6728:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"6728:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1127,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6720:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6720:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1126,"id":1131,"nodeType":"Return","src":"6713:26:6"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"6556:70:6","text":" @dev Returns the number of values in the set. O(1)."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6640:6:6","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"set","nameLocation":"6666:3:6","nodeType":"VariableDeclaration","scope":1133,"src":"6647:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1121,"nodeType":"UserDefinedTypeName","pathNode":{"id":1120,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1064,"src":"6647:10:6"},"referencedDeclaration":1064,"src":"6647:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6646:24:6"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"6694:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"6694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6693:9:6"},"scope":1472,"src":"6631:115:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"7171:46:6","statements":[{"expression":{"arguments":[{"expression":{"id":1145,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"7192:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"7192:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1147,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7204:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1144,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7188:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7188:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1143,"id":1149,"nodeType":"Return","src":"7181:29:6"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"6752:331:6","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7097:2:6","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"set","nameLocation":"7119:3:6","nodeType":"VariableDeclaration","scope":1151,"src":"7100:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1136,"nodeType":"UserDefinedTypeName","pathNode":{"id":1135,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1064,"src":"7100:10:6"},"referencedDeclaration":1064,"src":"7100:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"index","nameLocation":"7132:5:6","nodeType":"VariableDeclaration","scope":1151,"src":"7124:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7099:39:6"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"7162:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7162:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7161:9:6"},"scope":1472,"src":"7088:129:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"7838:219:6","statements":[{"assignments":[1165],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"store","nameLocation":"7865:5:6","nodeType":"VariableDeclaration","scope":1180,"src":"7848:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7848:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1164,"nodeType":"ArrayTypeName","src":"7848:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1170,"initialValue":{"arguments":[{"expression":{"id":1167,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"7881:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"7881:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1166,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"7873:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7873:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7848:44:6"},{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"result","nameLocation":"7919:6:6","nodeType":"VariableDeclaration","scope":1180,"src":"7902:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7902:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1174,"nodeType":"ArrayTypeName","src":"7902:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1176,"nodeType":"VariableDeclarationStatement","src":"7902:23:6"},{"AST":{"nodeType":"YulBlock","src":"7988:39:6","statements":[{"nodeType":"YulAssignment","src":"8002:15:6","value":{"name":"store","nodeType":"YulIdentifier","src":"8012:5:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8002:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1175,"isOffset":false,"isSlot":false,"src":"8002:6:6","valueSize":1},{"declaration":1165,"isOffset":false,"isSlot":false,"src":"8012:5:6","valueSize":1}],"id":1177,"nodeType":"InlineAssembly","src":"7979:48:6"},{"expression":{"id":1178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"8044:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1160,"id":1179,"nodeType":"Return","src":"8037:13:6"}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"7223:529:6","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7766:6:6","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"set","nameLocation":"7792:3:6","nodeType":"VariableDeclaration","scope":1181,"src":"7773:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1064,"src":"7773:10:6"},"referencedDeclaration":1064,"src":"7773:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1064_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7772:24:6"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1181,"src":"7820:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7820:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1158,"nodeType":"ArrayTypeName","src":"7820:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7819:18:6"},"scope":1472,"src":"7757:300:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1185,"members":[{"constant":false,"id":1184,"mutability":"mutable","name":"_inner","nameLocation":"8114:6:6","nodeType":"VariableDeclaration","scope":1185,"src":"8110:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1183,"nodeType":"UserDefinedTypeName","pathNode":{"id":1182,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"8110:3:6"},"referencedDeclaration":870,"src":"8110:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8089:10:6","nodeType":"StructDefinition","scope":1472,"src":"8082:45:6","visibility":"public"},{"body":{"id":1211,"nodeType":"Block","src":"8373:74:6","statements":[{"expression":{"arguments":[{"expression":{"id":1197,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8395:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"8395:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"8431:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1203,"name":"uint160","nodeType":"ElementaryTypeName","src":"8423:7:6","typeDescriptions":{}}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"8415:7:6","typeDescriptions":{}}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8407:7:6","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8407:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1196,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"8390:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8390:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1195,"id":1210,"nodeType":"Return","src":"8383:57:6"}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"8133:159:6","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8306:3:6","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"set","nameLocation":"8329:3:6","nodeType":"VariableDeclaration","scope":1212,"src":"8310:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1188,"nodeType":"UserDefinedTypeName","pathNode":{"id":1187,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"8310:10:6"},"referencedDeclaration":1185,"src":"8310:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"value","nameLocation":"8342:5:6","nodeType":"VariableDeclaration","scope":1212,"src":"8334:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"8334:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8309:39:6"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"8367:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1193,"name":"bool","nodeType":"ElementaryTypeName","src":"8367:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8366:6:6"},"scope":1472,"src":"8297:150:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1238,"nodeType":"Block","src":"8694:77:6","statements":[{"expression":{"arguments":[{"expression":{"id":1224,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"8719:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"8719:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"8755:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1230,"name":"uint160","nodeType":"ElementaryTypeName","src":"8747:7:6","typeDescriptions":{}}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"8739:7:6","typeDescriptions":{}}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8731:7:6","typeDescriptions":{}}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8731:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1223,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"8711:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8711:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1222,"id":1237,"nodeType":"Return","src":"8704:60:6"}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"8453:157:6","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1239,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8624:6:6","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"set","nameLocation":"8650:3:6","nodeType":"VariableDeclaration","scope":1239,"src":"8631:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1215,"nodeType":"UserDefinedTypeName","pathNode":{"id":1214,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"8631:10:6"},"referencedDeclaration":1185,"src":"8631:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"value","nameLocation":"8663:5:6","nodeType":"VariableDeclaration","scope":1239,"src":"8655:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"8655:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8630:39:6"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1239,"src":"8688:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1220,"name":"bool","nodeType":"ElementaryTypeName","src":"8688:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8687:6:6"},"scope":1472,"src":"8615:156:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"8938:79:6","statements":[{"expression":{"arguments":[{"expression":{"id":1251,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"8965:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"8965:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"9001:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1257,"name":"uint160","nodeType":"ElementaryTypeName","src":"8993:7:6","typeDescriptions":{}}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:6","typeDescriptions":{}}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8977:7:6","typeDescriptions":{}}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8977:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1250,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"8955:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8955:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1249,"id":1264,"nodeType":"Return","src":"8948:62:6"}]},"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"8777:70:6","text":" @dev Returns true if the value is in the set. O(1)."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8861:8:6","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"set","nameLocation":"8889:3:6","nodeType":"VariableDeclaration","scope":1266,"src":"8870:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1242,"nodeType":"UserDefinedTypeName","pathNode":{"id":1241,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"8870:10:6"},"referencedDeclaration":1185,"src":"8870:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"value","nameLocation":"8902:5:6","nodeType":"VariableDeclaration","scope":1266,"src":"8894:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8869:39:6"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"8932:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1247,"name":"bool","nodeType":"ElementaryTypeName","src":"8932:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8931:6:6"},"scope":1472,"src":"8852:165:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1280,"nodeType":"Block","src":"9170:43:6","statements":[{"expression":{"arguments":[{"expression":{"id":1276,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"9195:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"9195:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1275,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"9187:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9187:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1274,"id":1279,"nodeType":"Return","src":"9180:26:6"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"9023:70:6","text":" @dev Returns the number of values in the set. O(1)."},"id":1281,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9107:6:6","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"set","nameLocation":"9133:3:6","nodeType":"VariableDeclaration","scope":1281,"src":"9114:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1269,"nodeType":"UserDefinedTypeName","pathNode":{"id":1268,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"9114:10:6"},"referencedDeclaration":1185,"src":"9114:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9113:24:6"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1281,"src":"9161:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"9161:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9160:9:6"},"scope":1472,"src":"9098:115:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1307,"nodeType":"Block","src":"9638:73:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1299,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9683:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"9683:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1301,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"9695:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1298,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9679:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"9671:7:6","typeDescriptions":{}}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1294,"name":"uint160","nodeType":"ElementaryTypeName","src":"9663:7:6","typeDescriptions":{}}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:6","typeDescriptions":{}}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9655:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1291,"id":1306,"nodeType":"Return","src":"9648:56:6"}]},"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"9219:331:6","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1308,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9564:2:6","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"set","nameLocation":"9586:3:6","nodeType":"VariableDeclaration","scope":1308,"src":"9567:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1284,"nodeType":"UserDefinedTypeName","pathNode":{"id":1283,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"9567:10:6"},"referencedDeclaration":1185,"src":"9567:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"index","nameLocation":"9599:5:6","nodeType":"VariableDeclaration","scope":1308,"src":"9591:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9591:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9566:39:6"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1308,"src":"9629:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"9629:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9628:9:6"},"scope":1472,"src":"9555:156:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1337,"nodeType":"Block","src":"10332:219:6","statements":[{"assignments":[1322],"declarations":[{"constant":false,"id":1322,"mutability":"mutable","name":"store","nameLocation":"10359:5:6","nodeType":"VariableDeclaration","scope":1337,"src":"10342:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10342:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1321,"nodeType":"ArrayTypeName","src":"10342:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1327,"initialValue":{"arguments":[{"expression":{"id":1324,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"10375:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"10375:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1323,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"10367:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10367:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10342:44:6"},{"assignments":[1332],"declarations":[{"constant":false,"id":1332,"mutability":"mutable","name":"result","nameLocation":"10413:6:6","nodeType":"VariableDeclaration","scope":1337,"src":"10396:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1331,"nodeType":"ArrayTypeName","src":"10396:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1333,"nodeType":"VariableDeclarationStatement","src":"10396:23:6"},{"AST":{"nodeType":"YulBlock","src":"10482:39:6","statements":[{"nodeType":"YulAssignment","src":"10496:15:6","value":{"name":"store","nodeType":"YulIdentifier","src":"10506:5:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10496:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1332,"isOffset":false,"isSlot":false,"src":"10496:6:6","valueSize":1},{"declaration":1322,"isOffset":false,"isSlot":false,"src":"10506:5:6","valueSize":1}],"id":1334,"nodeType":"InlineAssembly","src":"10473:48:6"},{"expression":{"id":1335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"10538:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1317,"id":1336,"nodeType":"Return","src":"10531:13:6"}]},"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"9717:529:6","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1338,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10260:6:6","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"set","nameLocation":"10286:3:6","nodeType":"VariableDeclaration","scope":1338,"src":"10267:22:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1311,"nodeType":"UserDefinedTypeName","pathNode":{"id":1310,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"10267:10:6"},"referencedDeclaration":1185,"src":"10267:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10266:24:6"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1338,"src":"10314:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"10314:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1315,"nodeType":"ArrayTypeName","src":"10314:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10313:18:6"},"scope":1472,"src":"10251:300:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":1342,"members":[{"constant":false,"id":1341,"mutability":"mutable","name":"_inner","nameLocation":"10602:6:6","nodeType":"VariableDeclaration","scope":1342,"src":"10598:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1340,"nodeType":"UserDefinedTypeName","pathNode":{"id":1339,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":870,"src":"10598:3:6"},"referencedDeclaration":870,"src":"10598:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10580:7:6","nodeType":"StructDefinition","scope":1472,"src":"10573:42:6","visibility":"public"},{"body":{"id":1362,"nodeType":"Block","src":"10858:56:6","statements":[{"expression":{"arguments":[{"expression":{"id":1354,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"10880:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"10880:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"10900:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10892:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10892:7:6","typeDescriptions":{}}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10892:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1353,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"10875:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10875:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1352,"id":1361,"nodeType":"Return","src":"10868:39:6"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"10621:159:6","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10794:3:6","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"set","nameLocation":"10814:3:6","nodeType":"VariableDeclaration","scope":1363,"src":"10798:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1345,"nodeType":"UserDefinedTypeName","pathNode":{"id":1344,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"10798:7:6"},"referencedDeclaration":1342,"src":"10798:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"value","nameLocation":"10827:5:6","nodeType":"VariableDeclaration","scope":1363,"src":"10819:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10797:36:6"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1363,"src":"10852:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1350,"name":"bool","nodeType":"ElementaryTypeName","src":"10852:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10851:6:6"},"scope":1472,"src":"10785:129:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1383,"nodeType":"Block","src":"11158:59:6","statements":[{"expression":{"arguments":[{"expression":{"id":1375,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"11183:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"11183:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"11203:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11195:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11195:7:6","typeDescriptions":{}}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11195:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1374,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11175:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11175:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1373,"id":1382,"nodeType":"Return","src":"11168:42:6"}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"10920:157:6","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1384,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11091:6:6","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"set","nameLocation":"11114:3:6","nodeType":"VariableDeclaration","scope":1384,"src":"11098:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"11098:7:6"},"referencedDeclaration":1342,"src":"11098:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"11127:5:6","nodeType":"VariableDeclaration","scope":1384,"src":"11119:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"11119:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11097:36:6"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1384,"src":"11152:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1371,"name":"bool","nodeType":"ElementaryTypeName","src":"11152:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11151:6:6"},"scope":1472,"src":"11082:135:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1404,"nodeType":"Block","src":"11381:61:6","statements":[{"expression":{"arguments":[{"expression":{"id":1396,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"11408:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"11408:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"11428:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11420:7:6","typeDescriptions":{}}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11420:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1395,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"11398:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11398:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1394,"id":1403,"nodeType":"Return","src":"11391:44:6"}]},"documentation":{"id":1385,"nodeType":"StructuredDocumentation","src":"11223:70:6","text":" @dev Returns true if the value is in the set. O(1)."},"id":1405,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11307:8:6","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"set","nameLocation":"11332:3:6","nodeType":"VariableDeclaration","scope":1405,"src":"11316:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1387,"nodeType":"UserDefinedTypeName","pathNode":{"id":1386,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"11316:7:6"},"referencedDeclaration":1342,"src":"11316:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"value","nameLocation":"11345:5:6","nodeType":"VariableDeclaration","scope":1405,"src":"11337:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"11337:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11315:36:6"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1405,"src":"11375:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"11375:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11374:6:6"},"scope":1472,"src":"11298:144:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1419,"nodeType":"Block","src":"11592:43:6","statements":[{"expression":{"arguments":[{"expression":{"id":1415,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"11617:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"11617:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1414,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11609:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11609:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1413,"id":1418,"nodeType":"Return","src":"11602:26:6"}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"11448:70:6","text":" @dev Returns the number of values in the set. O(1)."},"id":1420,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11532:6:6","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"set","nameLocation":"11555:3:6","nodeType":"VariableDeclaration","scope":1420,"src":"11539:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1408,"nodeType":"UserDefinedTypeName","pathNode":{"id":1407,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"11539:7:6"},"referencedDeclaration":1342,"src":"11539:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11538:21:6"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1420,"src":"11583:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"11583:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11582:9:6"},"scope":1472,"src":"11523:112:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1440,"nodeType":"Block","src":"12057:55:6","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1434,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"12086:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"12086:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1436,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"12098:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1433,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12082:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12074:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"12074:7:6","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12074:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1430,"id":1439,"nodeType":"Return","src":"12067:38:6"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"11641:331:6","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11986:2:6","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"set","nameLocation":"12005:3:6","nodeType":"VariableDeclaration","scope":1441,"src":"11989:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1423,"nodeType":"UserDefinedTypeName","pathNode":{"id":1422,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"11989:7:6"},"referencedDeclaration":1342,"src":"11989:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"index","nameLocation":"12018:5:6","nodeType":"VariableDeclaration","scope":1441,"src":"12010:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"12010:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11988:36:6"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1441,"src":"12048:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"12048:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12047:9:6"},"scope":1472,"src":"11977:135:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1470,"nodeType":"Block","src":"12730:219:6","statements":[{"assignments":[1455],"declarations":[{"constant":false,"id":1455,"mutability":"mutable","name":"store","nameLocation":"12757:5:6","nodeType":"VariableDeclaration","scope":1470,"src":"12740:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12740:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1454,"nodeType":"ArrayTypeName","src":"12740:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[{"expression":{"id":1457,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"12773:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"12773:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$870_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1456,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12765:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$870_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12765:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12740:44:6"},{"assignments":[1465],"declarations":[{"constant":false,"id":1465,"mutability":"mutable","name":"result","nameLocation":"12811:6:6","nodeType":"VariableDeclaration","scope":1470,"src":"12794:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"12794:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ArrayTypeName","src":"12794:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1466,"nodeType":"VariableDeclarationStatement","src":"12794:23:6"},{"AST":{"nodeType":"YulBlock","src":"12880:39:6","statements":[{"nodeType":"YulAssignment","src":"12894:15:6","value":{"name":"store","nodeType":"YulIdentifier","src":"12904:5:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12894:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1465,"isOffset":false,"isSlot":false,"src":"12894:6:6","valueSize":1},{"declaration":1455,"isOffset":false,"isSlot":false,"src":"12904:5:6","valueSize":1}],"id":1467,"nodeType":"InlineAssembly","src":"12871:48:6"},{"expression":{"id":1468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"12936:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1450,"id":1469,"nodeType":"Return","src":"12929:13:6"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"12118:529:6","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12661:6:6","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"set","nameLocation":"12684:3:6","nodeType":"VariableDeclaration","scope":1471,"src":"12668:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1444,"nodeType":"UserDefinedTypeName","pathNode":{"id":1443,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"12668:7:6"},"referencedDeclaration":1342,"src":"12668:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1342_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12667:21:6"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1471,"src":"12712:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"12712:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ArrayTypeName","src":"12712:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12711:18:6"},"scope":1472,"src":"12652:297:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1473,"src":"1321:11630:6","usedErrors":[]}],"src":"205:12747:6"},"id":6},"contracts/Claimable.sol":{"ast":{"absolutePath":"contracts/Claimable.sol","exportedSymbols":{"Claimable":[1558],"Context":[859],"Ownable":[112]},"id":1559,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1474,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1559,"sourceUnit":113,"src":"57:52:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1476,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"142:7:7"},"id":1477,"nodeType":"InheritanceSpecifier","src":"142:7:7"}],"canonicalName":"Claimable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1558,"linearizedBaseContracts":[1558,112,859],"name":"Claimable","nameLocation":"129:9:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1479,"mutability":"mutable","name":"_pendingOwner","nameLocation":"172:13:7","nodeType":"VariableDeclaration","scope":1558,"src":"156:29:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f5","id":1483,"name":"PendingOwnerSet","nameLocation":"198:15:7","nodeType":"EventDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"indexed":true,"mutability":"mutable","name":"pendingOwner","nameLocation":"230:12:7","nodeType":"VariableDeclaration","scope":1483,"src":"214:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"214:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"213:30:7"},"src":"192:52:7"},{"body":{"id":1491,"nodeType":"Block","src":"264:45:7","statements":[{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1486,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"274:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1487,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"290:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"290:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"274:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1490,"nodeType":"ExpressionStatement","src":"274:28:7"}]},"id":1492,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[],"src":"261:2:7"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"264:0:7"},"scope":1558,"src":"250:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1507,"nodeType":"Block","src":"350:130:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1496,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"368:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"368:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1498,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"384:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"368:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d61626c653a206e6f742070656e64696e67206f776e6572","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"399:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d1e7dfd90f1a9f5ff7eb15697c8849def6789d3dd644f128b7a0451146bc601","typeString":"literal_string \"Claimable: not pending owner\""},"value":"Claimable: not pending owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d1e7dfd90f1a9f5ff7eb15697c8849def6789d3dd644f128b7a0451146bc601","typeString":"literal_string \"Claimable: not pending owner\""}],"id":1495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"360:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"360:70:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"360:70:7"},{"expression":{"arguments":[{"id":1504,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"459:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"440:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"440:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"440:33:7"}]},"functionSelector":"4e71e0c8","id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"claimOwnership","nameLocation":"324:14:7","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"338:2:7"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"350:0:7"},"scope":1558,"src":"315:165:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[91],"body":{"id":1524,"nodeType":"Block","src":"565:81:7","statements":[{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1516,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"575:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1517,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"591:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"575:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1519,"nodeType":"ExpressionStatement","src":"575:24:7"},{"eventCall":{"arguments":[{"id":1521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"630:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1520,"name":"PendingOwnerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"614:15:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"614:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1523,"nodeType":"EmitStatement","src":"609:30:7"}]},"functionSelector":"f2fde38b","id":1525,"implemented":true,"kind":"function","modifiers":[{"id":1514,"kind":"modifierInvocation","modifierName":{"id":1513,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"555:9:7"},"nodeType":"ModifierInvocation","src":"555:9:7"}],"name":"transferOwnership","nameLocation":"495:17:7","nodeType":"FunctionDefinition","overrides":{"id":1512,"nodeType":"OverrideSpecifier","overrides":[],"src":"546:8:7"},"parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"newOwner","nameLocation":"521:8:7","nodeType":"VariableDeclaration","scope":1525,"src":"513:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:18:7"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[],"src":"565:0:7"},"scope":1558,"src":"486:160:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[68],"body":{"id":1548,"nodeType":"Block","src":"715:138:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1532,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"733:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"758:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"750:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:7","typeDescriptions":{}}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"750:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"733:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d61626c653a2070656e64696e67206f776e6572206e6f74207a65726f2061646472657373","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"762:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ad45a29af4d1a11fffff7cb7a07ebeb55a5b27ee49d3e4255f3e6f2fe8d4aa1","typeString":"literal_string \"Claimable: pending owner not zero address\""},"value":"Claimable: pending owner not zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ad45a29af4d1a11fffff7cb7a07ebeb55a5b27ee49d3e4255f3e6f2fe8d4aa1","typeString":"literal_string \"Claimable: pending owner not zero address\""}],"id":1531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"725:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"725:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"725:81:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"835:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:7","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"835:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1541,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"816:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"816:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"ExpressionStatement","src":"816:30:7"}]},"functionSelector":"715018a6","id":1549,"implemented":true,"kind":"function","modifiers":[{"id":1529,"kind":"modifierInvocation","modifierName":{"id":1528,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"705:9:7"},"nodeType":"ModifierInvocation","src":"705:9:7"}],"name":"renounceOwnership","nameLocation":"661:17:7","nodeType":"FunctionDefinition","overrides":{"id":1527,"nodeType":"OverrideSpecifier","overrides":[],"src":"696:8:7"},"parameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"678:2:7"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"715:0:7"},"scope":1558,"src":"652:201:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1556,"nodeType":"Block","src":"921:37:7","statements":[{"expression":{"id":1554,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"938:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1553,"id":1555,"nodeType":"Return","src":"931:20:7"}]},"functionSelector":"e30c3978","id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"868:12:7","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"880:2:7"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"912:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"911:9:7"},"scope":1558,"src":"859:99:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1559,"src":"111:849:7","usedErrors":[]}],"src":"32:929:7"},"id":7},"contracts/allocation-vester/AllocationVester.sol":{"ast":{"absolutePath":"contracts/allocation-vester/AllocationVester.sol","exportedSymbols":{"Address":[837],"AllocationVester":[2100],"Claimable":[1558],"Context":[859],"EnumerableSet":[1472],"IERC20":[190],"IERC20Permit":[226],"Ownable":[112],"SafeERC20":[507]},"id":2101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1560,"literals":["solidity","0.8",".13"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1561,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":508,"src":"57:65:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":1562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":1473,"src":"123:65:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Claimable.sol","file":"../Claimable.sol","id":1563,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":1559,"src":"189:26:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1565,"name":"Claimable","nodeType":"IdentifierPath","referencedDeclaration":1558,"src":"471:9:8"},"id":1566,"nodeType":"InheritanceSpecifier","src":"471:9:8"}],"canonicalName":"AllocationVester","contractDependencies":[],"contractKind":"contract","documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"217:224:8","text":" @title Allocation Vester\n @author shung for Arcanum\n @notice This contract allows allocating and distributing tokens to recipients by vesting (i.e.,\n streaming) it for arbitrary durations for each recipient."},"fullyImplemented":true,"id":2100,"linearizedBaseContracts":[2100,1558,112,859],"name":"AllocationVester","nameLocation":"451:16:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1570,"libraryName":{"id":1567,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":507,"src":"493:9:8"},"nodeType":"UsingForDirective","src":"487:27:8","typeName":{"id":1569,"nodeType":"UserDefinedTypeName","pathNode":{"id":1568,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"507:6:8"},"referencedDeclaration":190,"src":"507:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}},{"global":false,"id":1574,"libraryName":{"id":1571,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":1472,"src":"525:13:8"},"nodeType":"UsingForDirective","src":"519:49:8","typeName":{"id":1573,"nodeType":"UserDefinedTypeName","pathNode":{"id":1572,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"543:24:8"},"referencedDeclaration":1185,"src":"543:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"canonicalName":"AllocationVester.Member","id":1583,"members":[{"constant":false,"id":1576,"mutability":"mutable","name":"reserve","nameLocation":"900:7:8","nodeType":"VariableDeclaration","scope":1583,"src":"893:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1575,"name":"uint96","nodeType":"ElementaryTypeName","src":"893:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"stash","nameLocation":"924:5:8","nodeType":"VariableDeclaration","scope":1583,"src":"917:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1577,"name":"uint96","nodeType":"ElementaryTypeName","src":"917:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"lastUpdate","nameLocation":"946:10:8","nodeType":"VariableDeclaration","scope":1583,"src":"939:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1579,"name":"uint64","nodeType":"ElementaryTypeName","src":"939:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"rate","nameLocation":"974:4:8","nodeType":"VariableDeclaration","scope":1583,"src":"966:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Member","nameLocation":"876:6:8","nodeType":"StructDefinition","scope":2100,"src":"869:116:8","visibility":"public"},{"constant":false,"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"991:79:8","text":" @notice The mapping of member addresses to their properties."},"functionSelector":"08ae4b0c","id":1589,"mutability":"mutable","name":"members","nameLocation":"1109:7:8","nodeType":"VariableDeclaration","scope":2100,"src":"1075:41:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Member_$1583_storage_$","typeString":"mapping(address => struct AllocationVester.Member)"},"typeName":{"id":1588,"keyType":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"1083:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1075:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Member_$1583_storage_$","typeString":"mapping(address => struct AllocationVester.Member)"},"valueType":{"id":1587,"nodeType":"UserDefinedTypeName","pathNode":{"id":1586,"name":"Member","nodeType":"IdentifierPath","referencedDeclaration":1583,"src":"1094:6:8"},"referencedDeclaration":1583,"src":"1094:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"1123:80:8","text":" @notice The set of members who have any remaining allocation."},"id":1593,"mutability":"mutable","name":"_membersAddresses","nameLocation":"1241:17:8","nodeType":"VariableDeclaration","scope":2100,"src":"1208:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1592,"nodeType":"UserDefinedTypeName","pathNode":{"id":1591,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"1208:24:8"},"referencedDeclaration":1185,"src":"1208:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"1265:70:8","text":" @notice The address of the token being distributed."},"functionSelector":"fc0c546a","id":1597,"mutability":"immutable","name":"token","nameLocation":"1364:5:8","nodeType":"VariableDeclaration","scope":2100,"src":"1340:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":1596,"nodeType":"UserDefinedTypeName","pathNode":{"id":1595,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1340:6:8"},"referencedDeclaration":190,"src":"1340:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"1376:86:8","text":" @notice The total amount of tokens set to be vested to all members."},"functionSelector":"cd3293de","id":1600,"mutability":"mutable","name":"reserve","nameLocation":"1482:7:8","nodeType":"VariableDeclaration","scope":2100,"src":"1467:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"1496:67:8","text":" @notice The minimum duration a vesting can last."},"functionSelector":"56715761","id":1604,"mutability":"mutable","name":"minDuration","nameLocation":"1583:11:8","nodeType":"VariableDeclaration","scope":2100,"src":"1568:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1568:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1597:7:8","subdenomination":"weeks","typeDescriptions":{"typeIdentifier":"t_rational_1209600_by_1","typeString":"int_const 1209600"},"value":"2"},"visibility":"public"},{"anonymous":false,"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"1611:311:8","text":" @notice Emit an event whenever an allocation is changed.\n @param member The address of the member whose allocation was changed.\n @param allocation The new amount of tokens allocated for the member.\n @param duration The time it will take to distribute the whole `allocation`."},"eventSelector":"159e9e56dec3d6bf3e3c20510a7b005a0b9f89bd991ff9eb0c4f387b1fd3682d","id":1613,"name":"AllocationSet","nameLocation":"1933:13:8","nodeType":"EventDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"indexed":true,"mutability":"mutable","name":"member","nameLocation":"1963:6:8","nodeType":"VariableDeclaration","scope":1613,"src":"1947:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"1947:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"indexed":false,"mutability":"mutable","name":"allocation","nameLocation":"1979:10:8","nodeType":"VariableDeclaration","scope":1613,"src":"1971:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1611,"indexed":false,"mutability":"mutable","name":"duration","nameLocation":"1999:8:8","nodeType":"VariableDeclaration","scope":1613,"src":"1991:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1991:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1946:62:8"},"src":"1927:82:8"},{"anonymous":false,"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"2015:197:8","text":" @notice Emit an event whenever the `minDuration` is changed.\n @param newMinDuration The minimum duration that can be defined for any allocation set after\n this event."},"eventSelector":"850b0d4898947ead6a23251622e8c2ea46d217fa5ff2c1f06638f92e91880bfe","id":1618,"name":"MinDurationSet","nameLocation":"2223:14:8","nodeType":"EventDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"indexed":false,"mutability":"mutable","name":"newMinDuration","nameLocation":"2246:14:8","nodeType":"VariableDeclaration","scope":1618,"src":"2238:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2238:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2237:24:8"},"src":"2217:45:8"},{"anonymous":false,"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"2268:237:8","text":" @notice Emit an event whenever a member's pending rewards are harvested.\n @param member The address of the member whose rewards were harvested.\n @param amount The amount of reward tokens that was harvested."},"eventSelector":"121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf","id":1625,"name":"Harvested","nameLocation":"2516:9:8","nodeType":"EventDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"indexed":true,"mutability":"mutable","name":"member","nameLocation":"2542:6:8","nodeType":"VariableDeclaration","scope":1625,"src":"2526:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2558:6:8","nodeType":"VariableDeclaration","scope":1625,"src":"2550:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2525:40:8"},"src":"2510:56:8"},{"anonymous":false,"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"2572:197:8","text":" @notice Emit an event when unallocated tokens from the contract are withdrawn by the admin.\n @param amount The amount of reward tokens that was withdrawn from the contract."},"eventSelector":"430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b56","id":1630,"name":"Withdrawn","nameLocation":"2780:9:8","nodeType":"EventDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2798:6:8","nodeType":"VariableDeclaration","scope":1630,"src":"2790:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2790:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2789:16:8"},"src":"2774:32:8"},{"body":{"id":1652,"nodeType":"Block","src":"3002:228:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"distributionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"3073:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3102:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3094:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"3094:7:8","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3094:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3073:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7a65726f2061646472657373","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3106:14:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7","typeString":"literal_string \"zero address\""},"value":"zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7","typeString":"literal_string \"zero address\""}],"id":1636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3065:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3065:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"3065:56:8"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3190:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1648,"name":"distributionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"3205:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1647,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3198:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3198:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"src":"3190:33:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1651,"nodeType":"ExpressionStatement","src":"3190:33:8"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"2812:146:8","text":" @notice Constructs a new AllocationVester contract.\n @param distributionToken The address of the token to be distributed."},"id":1653,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"distributionToken","nameLocation":"2983:17:8","nodeType":"VariableDeclaration","scope":1653,"src":"2975:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"2975:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2974:27:8"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"3002:0:8"},"scope":2100,"src":"2963:267:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1735,"nodeType":"Block","src":"3353:865:8","statements":[{"assignments":[1659],"declarations":[{"constant":false,"id":1659,"mutability":"mutable","name":"member","nameLocation":"3429:6:8","nodeType":"VariableDeclaration","scope":1735,"src":"3414:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member"},"typeName":{"id":1658,"nodeType":"UserDefinedTypeName","pathNode":{"id":1657,"name":"Member","nodeType":"IdentifierPath","referencedDeclaration":1583,"src":"3414:6:8"},"referencedDeclaration":1583,"src":"3414:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member"}},"visibility":"internal"}],"id":1664,"initialValue":{"baseExpression":{"id":1660,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"3438:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Member_$1583_storage_$","typeString":"mapping(address => struct AllocationVester.Member storage ref)"}},"id":1663,"indexExpression":{"expression":{"id":1661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3446:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3446:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage","typeString":"struct AllocationVester.Member storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3414:43:8"},{"assignments":[1666],"declarations":[{"constant":false,"id":1666,"mutability":"mutable","name":"amount","nameLocation":"3528:6:8","nodeType":"VariableDeclaration","scope":1735,"src":"3520:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3520:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1671,"initialValue":{"arguments":[{"expression":{"id":1668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3552:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3552:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1667,"name":"pendingHarvest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"3537:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3537:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3520:43:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3581:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3591:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3581:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f2070656e64696e672068617276657374","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3594:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecc0a3380755da3568d31401b31e8b3872e01c3836eb4b80fe4866793cf44c8e","typeString":"literal_string \"no pending harvest\""},"value":"no pending harvest"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecc0a3380755da3568d31401b31e8b3872e01c3836eb4b80fe4866793cf44c8e","typeString":"literal_string \"no pending harvest\""}],"id":1672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3573:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3573:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1678,"nodeType":"ExpressionStatement","src":"3573:42:8"},{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1679,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3667:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdate","nodeType":"MemberAccess","referencedDeclaration":1580,"src":"3667:17:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1684,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3694:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3694:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3687:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1682,"name":"uint64","nodeType":"ElementaryTypeName","src":"3687:6:8","typeDescriptions":{}}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3687:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3667:43:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1688,"nodeType":"ExpressionStatement","src":"3667:43:8"},{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1689,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3720:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stash","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"3720:12:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3735:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3720:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1694,"nodeType":"ExpressionStatement","src":"3720:16:8"},{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1695,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3746:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"reserve","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"3746:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":1700,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3771:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3764:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1698,"name":"uint96","nodeType":"ElementaryTypeName","src":"3764:6:8","typeDescriptions":{}}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3764:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3746:32:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1703,"nodeType":"ExpressionStatement","src":"3746:32:8"},{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3839:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1705,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3850:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3839:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"3839:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1708,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3948:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reserve","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"3948:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3966:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3948:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1720,"nodeType":"IfStatement","src":"3944:86:8","trueBody":{"id":1719,"nodeType":"Block","src":"3969:61:8","statements":[{"expression":{"arguments":[{"expression":{"id":1715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4008:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4008:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1712,"name":"_membersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"3983:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"3983:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1185_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1185_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3983:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1718,"nodeType":"ExpressionStatement","src":"3983:36:8"}]}},{"expression":{"arguments":[{"expression":{"id":1724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4148:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4148:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"4160:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1721,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4129:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"4129:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4129:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"4129:38:8"},{"eventCall":{"arguments":[{"expression":{"id":1730,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4192:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4192:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"4204:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"Harvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4182:9:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4182:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"EmitStatement","src":"4177:34:8"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"3236:84:8","text":" @notice External function to claim pending rewards of the caller."},"functionSelector":"4641257d","id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"harvest","nameLocation":"3334:7:8","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[],"src":"3341:2:8"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"3353:0:8"},"scope":2100,"src":"3325:893:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1764,"nodeType":"Block","src":"4442:301:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1745,"name":"unreserved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"4530:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4530:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1747,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"4546:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4530:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c6f772062616c616e6365","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4554:13:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7708efe8f9e439a7d89f7815a7ac4039dfdc1f0bb479f643603c5e8dde3f73f1","typeString":"literal_string \"low balance\""},"value":"low balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7708efe8f9e439a7d89f7815a7ac4039dfdc1f0bb479f643603c5e8dde3f73f1","typeString":"literal_string \"low balance\""}],"id":1744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4522:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4522:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1751,"nodeType":"ExpressionStatement","src":"4522:46:8"},{"expression":{"arguments":[{"expression":{"id":1755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4685:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4685:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1757,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"4697:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1752,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4666:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"4666:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4666:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"4666:38:8"},{"eventCall":{"arguments":[{"id":1761,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"4729:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"4719:9:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4719:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"EmitStatement","src":"4714:22:8"}]},"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"4224:160:8","text":" @notice External restricted function to withdraw unallocated tokens from the contract.\n @param amount The amount of tokens to withdraw."},"functionSelector":"2e1a7d4d","id":1765,"implemented":true,"kind":"function","modifiers":[{"id":1742,"kind":"modifierInvocation","modifierName":{"id":1741,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4432:9:8"},"nodeType":"ModifierInvocation","src":"4432:9:8"}],"name":"withdraw","nameLocation":"4398:8:8","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"amount","nameLocation":"4415:6:8","nodeType":"VariableDeclaration","scope":1765,"src":"4407:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4407:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4406:16:8"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[],"src":"4442:0:8"},"scope":2100,"src":"4389:354:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2004,"nodeType":"Block","src":"5252:3285:8","statements":[{"assignments":[1781],"declarations":[{"constant":false,"id":1781,"mutability":"mutable","name":"length","nameLocation":"5334:6:8","nodeType":"VariableDeclaration","scope":2004,"src":"5326:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1784,"initialValue":{"expression":{"id":1782,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5343:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5343:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5326:32:8"},{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"tmpReserve","nameLocation":"5376:10:8","nodeType":"VariableDeclaration","scope":2004,"src":"5368:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"5368:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1788,"initialValue":{"id":1787,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"5389:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5368:28:8"},{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"mutability":"mutable","name":"tmpMinDuration","nameLocation":"5414:14:8","nodeType":"VariableDeclaration","scope":2004,"src":"5406:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"5406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1792,"initialValue":{"id":1791,"name":"minDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"5431:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5406:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1794,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5521:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5531:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5521:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656d707479206172726179","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5534:13:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a4cf96a83d0a38785b2b1a0589568d8f7d392fad654884d30a3f6c440683520","typeString":"literal_string \"empty array\""},"value":"empty array"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a4cf96a83d0a38785b2b1a0589568d8f7d392fad654884d30a3f6c440683520","typeString":"literal_string \"empty array\""}],"id":1793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5513:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5513:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1799,"nodeType":"ExpressionStatement","src":"5513:35:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5579:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1802,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"5589:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5589:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5579:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5611:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1806,"name":"durations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"5621:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5621:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5611:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5579:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76617279696e672d6c656e67746820617272617973","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5651:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_14ceb87ab7af812e92c4e3834f3009df06974b8f915e614b208227f229f7b205","typeString":"literal_string \"varying-length arrays\""},"value":"varying-length arrays"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14ceb87ab7af812e92c4e3834f3009df06974b8f915e614b208227f229f7b205","typeString":"literal_string \"varying-length arrays\""}],"id":1800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5558:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5558:126:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"5558:126:8"},{"body":{"id":1985,"nodeType":"Block","src":"5778:2512:8","statements":[{"assignments":[1823],"declarations":[{"constant":false,"id":1823,"mutability":"mutable","name":"account","nameLocation":"5855:7:8","nodeType":"VariableDeclaration","scope":1985,"src":"5847:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"5847:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1827,"initialValue":{"baseExpression":{"id":1824,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5865:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1826,"indexExpression":{"id":1825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5874:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5865:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5847:29:8"},{"assignments":[1829],"declarations":[{"constant":false,"id":1829,"mutability":"mutable","name":"allocation","nameLocation":"5898:10:8","nodeType":"VariableDeclaration","scope":1985,"src":"5890:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1833,"initialValue":{"baseExpression":{"id":1830,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"5911:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1832,"indexExpression":{"id":1831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5923:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5911:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5890:35:8"},{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"duration","nameLocation":"5947:8:8","nodeType":"VariableDeclaration","scope":1985,"src":"5939:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1839,"initialValue":{"baseExpression":{"id":1836,"name":"durations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"5958:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1838,"indexExpression":{"id":1837,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5968:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5958:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:31:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6056:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6075:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6067:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"6067:7:8","typeDescriptions":{}}},"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6067:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6056:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"62616420726563697069656e74","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6079:15:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4acb2f2dca5bce49f355e714f7431e47358d79e6463dc0451fed1877b7a6eb2","typeString":"literal_string \"bad recipient\""},"value":"bad recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4acb2f2dca5bce49f355e714f7431e47358d79e6463dc0451fed1877b7a6eb2","typeString":"literal_string \"bad recipient\""}],"id":1840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6048:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6048:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"ExpressionStatement","src":"6048:47:8"},{"assignments":[1852],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"member","nameLocation":"6204:6:8","nodeType":"VariableDeclaration","scope":1985,"src":"6189:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member"},"typeName":{"id":1851,"nodeType":"UserDefinedTypeName","pathNode":{"id":1850,"name":"Member","nodeType":"IdentifierPath","referencedDeclaration":1583,"src":"6189:6:8"},"referencedDeclaration":1583,"src":"6189:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member"}},"visibility":"internal"}],"id":1856,"initialValue":{"baseExpression":{"id":1853,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"6213:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Member_$1583_storage_$","typeString":"mapping(address => struct AllocationVester.Member storage ref)"}},"id":1855,"indexExpression":{"id":1854,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6221:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6213:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage","typeString":"struct AllocationVester.Member storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6189:40:8"},{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"tmpMemberReserve","nameLocation":"6250:16:8","nodeType":"VariableDeclaration","scope":1985,"src":"6243:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1857,"name":"uint96","nodeType":"ElementaryTypeName","src":"6243:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1861,"initialValue":{"expression":{"id":1859,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"6269:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reserve","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"6269:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"6243:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"tmpMemberReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6358:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6378:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6358:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"nodeType":"IfStatement","src":"6354:511:8","trueBody":{"id":1891,"nodeType":"Block","src":"6381:484:8","statements":[{"assignments":[1866],"declarations":[{"constant":false,"id":1866,"mutability":"mutable","name":"tmpMemberStash","nameLocation":"6490:14:8","nodeType":"VariableDeclaration","scope":1891,"src":"6483:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1865,"name":"uint96","nodeType":"ElementaryTypeName","src":"6483:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1873,"initialValue":{"arguments":[{"arguments":[{"id":1870,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6529:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1869,"name":"pendingHarvest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"6514:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6514:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6507:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1867,"name":"uint96","nodeType":"ElementaryTypeName","src":"6507:6:8","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6507:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"6483:55:8"},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1874,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"6556:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stash","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"6556:12:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1877,"name":"tmpMemberStash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6571:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6556:29:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1879,"nodeType":"ExpressionStatement","src":"6556:29:8"},{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1880,"name":"tmpReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6682:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"tmpMemberReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6697:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1882,"name":"tmpMemberStash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6716:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6697:33:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"id":1884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6696:35:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6682:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1886,"nodeType":"ExpressionStatement","src":"6682:49:8"},{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1887,"name":"tmpMemberReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6817:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1888,"name":"tmpMemberStash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6836:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6817:33:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1890,"nodeType":"ExpressionStatement","src":"6817:33:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"6933:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6947:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6933:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"tmpMemberReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7868:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7888:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7868:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1971,"nodeType":"IfStatement","src":"7864:169:8","trueBody":{"id":1970,"nodeType":"Block","src":"7891:142:8","statements":[{"expression":{"arguments":[{"id":1967,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"8010:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1964,"name":"_membersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"7985:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"7985:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1185_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1185_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7985:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1969,"nodeType":"ExpressionStatement","src":"7985:33:8"}]}},"id":1972,"nodeType":"IfStatement","src":"6929:1104:8","trueBody":{"id":1960,"nodeType":"Block","src":"6950:908:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"7076:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1898,"name":"tmpMinDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"7088:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7076:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73686f72742076657374696e67206475726174696f6e","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7104:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_91549934cd3ddb3b69848a33bb3e6f2f6c6e5aeb53ecdfce1296983a8e8f9ae3","typeString":"literal_string \"short vesting duration\""},"value":"short vesting duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91549934cd3ddb3b69848a33bb3e6f2f6c6e5aeb53ecdfce1296983a8e8f9ae3","typeString":"literal_string \"short vesting duration\""}],"id":1896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7068:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7068:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"ExpressionStatement","src":"7068:61:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"7155:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7174:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1906,"name":"uint96","nodeType":"ElementaryTypeName","src":"7174:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1905,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7169:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7169:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7169:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"7155:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420616c6c6f636174696f6e","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7187:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d696d95254cfbddd7f9c4536fe32fc4aff9a76fa75ac9e194155d25390e9a490","typeString":"literal_string \"invalid allocation\""},"value":"invalid allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d696d95254cfbddd7f9c4536fe32fc4aff9a76fa75ac9e194155d25390e9a490","typeString":"literal_string \"invalid allocation\""}],"id":1903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7147:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7147:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"ExpressionStatement","src":"7147:61:8"},{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1914,"name":"tmpReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"7282:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1915,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"7296:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7282:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1917,"nodeType":"ExpressionStatement","src":"7282:24:8"},{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"rate","nameLocation":"7410:4:8","nodeType":"VariableDeclaration","scope":1960,"src":"7402:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"7402:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1923,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"7417:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1921,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"7430:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7417:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7402:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7464:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7472:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7464:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72617465207472756e636174656420746f207a65726f","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7475:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_454b82c3995abe0e17d215facdf0517a8bee51b5d963b4725d38a121058a9200","typeString":"literal_string \"rate truncated to zero\""},"value":"rate truncated to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_454b82c3995abe0e17d215facdf0517a8bee51b5d963b4725d38a121058a9200","typeString":"literal_string \"rate truncated to zero\""}],"id":1924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7456:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7456:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1930,"nodeType":"ExpressionStatement","src":"7456:44:8"},{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1931,"name":"tmpMemberReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7564:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1934,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"7591:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7584:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1932,"name":"uint96","nodeType":"ElementaryTypeName","src":"7584:6:8","typeDescriptions":{}}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7584:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"7564:38:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1937,"nodeType":"ExpressionStatement","src":"7564:38:8"},{"expression":{"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1938,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"7620:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"7620:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1941,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7634:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7620:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1943,"nodeType":"ExpressionStatement","src":"7620:18:8"},{"expression":{"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1944,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"7656:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdate","nodeType":"MemberAccess","referencedDeclaration":1580,"src":"7656:17:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1949,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7683:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7683:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7676:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1947,"name":"uint64","nodeType":"ElementaryTypeName","src":"7676:6:8","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7676:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7656:43:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1953,"nodeType":"ExpressionStatement","src":"7656:43:8"},{"expression":{"arguments":[{"id":1957,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"7835:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1954,"name":"_membersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"7813:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"7813:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1185_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1185_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7813:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1959,"nodeType":"ExpressionStatement","src":"7813:30:8"}]}},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1973,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"8129:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member storage pointer"}},"id":1975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"reserve","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"8129:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1976,"name":"tmpMemberReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8146:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"8129:33:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1978,"nodeType":"ExpressionStatement","src":"8129:33:8"},{"eventCall":{"arguments":[{"id":1980,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"8249:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1981,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"8258:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1982,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8270:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1979,"name":"AllocationSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8235:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8235:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1984,"nodeType":"EmitStatement","src":"8230:49:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1816,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5761:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1817,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5765:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5761:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1986,"initializationExpression":{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"i","nameLocation":"5758:1:8","nodeType":"VariableDeclaration","scope":1986,"src":"5750:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1815,"nodeType":"VariableDeclarationStatement","src":"5750:9:8"},"loopExpression":{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5773:3:8","subExpression":{"id":1819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5775:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1821,"nodeType":"ExpressionStatement","src":"5773:3:8"},"nodeType":"ForStatement","src":"5745:2545:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1992,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8401:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AllocationVester_$2100","typeString":"contract AllocationVester"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AllocationVester_$2100","typeString":"contract AllocationVester"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8393:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"8393:7:8","typeDescriptions":{}}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8393:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1988,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"8377:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"8377:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8377:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1995,"name":"tmpReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"8411:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8377:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c6f772062616c616e6365","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8423:13:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7708efe8f9e439a7d89f7815a7ac4039dfdc1f0bb479f643603c5e8dde3f73f1","typeString":"literal_string \"low balance\""},"value":"low balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7708efe8f9e439a7d89f7815a7ac4039dfdc1f0bb479f643603c5e8dde3f73f1","typeString":"literal_string \"low balance\""}],"id":1987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8369:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8369:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1999,"nodeType":"ExpressionStatement","src":"8369:68:8"},{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2000,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8510:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2001,"name":"tmpReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"8520:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8510:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"8510:20:8"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"4750:333:8","text":" @notice External restricted function to add or removes members, or change their allocations.\n @param accounts An array of member addresses.\n @param allocations The amount of tokens to allocate to the corresponding member.\n @param durations The duration the corresponding allocation will last for."},"functionSelector":"182a89e6","id":2005,"implemented":true,"kind":"function","modifiers":[{"id":1778,"kind":"modifierInvocation","modifierName":{"id":1777,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5242:9:8"},"nodeType":"ModifierInvocation","src":"5242:9:8"}],"name":"setAllocations","nameLocation":"5097:14:8","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"accounts","nameLocation":"5140:8:8","nodeType":"VariableDeclaration","scope":2005,"src":"5121:27:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"5121:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1768,"nodeType":"ArrayTypeName","src":"5121:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"allocations","nameLocation":"5177:11:8","nodeType":"VariableDeclaration","scope":2005,"src":"5158:30:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"5158:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ArrayTypeName","src":"5158:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"durations","nameLocation":"5217:9:8","nodeType":"VariableDeclaration","scope":2005,"src":"5198:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"5198:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ArrayTypeName","src":"5198:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5111:121:8"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[],"src":"5252:0:8"},"scope":2100,"src":"5088:3449:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2028,"nodeType":"Block","src":"8780:250:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"newMinDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"8851:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8869:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8851:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7a65726f206475726174696f6e","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8872:15:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5d4526f829be465ccbde8596dd019082d9287da875164147f9d3b62eb798278","typeString":"literal_string \"zero duration\""},"value":"zero duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5d4526f829be465ccbde8596dd019082d9287da875164147f9d3b62eb798278","typeString":"literal_string \"zero duration\""}],"id":2013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8843:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8843:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2019,"nodeType":"ExpressionStatement","src":"8843:45:8"},{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"minDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"8950:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2021,"name":"newMinDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"8964:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8950:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"8950:28:8"},{"eventCall":{"arguments":[{"id":2025,"name":"newMinDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"9008:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2024,"name":"MinDurationSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"8993:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2027,"nodeType":"EmitStatement","src":"8988:35:8"}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"8543:165:8","text":" @notice External restricted function to change the minimum duration.\n @param newMinDuration The new minimum duration a vesting can last for."},"functionSelector":"1674bade","id":2029,"implemented":true,"kind":"function","modifiers":[{"id":2011,"kind":"modifierInvocation","modifierName":{"id":2010,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"8770:9:8"},"nodeType":"ModifierInvocation","src":"8770:9:8"}],"name":"setMinDuration","nameLocation":"8722:14:8","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"newMinDuration","nameLocation":"8745:14:8","nodeType":"VariableDeclaration","scope":2029,"src":"8737:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"8737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8736:24:8"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"8780:0:8"},"scope":2100,"src":"8713:317:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2040,"nodeType":"Block","src":"9254:50:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2036,"name":"_membersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"9271:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1185_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":1338,"src":"9271:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1185_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$1185_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9271:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2035,"id":2039,"nodeType":"Return","src":"9264:33:8"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"9036:150:8","text":" @notice External view function to get all active the members.\n @return The list of all members who have remaining allocation."},"functionSelector":"9eab5253","id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"getMembers","nameLocation":"9200:10:8","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"9210:2:8"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"9236:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"9236:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2033,"nodeType":"ArrayTypeName","src":"9236:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9235:18:8"},"scope":2100,"src":"9191:113:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2081,"nodeType":"Block","src":"9608:413:8","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"member","nameLocation":"9675:6:8","nodeType":"VariableDeclaration","scope":2081,"src":"9661:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_memory_ptr","typeString":"struct AllocationVester.Member"},"typeName":{"id":2050,"nodeType":"UserDefinedTypeName","pathNode":{"id":2049,"name":"Member","nodeType":"IdentifierPath","referencedDeclaration":1583,"src":"9661:6:8"},"referencedDeclaration":1583,"src":"9661:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage_ptr","typeString":"struct AllocationVester.Member"}},"visibility":"internal"}],"id":2055,"initialValue":{"baseExpression":{"id":2052,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"9684:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Member_$1583_storage_$","typeString":"mapping(address => struct AllocationVester.Member storage ref)"}},"id":2054,"indexExpression":{"id":2053,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"9692:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9684:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_storage","typeString":"struct AllocationVester.Member storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9661:39:8"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"amount","nameLocation":"9805:6:8","nodeType":"VariableDeclaration","scope":2081,"src":"9797:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"9797:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2071,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2058,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9814:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_memory_ptr","typeString":"struct AllocationVester.Member memory"}},"id":2059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stash","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"9814:12:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2060,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9831:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9831:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2062,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9849:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_memory_ptr","typeString":"struct AllocationVester.Member memory"}},"id":2063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdate","nodeType":"MemberAccess","referencedDeclaration":1580,"src":"9849:17:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"9831:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9830:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2066,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9870:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_memory_ptr","typeString":"struct AllocationVester.Member memory"}},"id":2067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"9870:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9830:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9829:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:68:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9797:85:8"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"9965:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2073,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9974:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_memory_ptr","typeString":"struct AllocationVester.Member memory"}},"id":2074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reserve","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"9974:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"9965:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2078,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"10008:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9965:49:8","trueExpression":{"expression":{"id":2076,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9991:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$1583_memory_ptr","typeString":"struct AllocationVester.Member memory"}},"id":2077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reserve","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"9991:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2048,"id":2080,"nodeType":"Return","src":"9958:56:8"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"9310:222:8","text":" @notice Public view function to get the amount of pending reward tokens of a member.\n @param account The address of the member.\n @return The amount of harvestable reward tokens of the member."},"functionSelector":"07d41e79","id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"pendingHarvest","nameLocation":"9546:14:8","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"account","nameLocation":"9569:7:8","nodeType":"VariableDeclaration","scope":2082,"src":"9561:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"9561:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9560:17:8"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"9599:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9598:9:8"},"scope":2100,"src":"9537:484:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2098,"nodeType":"Block","src":"10267:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2092,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10308:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AllocationVester_$2100","typeString":"contract AllocationVester"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AllocationVester_$2100","typeString":"contract AllocationVester"}],"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10300:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2090,"name":"address","nodeType":"ElementaryTypeName","src":"10300:7:8","typeDescriptions":{}}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10300:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2088,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"10284:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10284:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2095,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"10317:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10284:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2087,"id":2097,"nodeType":"Return","src":"10277:47:8"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"10027:183:8","text":" @notice Public view function to get the amount of unallocated reward tokens in the contract.\n @return The amount of unallocated reward tokens in the contract."},"functionSelector":"c6728c6c","id":2099,"implemented":true,"kind":"function","modifiers":[],"name":"unreserved","nameLocation":"10224:10:8","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"10234:2:8"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2099,"src":"10258:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"10258:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10257:9:8"},"scope":2100,"src":"10215:116:8","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2101,"src":"442:9891:8","usedErrors":[]}],"src":"32:10302:8"},"id":8}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af0ecc1eb63bf1dc52d26e0036a4b06e2a2f513010f8f900e75705e0fd37d2ae64736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xE 0xCC 0x1E 0xB6 EXTCODESIZE CALL 0xDC MSTORE 0xD2 PUSH15 0x36A4B06E2A2F513010F8F900E757 SDIV 0xE0 REVERT CALLDATACOPY 0xD2 0xAE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"707:3748:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af0ecc1eb63bf1dc52d26e0036a4b06e2a2f513010f8f900e75705e0fd37d2ae64736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xE 0xCC 0x1E 0xB6 EXTCODESIZE CALL 0xDC MSTORE 0xD2 PUSH15 0x36A4B06E2A2F513010F8F900E757 SDIV 0xE0 REVERT CALLDATACOPY 0xD2 0xAE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"707:3748:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018f389ba182aa341baf055646bd98fab8b7b4384bc9f2c217378ff97209fe16964736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURN DUP10 0xBA XOR 0x2A LOG3 COINBASE 0xBA CREATE SSTORE PUSH5 0x6BD98FAB8B PUSH28 0x4384BC9F2C217378FF97209FE16964736F6C634300080D0033000000 ","sourceMap":"194:8964:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018f389ba182aa341baf055646bd98fab8b7b4384bc9f2c217378ff97209fe16964736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURN DUP10 0xBA XOR 0x2A LOG3 COINBASE 0xBA CREATE SSTORE PUSH5 0x6BD98FAB8B PUSH28 0x4384BC9F2C217378FF97209FE16964736F6C634300080D0033000000 ","sourceMap":"194:8964:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b845c2f29e65f2135dfa1fad97b249109e9fa7596179df51e6839b67990633764736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL DUP5 0x5C 0x2F 0x29 0xE6 0x5F 0x21 CALLDATALOAD 0xDF LOG1 STATICCALL 0xD9 PUSH28 0x249109E9FA7596179DF51E6839B67990633764736F6C634300080D00 CALLER ","sourceMap":"1321:11630:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1321:11630:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b845c2f29e65f2135dfa1fad97b249109e9fa7596179df51e6839b67990633764736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL DUP5 0x5C 0x2F 0x29 0xE6 0x5F 0x21 CALLDATALOAD 0xDF LOG1 STATICCALL 0xD9 PUSH28 0x249109E9FA7596179DF51E6839B67990633764736F6C634300080D00 CALLER ","sourceMap":"1321:11630:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}"}},"contracts/Claimable.sol":{"Claimable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pendingOwner","type":"address"}],"name":"PendingOwnerSet","type":"event"},{"inputs":[],"name":"claimOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"claimOwnership()":"4e71e0c8","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Claimable.sol\":\"Claimable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Claimable.sol\":{\"keccak256\":\"0x8f1319603974d71dd2be410db2c4879a10c37cda7ffb2b34ec787a07908ca2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3591b60b502da192846c4fcb7cb68f5b705c9209c3c053de0055fc22f1f71a25\",\"dweb:/ipfs/QmVHuVHoqNF1eNiwnDtc9ZdGotNQNRFriqB8A8LFhVq1cJ\"]}},\"version\":1}"}},"contracts/allocation-vester/AllocationVester.sol":{"AllocationVester":{"abi":[{"inputs":[{"internalType":"address","name":"distributionToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"member","type":"address"},{"indexed":false,"internalType":"uint256","name":"allocation","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"duration","type":"uint256"}],"name":"AllocationSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"member","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Harvested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newMinDuration","type":"uint256"}],"name":"MinDurationSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pendingOwner","type":"address"}],"name":"PendingOwnerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"claimOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"members","outputs":[{"internalType":"uint96","name":"reserve","type":"uint96"},{"internalType":"uint96","name":"stash","type":"uint96"},{"internalType":"uint64","name":"lastUpdate","type":"uint64"},{"internalType":"uint256","name":"rate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pendingHarvest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"allocations","type":"uint256[]"},{"internalType":"uint256[]","name":"durations","type":"uint256[]"}],"name":"setAllocations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMinDuration","type":"uint256"}],"name":"setMinDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unreserved","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1492":{"entryPoint":null,"id":1492,"parameterSlots":0,"returnSlots":0},"@_1653":{"entryPoint":null,"id":1653,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_849":{"entryPoint":null,"id":849,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":171,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:647:9","statements":[{"nodeType":"YulBlock","src":"6:3:9","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:9","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:9"},"nodeType":"YulFunctionCall","src":"143:12:9"},"nodeType":"YulExpressionStatement","src":"143:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:9"},"nodeType":"YulFunctionCall","src":"112:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:9"},"nodeType":"YulFunctionCall","src":"108:32:9"},"nodeType":"YulIf","src":"105:52:9"},{"nodeType":"YulVariableDeclaration","src":"166:29:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:9"},"nodeType":"YulFunctionCall","src":"179:16:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:9"},"nodeType":"YulFunctionCall","src":"260:12:9"},"nodeType":"YulExpressionStatement","src":"260:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:9"},"nodeType":"YulFunctionCall","src":"239:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:9"},"nodeType":"YulFunctionCall","src":"235:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:9"},"nodeType":"YulFunctionCall","src":"224:31:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:9"},"nodeType":"YulFunctionCall","src":"214:42:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:9"},"nodeType":"YulFunctionCall","src":"207:50:9"},"nodeType":"YulIf","src":"204:70:9"},{"nodeType":"YulAssignment","src":"283:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:9"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:9","type":""}],"src":"14:290:9"},{"body":{"nodeType":"YulBlock","src":"483:162:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"511:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"493:6:9"},"nodeType":"YulFunctionCall","src":"493:21:9"},"nodeType":"YulExpressionStatement","src":"493:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:9"},"nodeType":"YulFunctionCall","src":"530:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:9","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"523:6:9"},"nodeType":"YulFunctionCall","src":"523:30:9"},"nodeType":"YulExpressionStatement","src":"523:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"573:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"584:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:9"},"nodeType":"YulFunctionCall","src":"569:18:9"},{"hexValue":"7a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"589:14:9","type":"","value":"zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:9"},"nodeType":"YulFunctionCall","src":"562:42:9"},"nodeType":"YulExpressionStatement","src":"562:42:9"},{"nodeType":"YulAssignment","src":"613:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"625:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"636:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"621:3:9"},"nodeType":"YulFunctionCall","src":"621:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"613:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"460:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"474:4:9","type":""}],"src":"309:336:9"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040526212750060065534801561001757600080fd5b5060405161185c38038061185c833981016040819052610036916100fb565b61003f336100ab565b600180546001600160a01b031916331790556001600160a01b03811661009a5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015260640160405180910390fd5b6001600160a01b031660805261012b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010d57600080fd5b81516001600160a01b038116811461012457600080fd5b9392505050565b6080516116fa61016260003960008181610299015281816108b1015281816109eb01528181610b820152610d3b01526116fa6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063cd3293de11610066578063cd3293de14610267578063e30c397814610270578063f2fde38b14610281578063fc0c546a1461029457600080fd5b8063715018a61461021d5780638da5cb5b146102255780639eab52531461024a578063c6728c6c1461025f57600080fd5b80632e1a7d4d116100d35780632e1a7d4d146101f15780634641257d146102045780634e71e0c81461020c578063567157611461021457600080fd5b806307d41e791461010557806308ae4b0c1461012b5780631674bade146101c9578063182a89e6146101de575b600080fd5b61011861011336600461134e565b6102bb565b6040519081526020015b60405180910390f35b61018a61013936600461134e565b600260205260009081526040902080546001909101546bffffffffffffffffffffffff808316926c01000000000000000000000000810490911691600160c01b90910467ffffffffffffffff169084565b604080516bffffffffffffffffffffffff958616815294909316602085015267ffffffffffffffff909116918301919091526060820152608001610122565b6101dc6101d7366004611377565b610398565b005b6101dc6101ec3660046113dc565b610431565b6101dc6101ff366004611377565b61097f565b6101dc610a42565b6101dc610be2565b61011860065481565b6101dc610c5c565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610122565b610252610ced565b6040516101229190611476565b610118610cfe565b61011860055481565b6001546001600160a01b0316610232565b6101dc61028f36600461134e565b610db0565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0381166000908152600260209081526040808320815160808101835281546bffffffffffffffffffffffff80821683526c0100000000000000000000000082041694820194909452600160c01b90930467ffffffffffffffff169183018290526001015460608301819052839161033990426114d9565b61034391906114f0565b82602001516bffffffffffffffffffffffff16610360919061150f565b82519091506bffffffffffffffffffffffff16811161037f5780610390565b81516bffffffffffffffffffffffff165b949350505050565b6103a0610e1a565b806000036103f55760405162461bcd60e51b815260206004820152600d60248201527f7a65726f206475726174696f6e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b60068190556040518181527f850b0d4898947ead6a23251622e8c2ea46d217fa5ff2c1f06638f92e91880bfe906020015b60405180910390a150565b610439610e1a565b60055460065486919060008390036104935760405162461bcd60e51b815260206004820152600b60248201527f656d70747920617272617900000000000000000000000000000000000000000060448201526064016103ec565b82861480156104a157508284145b6104ed5760405162461bcd60e51b815260206004820152601560248201527f76617279696e672d6c656e67746820617272617973000000000000000000000060448201526064016103ec565b60005b838110156108805760008a8a8381811061050c5761050c611527565b9050602002016020810190610521919061134e565b9050600089898481811061053757610537611527565b905060200201359050600088888581811061055457610554611527565b60200291909101359150506001600160a01b0383166105b55760405162461bcd60e51b815260206004820152600d60248201527f62616420726563697069656e740000000000000000000000000000000000000060448201526064016103ec565b6001600160a01b038316600090815260026020526040902080546bffffffffffffffffffffffff16801561065c5760006105ee866102bb565b83547fffffffffffffffff000000000000000000000000ffffffffffffffffffffffff166c010000000000000000000000006bffffffffffffffffffffffff831602178455905061063f818361153d565b610657906bffffffffffffffffffffffff168a6114d9565b985090505b83156107cd57868310156106b25760405162461bcd60e51b815260206004820152601660248201527f73686f72742076657374696e67206475726174696f6e0000000000000000000060448201526064016103ec565b6bffffffffffffffffffffffff84111561070e5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420616c6c6f636174696f6e000000000000000000000000000060448201526064016103ec565b610718848961150f565b97506000610726848661156a565b9050806000036107785760405162461bcd60e51b815260206004820152601660248201527f72617465207472756e636174656420746f207a65726f0000000000000000000060448201526064016103ec565b610782858361158c565b60018401829055835477ffffffffffffffffffffffffffffffffffffffffffffffff16600160c01b4267ffffffffffffffff160217845591506107c6600387610e74565b50506107f0565b806bffffffffffffffffffffffff166000036107f0576107ee600386610e92565b505b81547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff821617825560408051858152602081018590526001600160a01b038716917f159e9e56dec3d6bf3e3c20510a7b005a0b9f89bd991ff9eb0c4f387b1fd3682d910160405180910390a2505050505080610879906115bc565b90506104f0565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092491906115d6565b10156109725760405162461bcd60e51b815260206004820152600b60248201527f6c6f772062616c616e636500000000000000000000000000000000000000000060448201526064016103ec565b5060055550505050505050565b610987610e1a565b80610990610cfe565b10156109de5760405162461bcd60e51b815260206004820152600b60248201527f6c6f772062616c616e636500000000000000000000000000000000000000000060448201526064016103ec565b610a126001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610ea7565b6040518181527f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b5690602001610426565b33600081815260026020526040812091610a5b906102bb565b905080600003610aad5760405162461bcd60e51b815260206004820152601260248201527f6e6f2070656e64696e672068617276657374000000000000000000000000000060448201526064016103ec565b81546bffffffffffffffffffffffff908116600160c01b4267ffffffffffffffff16027fffffffffffffffff000000000000000000000000ffffffffffffffffffffffff81168217855583928592600092610b0c92869291161761153d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508060056000828254610b4c91906114d9565b909155505081546bffffffffffffffffffffffff16600003610b7557610b73600333610e92565b505b610ba96001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610ea7565b60405181815233907f121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf9060200160405180910390a25050565b6001546001600160a01b0316336001600160a01b031614610c455760405162461bcd60e51b815260206004820152601c60248201527f436c61696d61626c653a206e6f742070656e64696e67206f776e65720000000060448201526064016103ec565b600154610c5a906001600160a01b0316610f2c565b565b610c64610e1a565b6001546001600160a01b031615610ce35760405162461bcd60e51b815260206004820152602960248201527f436c61696d61626c653a2070656e64696e67206f776e6572206e6f74207a657260448201527f6f2061646472657373000000000000000000000000000000000000000000000060648201526084016103ec565b610c5a6000610f2c565b6060610cf96003610f94565b905090565b6005546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da691906115d6565b610cf991906114d9565b610db8610e1a565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f590600090a250565b6000546001600160a01b03163314610c5a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ec565b6000610e89836001600160a01b038416610fa8565b90505b92915050565b6000610e89836001600160a01b038416610ff7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610f279084906110ea565b505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606000610fa1836111cf565b9392505050565b6000818152600183016020526040812054610fef57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610e8c565b506000610e8c565b600081815260018301602052604081205480156110e057600061101b6001836114d9565b855490915060009061102f906001906114d9565b905081811461109457600086600001828154811061104f5761104f611527565b906000526020600020015490508087600001848154811061107257611072611527565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806110a5576110a56115ef565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610e8c565b6000915050610e8c565b600061113f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661122b9092919063ffffffff16565b805190915015610f27578080602001905181019061115d9190611605565b610f275760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103ec565b60608160000180548060200260200160405190810160405280929190818152602001828054801561121f57602002820191906000526020600020905b81548152602001906001019080831161120b575b50505050509050919050565b6060610390848460008585600080866001600160a01b031685876040516112529190611657565b60006040518083038185875af1925050503d806000811461128f576040519150601f19603f3d011682016040523d82523d6000602084013e611294565b606091505b50915091506112a5878383876112b0565b979650505050505050565b6060831561131f578251600003611318576001600160a01b0385163b6113185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ec565b5081610390565b61039083838151156113345781518083602001fd5b8060405162461bcd60e51b81526004016103ec9190611673565b60006020828403121561136057600080fd5b81356001600160a01b0381168114610fa157600080fd5b60006020828403121561138957600080fd5b5035919050565b60008083601f8401126113a257600080fd5b50813567ffffffffffffffff8111156113ba57600080fd5b6020830191508360208260051b85010111156113d557600080fd5b9250929050565b600080600080600080606087890312156113f557600080fd5b863567ffffffffffffffff8082111561140d57600080fd5b6114198a838b01611390565b9098509650602089013591508082111561143257600080fd5b61143e8a838b01611390565b9096509450604089013591508082111561145757600080fd5b5061146489828a01611390565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b818110156114b75783516001600160a01b031683529284019291840191600101611492565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156114eb576114eb6114c3565b500390565b600081600019048311821515161561150a5761150a6114c3565b500290565b60008219821115611522576115226114c3565b500190565b634e487b7160e01b600052603260045260246000fd5b60006bffffffffffffffffffffffff83811690831681811015611562576115626114c3565b039392505050565b60008261158757634e487b7160e01b600052601260045260246000fd5b500490565b60006bffffffffffffffffffffffff8083168185168083038211156115b3576115b36114c3565b01949350505050565b600060001982036115cf576115cf6114c3565b5060010190565b6000602082840312156115e857600080fd5b5051919050565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561161757600080fd5b81518015158114610fa157600080fd5b60005b8381101561164257818101518382015260200161162a565b83811115611651576000848401525b50505050565b60008251611669818460208701611627565b9190910192915050565b6020815260008251806020840152611692816040850160208701611627565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212207ec4adc59eaf03143a165aa488feb198a16092b74c0cd01eda710466895c757e64736f6c634300080d0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH3 0x127500 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x185C CODESIZE SUB DUP1 PUSH2 0x185C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x36 SWAP2 PUSH2 0xFB JUMP JUMPDEST PUSH2 0x3F CALLER PUSH2 0xAB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x7A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x16FA PUSH2 0x162 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x299 ADD MSTORE DUP2 DUP2 PUSH2 0x8B1 ADD MSTORE DUP2 DUP2 PUSH2 0x9EB ADD MSTORE DUP2 DUP2 PUSH2 0xB82 ADD MSTORE PUSH2 0xD3B ADD MSTORE PUSH2 0x16FA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCD3293DE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x9EAB5253 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xC6728C6C EQ PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x4E71E0C8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x56715761 EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D41E79 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x1674BADE EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x182A89E6 EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH13 0x1000000000000000000000000 DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x118 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x252 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH2 0x118 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x118 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x232 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x232 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH13 0x1000000000000000000000000 DUP3 DIV AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP4 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE DUP4 SWAP2 PUSH2 0x339 SWAP1 TIMESTAMP PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT PUSH2 0x37F JUMPI DUP1 PUSH2 0x390 JUMP JUMPDEST DUP2 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0xE1A JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7A65726F206475726174696F6E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x850B0D4898947EAD6A23251622E8C2EA46D217FA5FF2C1F06638F92E91880BFE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656D707479206172726179000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST DUP3 DUP7 EQ DUP1 ISZERO PUSH2 0x4A1 JUMPI POP DUP3 DUP5 EQ JUMPDEST PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76617279696E672D6C656E677468206172726179730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x880 JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x50C JUMPI PUSH2 0x50C PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x537 JUMPI PUSH2 0x537 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x554 JUMPI PUSH2 0x554 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616420726563697069656E7400000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 PUSH2 0x5EE DUP7 PUSH2 0x2BB JUMP JUMPDEST DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND MUL OR DUP5 SSTORE SWAP1 POP PUSH2 0x63F DUP2 DUP4 PUSH2 0x153D JUMP JUMPDEST PUSH2 0x657 SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x14D9 JUMP JUMPDEST SWAP9 POP SWAP1 POP JUMPDEST DUP4 ISZERO PUSH2 0x7CD JUMPI DUP7 DUP4 LT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73686F72742076657374696E67206475726174696F6E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420616C6C6F636174696F6E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x718 DUP5 DUP10 PUSH2 0x150F JUMP JUMPDEST SWAP8 POP PUSH1 0x0 PUSH2 0x726 DUP5 DUP7 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72617465207472756E636174656420746F207A65726F00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x782 DUP6 DUP4 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x1 DUP5 ADD DUP3 SWAP1 SSTORE DUP4 SLOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xC0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR DUP5 SSTORE SWAP2 POP PUSH2 0x7C6 PUSH1 0x3 DUP8 PUSH2 0xE74 JUMP JUMPDEST POP POP PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x7F0 JUMPI PUSH2 0x7EE PUSH1 0x3 DUP7 PUSH2 0xE92 JUMP JUMPDEST POP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x159E9E56DEC3D6BF3E3C20510A7B005A0B9F89BD991FF9EB0C4F387B1FD3682D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP DUP1 PUSH2 0x879 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP1 POP PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST LT ISZERO PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F772062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST POP PUSH1 0x5 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x987 PUSH2 0xE1A JUMP JUMPDEST DUP1 PUSH2 0x990 PUSH2 0xCFE JUMP JUMPDEST LT ISZERO PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F772062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0xA12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x430648DE173157E069201C943ADB2D4E340E7CF5B27B1B09C9CB852F03D63B56 SWAP1 PUSH1 0x20 ADD PUSH2 0x426 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0xA5B SWAP1 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F2070656E64696E6720686172766573740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST DUP2 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 OR DUP6 SSTORE DUP4 SWAP3 DUP6 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xB0C SWAP3 DUP7 SWAP3 SWAP2 AND OR PUSH2 0x153D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0xB75 JUMPI PUSH2 0xB73 PUSH1 0x3 CALLER PUSH2 0xE92 JUMP JUMPDEST POP JUMPDEST PUSH2 0xBA9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x121C5042302BAE5FC561FBC64368F297CA60A880878E1E3A7F7E9380377260BF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C653A206E6F742070656E64696E67206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF2C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC64 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C653A2070656E64696E67206F776E6572206E6F74207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F20616464726573730000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0xC5A PUSH1 0x0 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCF9 PUSH1 0x3 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0xDB8 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE89 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE89 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xF27 SWAP1 DUP5 SWAP1 PUSH2 0x10EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFA1 DUP4 PUSH2 0x11CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xFEF JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xE8C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x0 PUSH2 0x101B PUSH1 0x1 DUP4 PUSH2 0x14D9 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x102F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1094 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104F PUSH2 0x1527 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1072 JUMPI PUSH2 0x1072 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x10A5 JUMPI PUSH2 0x10A5 PUSH2 0x15EF JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x122B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF27 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x121F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x120B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x390 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1252 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12A5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x12B0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x131F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1318 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST POP DUP2 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x390 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1334 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1419 DUP11 DUP4 DUP12 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143E DUP11 DUP4 DUP12 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1464 DUP10 DUP3 DUP11 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14B7 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1492 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EB PUSH2 0x14C3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x150A JUMPI PUSH2 0x150A PUSH2 0x14C3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1522 JUMPI PUSH2 0x1522 PUSH2 0x14C3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1562 JUMPI PUSH2 0x1562 PUSH2 0x14C3 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1587 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x15B3 JUMPI PUSH2 0x15B3 PUSH2 0x14C3 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x15CF JUMPI PUSH2 0x15CF PUSH2 0x14C3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1642 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x162A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1651 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1669 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1692 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xC4ADC59EAF03143A165AA488FEB198A16092B74C0CD01EDA710466895C757E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"442:9891:8:-:0;;;1597:7;1568:36;;2963:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:5;936:18:0;:32::i;:::-;274:13:7;:28;;-1:-1:-1;;;;;;274:28:7;719:10:5;274:28:7;;;-1:-1:-1;;;;;3073:31:8;;3065:56;;;;-1:-1:-1;;;3065:56:8;;511:2:9;3065:56:8;;;493:21:9;550:2;530:18;;;523:30;-1:-1:-1;;;569:18:9;;;562:42;621:18;;3065:56:8;;;;;;;;-1:-1:-1;;;;;3190:33:8;;;442:9891;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;309:336::-;442:9891:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_add_912":{"entryPoint":4008,"id":912,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_506":{"entryPoint":4330,"id":506,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":3610,"id":54,"parameterSlots":0,"returnSlots":0},"@_contains_1015":{"entryPoint":null,"id":1015,"parameterSlots":2,"returnSlots":1},"@_msgSender_849":{"entryPoint":null,"id":849,"parameterSlots":0,"returnSlots":1},"@_remove_996":{"entryPoint":4087,"id":996,"parameterSlots":2,"returnSlots":1},"@_revert_836":{"entryPoint":null,"id":836,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":3884,"id":111,"parameterSlots":1,"returnSlots":0},"@_values_1060":{"entryPoint":4559,"id":1060,"parameterSlots":1,"returnSlots":1},"@add_1212":{"entryPoint":3700,"id":1212,"parameterSlots":2,"returnSlots":1},"@claimOwnership_1508":{"entryPoint":3042,"id":1508,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_661":{"entryPoint":null,"id":661,"parameterSlots":4,"returnSlots":1},"@functionCall_597":{"entryPoint":4651,"id":597,"parameterSlots":3,"returnSlots":1},"@getMembers_2041":{"entryPoint":3309,"id":2041,"parameterSlots":0,"returnSlots":1},"@harvest_1736":{"entryPoint":2626,"id":1736,"parameterSlots":0,"returnSlots":0},"@isContract_525":{"entryPoint":null,"id":525,"parameterSlots":1,"returnSlots":1},"@members_1589":{"entryPoint":null,"id":1589,"parameterSlots":0,"returnSlots":0},"@minDuration_1604":{"entryPoint":null,"id":1604,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@pendingHarvest_2082":{"entryPoint":699,"id":2082,"parameterSlots":1,"returnSlots":1},"@pendingOwner_1557":{"entryPoint":null,"id":1557,"parameterSlots":0,"returnSlots":1},"@remove_1239":{"entryPoint":3730,"id":1239,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_1549":{"entryPoint":3164,"id":1549,"parameterSlots":0,"returnSlots":0},"@reserve_1600":{"entryPoint":null,"id":1600,"parameterSlots":0,"returnSlots":0},"@safeTransfer_258":{"entryPoint":3751,"id":258,"parameterSlots":3,"returnSlots":0},"@setAllocations_2005":{"entryPoint":1073,"id":2005,"parameterSlots":6,"returnSlots":0},"@setMinDuration_2029":{"entryPoint":920,"id":2029,"parameterSlots":1,"returnSlots":0},"@token_1597":{"entryPoint":null,"id":1597,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1525":{"entryPoint":3504,"id":1525,"parameterSlots":1,"returnSlots":0},"@unreserved_2099":{"entryPoint":3326,"id":2099,"parameterSlots":0,"returnSlots":1},"@values_1338":{"entryPoint":3988,"id":1338,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_792":{"entryPoint":4784,"id":792,"parameterSlots":4,"returnSlots":1},"@withdraw_1765":{"entryPoint":2431,"id":1765,"parameterSlots":1,"returnSlots":0},"abi_decode_array_address_dyn_calldata":{"entryPoint":5008,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":4942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5084,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4983,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5238,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14ceb87ab7af812e92c4e3834f3009df06974b8f915e614b208227f229f7b205__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_454b82c3995abe0e17d215facdf0517a8bee51b5d963b4725d38a121058a9200__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4ad45a29af4d1a11fffff7cb7a07ebeb55a5b27ee49d3e4255f3e6f2fe8d4aa1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4d1e7dfd90f1a9f5ff7eb15697c8849def6789d3dd644f128b7a0451146bc601__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5a4cf96a83d0a38785b2b1a0589568d8f7d392fad654884d30a3f6c440683520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7708efe8f9e439a7d89f7815a7ac4039dfdc1f0bb479f643603c5e8dde3f73f1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_91549934cd3ddb3b69848a33bb3e6f2f6c6e5aeb53ecdfce1296983a8e8f9ae3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d5d4526f829be465ccbde8596dd019082d9287da875164147f9d3b62eb798278__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d696d95254cfbddd7f9c4536fe32fc4aff9a76fa75ac9e194155d25390e9a490__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4acb2f2dca5bce49f355e714f7431e47358d79e6463dc0451fed1877b7a6eb2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ecc0a3380755da3568d31401b31e8b3872e01c3836eb4b80fe4866793cf44c8e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_uint256__to_t_uint96_t_uint96_t_uint64_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5391,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":5516,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5482,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5360,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5337,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":5437,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":5671,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":5564,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5315,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":5615,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5415,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13259:9","statements":[{"nodeType":"YulBlock","src":"6:3:9","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:239:9","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:9"},"nodeType":"YulFunctionCall","src":"132:12:9"},"nodeType":"YulExpressionStatement","src":"132:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:9"},"nodeType":"YulFunctionCall","src":"101:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:9"},"nodeType":"YulFunctionCall","src":"97:32:9"},"nodeType":"YulIf","src":"94:52:9"},{"nodeType":"YulVariableDeclaration","src":"155:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"168:12:9"},"nodeType":"YulFunctionCall","src":"168:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"159:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"277:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"286:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"289:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"279:6:9"},"nodeType":"YulFunctionCall","src":"279:12:9"},"nodeType":"YulExpressionStatement","src":"279:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"213:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"224:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"231:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"220:3:9"},"nodeType":"YulFunctionCall","src":"220:54:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"210:2:9"},"nodeType":"YulFunctionCall","src":"210:65:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"203:6:9"},"nodeType":"YulFunctionCall","src":"203:73:9"},"nodeType":"YulIf","src":"200:93:9"},{"nodeType":"YulAssignment","src":"302:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"312:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"302:6:9"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:9","type":""}],"src":"14:309:9"},{"body":{"nodeType":"YulBlock","src":"429:76:9","statements":[{"nodeType":"YulAssignment","src":"439:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"451:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"462:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"447:3:9"},"nodeType":"YulFunctionCall","src":"447:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"439:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"481:9:9"},{"name":"value0","nodeType":"YulIdentifier","src":"492:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"474:6:9"},"nodeType":"YulFunctionCall","src":"474:25:9"},"nodeType":"YulExpressionStatement","src":"474:25:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"398:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"409:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"420:4:9","type":""}],"src":"328:177:9"},{"body":{"nodeType":"YulBlock","src":"689:294:9","statements":[{"nodeType":"YulAssignment","src":"699:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"711:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"722:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"707:3:9"},"nodeType":"YulFunctionCall","src":"707:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"699:4:9"}]},{"nodeType":"YulVariableDeclaration","src":"735:36:9","value":{"kind":"number","nodeType":"YulLiteral","src":"745:26:9","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"739:2:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"787:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"802:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"810:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"798:3:9"},"nodeType":"YulFunctionCall","src":"798:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"780:6:9"},"nodeType":"YulFunctionCall","src":"780:34:9"},"nodeType":"YulExpressionStatement","src":"780:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"834:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"845:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"830:3:9"},"nodeType":"YulFunctionCall","src":"830:18:9"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"854:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"862:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"850:3:9"},"nodeType":"YulFunctionCall","src":"850:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:9"},"nodeType":"YulFunctionCall","src":"823:43:9"},"nodeType":"YulExpressionStatement","src":"823:43:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"886:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"897:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"882:3:9"},"nodeType":"YulFunctionCall","src":"882:18:9"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"906:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"914:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"902:3:9"},"nodeType":"YulFunctionCall","src":"902:31:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"875:6:9"},"nodeType":"YulFunctionCall","src":"875:59:9"},"nodeType":"YulExpressionStatement","src":"875:59:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"954:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"950:3:9"},"nodeType":"YulFunctionCall","src":"950:18:9"},{"name":"value3","nodeType":"YulIdentifier","src":"970:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"943:6:9"},"nodeType":"YulFunctionCall","src":"943:34:9"},"nodeType":"YulExpressionStatement","src":"943:34:9"}]},"name":"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_uint256__to_t_uint96_t_uint96_t_uint64_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"634:9:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"645:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"653:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"661:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"669:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"680:4:9","type":""}],"src":"510:473:9"},{"body":{"nodeType":"YulBlock","src":"1058:110:9","statements":[{"body":{"nodeType":"YulBlock","src":"1104:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1113:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1116:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1106:6:9"},"nodeType":"YulFunctionCall","src":"1106:12:9"},"nodeType":"YulExpressionStatement","src":"1106:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1079:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1088:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1075:3:9"},"nodeType":"YulFunctionCall","src":"1075:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1100:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1071:3:9"},"nodeType":"YulFunctionCall","src":"1071:32:9"},"nodeType":"YulIf","src":"1068:52:9"},{"nodeType":"YulAssignment","src":"1129:33:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1152:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1139:12:9"},"nodeType":"YulFunctionCall","src":"1139:23:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1129:6:9"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1024:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1035:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1047:6:9","type":""}],"src":"988:180:9"},{"body":{"nodeType":"YulBlock","src":"1257:283:9","statements":[{"body":{"nodeType":"YulBlock","src":"1306:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1315:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1318:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1308:6:9"},"nodeType":"YulFunctionCall","src":"1308:12:9"},"nodeType":"YulExpressionStatement","src":"1308:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1285:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1293:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1281:3:9"},"nodeType":"YulFunctionCall","src":"1281:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"1300:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1277:3:9"},"nodeType":"YulFunctionCall","src":"1277:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1270:6:9"},"nodeType":"YulFunctionCall","src":"1270:35:9"},"nodeType":"YulIf","src":"1267:55:9"},{"nodeType":"YulAssignment","src":"1331:30:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1341:12:9"},"nodeType":"YulFunctionCall","src":"1341:20:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1331:6:9"}]},{"body":{"nodeType":"YulBlock","src":"1404:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1413:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1416:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1406:6:9"},"nodeType":"YulFunctionCall","src":"1406:12:9"},"nodeType":"YulExpressionStatement","src":"1406:12:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1376:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1384:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1373:2:9"},"nodeType":"YulFunctionCall","src":"1373:30:9"},"nodeType":"YulIf","src":"1370:50:9"},{"nodeType":"YulAssignment","src":"1429:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1445:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1453:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1441:3:9"},"nodeType":"YulFunctionCall","src":"1441:17:9"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1429:8:9"}]},{"body":{"nodeType":"YulBlock","src":"1518:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1527:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1530:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1520:6:9"},"nodeType":"YulFunctionCall","src":"1520:12:9"},"nodeType":"YulExpressionStatement","src":"1520:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1481:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1493:1:9","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"1496:6:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1489:3:9"},"nodeType":"YulFunctionCall","src":"1489:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:9"},"nodeType":"YulFunctionCall","src":"1477:27:9"},{"kind":"number","nodeType":"YulLiteral","src":"1506:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:9"},"nodeType":"YulFunctionCall","src":"1473:38:9"},{"name":"end","nodeType":"YulIdentifier","src":"1513:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1470:2:9"},"nodeType":"YulFunctionCall","src":"1470:47:9"},"nodeType":"YulIf","src":"1467:67:9"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1220:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1228:3:9","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1236:8:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"1246:6:9","type":""}],"src":"1173:367:9"},{"body":{"nodeType":"YulBlock","src":"1754:879:9","statements":[{"body":{"nodeType":"YulBlock","src":"1800:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1809:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1812:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1802:6:9"},"nodeType":"YulFunctionCall","src":"1802:12:9"},"nodeType":"YulExpressionStatement","src":"1802:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1775:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1771:3:9"},"nodeType":"YulFunctionCall","src":"1771:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1796:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1767:3:9"},"nodeType":"YulFunctionCall","src":"1767:32:9"},"nodeType":"YulIf","src":"1764:52:9"},{"nodeType":"YulVariableDeclaration","src":"1825:37:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1852:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1839:12:9"},"nodeType":"YulFunctionCall","src":"1839:23:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1829:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1871:28:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1881:18:9","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1875:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1935:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1938:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1928:6:9"},"nodeType":"YulFunctionCall","src":"1928:12:9"},"nodeType":"YulExpressionStatement","src":"1928:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1914:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"1922:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1911:2:9"},"nodeType":"YulFunctionCall","src":"1911:14:9"},"nodeType":"YulIf","src":"1908:34:9"},{"nodeType":"YulVariableDeclaration","src":"1951:96:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2019:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2030:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2015:3:9"},"nodeType":"YulFunctionCall","src":"2015:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2039:7:9"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"1977:37:9"},"nodeType":"YulFunctionCall","src":"1977:70:9"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"1955:8:9","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"1965:8:9","type":""}]},{"nodeType":"YulAssignment","src":"2056:18:9","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"2066:8:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2056:6:9"}]},{"nodeType":"YulAssignment","src":"2083:18:9","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"2093:8:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2083:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"2110:48:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2143:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2154:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2139:3:9"},"nodeType":"YulFunctionCall","src":"2139:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2126:12:9"},"nodeType":"YulFunctionCall","src":"2126:32:9"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2114:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2187:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2196:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2199:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2189:6:9"},"nodeType":"YulFunctionCall","src":"2189:12:9"},"nodeType":"YulExpressionStatement","src":"2189:12:9"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2173:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"2183:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2170:2:9"},"nodeType":"YulFunctionCall","src":"2170:16:9"},"nodeType":"YulIf","src":"2167:36:9"},{"nodeType":"YulVariableDeclaration","src":"2212:98:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2280:9:9"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2291:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2276:3:9"},"nodeType":"YulFunctionCall","src":"2276:24:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2302:7:9"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"2238:37:9"},"nodeType":"YulFunctionCall","src":"2238:72:9"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"2216:8:9","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"2226:8:9","type":""}]},{"nodeType":"YulAssignment","src":"2319:18:9","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2329:8:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2319:6:9"}]},{"nodeType":"YulAssignment","src":"2346:18:9","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2356:8:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2346:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"2373:48:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2406:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2417:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2402:3:9"},"nodeType":"YulFunctionCall","src":"2402:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2389:12:9"},"nodeType":"YulFunctionCall","src":"2389:32:9"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"2377:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2450:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2459:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2462:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2452:6:9"},"nodeType":"YulFunctionCall","src":"2452:12:9"},"nodeType":"YulExpressionStatement","src":"2452:12:9"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"2436:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"2446:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2433:2:9"},"nodeType":"YulFunctionCall","src":"2433:16:9"},"nodeType":"YulIf","src":"2430:36:9"},{"nodeType":"YulVariableDeclaration","src":"2475:98:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2543:9:9"},{"name":"offset_2","nodeType":"YulIdentifier","src":"2554:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2539:3:9"},"nodeType":"YulFunctionCall","src":"2539:24:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2565:7:9"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"2501:37:9"},"nodeType":"YulFunctionCall","src":"2501:72:9"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"2479:8:9","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"2489:8:9","type":""}]},{"nodeType":"YulAssignment","src":"2582:18:9","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"2592:8:9"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2582:6:9"}]},{"nodeType":"YulAssignment","src":"2609:18:9","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"2619:8:9"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2609:6:9"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1680:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1691:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1703:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1711:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1719:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1727:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1735:6:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1743:6:9","type":""}],"src":"1545:1088:9"},{"body":{"nodeType":"YulBlock","src":"2739:125:9","statements":[{"nodeType":"YulAssignment","src":"2749:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2761:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2772:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2757:3:9"},"nodeType":"YulFunctionCall","src":"2757:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2749:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2791:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2806:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"2814:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2802:3:9"},"nodeType":"YulFunctionCall","src":"2802:55:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2784:6:9"},"nodeType":"YulFunctionCall","src":"2784:74:9"},"nodeType":"YulExpressionStatement","src":"2784:74:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2708:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2719:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2730:4:9","type":""}],"src":"2638:226:9"},{"body":{"nodeType":"YulBlock","src":"3020:530:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3030:12:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3040:2:9","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3034:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3051:32:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3069:9:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3080:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3065:3:9"},"nodeType":"YulFunctionCall","src":"3065:18:9"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3055:6:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3099:9:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3110:2:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3092:6:9"},"nodeType":"YulFunctionCall","src":"3092:21:9"},"nodeType":"YulExpressionStatement","src":"3092:21:9"},{"nodeType":"YulVariableDeclaration","src":"3122:17:9","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3133:6:9"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3126:3:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3148:27:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3168:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3162:5:9"},"nodeType":"YulFunctionCall","src":"3162:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3152:6:9","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3191:6:9"},{"name":"length","nodeType":"YulIdentifier","src":"3199:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:9"},"nodeType":"YulFunctionCall","src":"3184:22:9"},"nodeType":"YulExpressionStatement","src":"3184:22:9"},{"nodeType":"YulAssignment","src":"3215:25:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3226:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3237:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3222:3:9"},"nodeType":"YulFunctionCall","src":"3222:18:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3215:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"3249:29:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3267:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3275:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3263:3:9"},"nodeType":"YulFunctionCall","src":"3263:15:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3253:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3287:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3296:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3291:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3355:169:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3376:3:9"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3391:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3385:5:9"},"nodeType":"YulFunctionCall","src":"3385:13:9"},{"kind":"number","nodeType":"YulLiteral","src":"3400:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3381:3:9"},"nodeType":"YulFunctionCall","src":"3381:62:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3369:6:9"},"nodeType":"YulFunctionCall","src":"3369:75:9"},"nodeType":"YulExpressionStatement","src":"3369:75:9"},{"nodeType":"YulAssignment","src":"3457:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3468:3:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3473:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3464:3:9"},"nodeType":"YulFunctionCall","src":"3464:12:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3457:3:9"}]},{"nodeType":"YulAssignment","src":"3489:25:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3503:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3511:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3499:3:9"},"nodeType":"YulFunctionCall","src":"3499:15:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3489:6:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3317:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"3320:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3314:2:9"},"nodeType":"YulFunctionCall","src":"3314:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3328:18:9","statements":[{"nodeType":"YulAssignment","src":"3330:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3339:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"3342:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3335:3:9"},"nodeType":"YulFunctionCall","src":"3335:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3330:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"3310:3:9","statements":[]},"src":"3306:218:9"},{"nodeType":"YulAssignment","src":"3533:11:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"3541:3:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3533:4:9"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2989:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3000:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3011:4:9","type":""}],"src":"2869:681:9"},{"body":{"nodeType":"YulBlock","src":"3670:125:9","statements":[{"nodeType":"YulAssignment","src":"3680:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3692:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3703:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3688:3:9"},"nodeType":"YulFunctionCall","src":"3688:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3680:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3722:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3737:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3745:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3733:3:9"},"nodeType":"YulFunctionCall","src":"3733:55:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3715:6:9"},"nodeType":"YulFunctionCall","src":"3715:74:9"},"nodeType":"YulExpressionStatement","src":"3715:74:9"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3639:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3650:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3661:4:9","type":""}],"src":"3555:240:9"},{"body":{"nodeType":"YulBlock","src":"3832:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3849:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3852:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3842:6:9"},"nodeType":"YulFunctionCall","src":"3842:88:9"},"nodeType":"YulExpressionStatement","src":"3842:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3946:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3939:6:9"},"nodeType":"YulFunctionCall","src":"3939:15:9"},"nodeType":"YulExpressionStatement","src":"3939:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3970:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3973:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3963:6:9"},"nodeType":"YulFunctionCall","src":"3963:15:9"},"nodeType":"YulExpressionStatement","src":"3963:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3800:184:9"},{"body":{"nodeType":"YulBlock","src":"4038:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"4060:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4062:16:9"},"nodeType":"YulFunctionCall","src":"4062:18:9"},"nodeType":"YulExpressionStatement","src":"4062:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4054:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"4057:1:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4051:2:9"},"nodeType":"YulFunctionCall","src":"4051:8:9"},"nodeType":"YulIf","src":"4048:34:9"},{"nodeType":"YulAssignment","src":"4091:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4103:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"4106:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4099:3:9"},"nodeType":"YulFunctionCall","src":"4099:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4091:4:9"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4020:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"4023:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4029:4:9","type":""}],"src":"3989:125:9"},{"body":{"nodeType":"YulBlock","src":"4171:176:9","statements":[{"body":{"nodeType":"YulBlock","src":"4290:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4292:16:9"},"nodeType":"YulFunctionCall","src":"4292:18:9"},"nodeType":"YulExpressionStatement","src":"4292:18:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4202:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4195:6:9"},"nodeType":"YulFunctionCall","src":"4195:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4188:6:9"},"nodeType":"YulFunctionCall","src":"4188:17:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4210:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4217:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"4285:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4213:3:9"},"nodeType":"YulFunctionCall","src":"4213:74:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4207:2:9"},"nodeType":"YulFunctionCall","src":"4207:81:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4184:3:9"},"nodeType":"YulFunctionCall","src":"4184:105:9"},"nodeType":"YulIf","src":"4181:131:9"},{"nodeType":"YulAssignment","src":"4321:20:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4336:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"4339:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4332:3:9"},"nodeType":"YulFunctionCall","src":"4332:9:9"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4321:7:9"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4150:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"4153:1:9","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4159:7:9","type":""}],"src":"4119:228:9"},{"body":{"nodeType":"YulBlock","src":"4400:80:9","statements":[{"body":{"nodeType":"YulBlock","src":"4427:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4429:16:9"},"nodeType":"YulFunctionCall","src":"4429:18:9"},"nodeType":"YulExpressionStatement","src":"4429:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4416:1:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4423:1:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4419:3:9"},"nodeType":"YulFunctionCall","src":"4419:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4413:2:9"},"nodeType":"YulFunctionCall","src":"4413:13:9"},"nodeType":"YulIf","src":"4410:39:9"},{"nodeType":"YulAssignment","src":"4458:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4469:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"4472:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:9"},"nodeType":"YulFunctionCall","src":"4465:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4458:3:9"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4383:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"4386:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4392:3:9","type":""}],"src":"4352:128:9"},{"body":{"nodeType":"YulBlock","src":"4659:163:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4676:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4687:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4669:6:9"},"nodeType":"YulFunctionCall","src":"4669:21:9"},"nodeType":"YulExpressionStatement","src":"4669:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4710:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4721:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4706:3:9"},"nodeType":"YulFunctionCall","src":"4706:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"4726:2:9","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4699:6:9"},"nodeType":"YulFunctionCall","src":"4699:30:9"},"nodeType":"YulExpressionStatement","src":"4699:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:9"},"nodeType":"YulFunctionCall","src":"4745:18:9"},{"hexValue":"7a65726f206475726174696f6e","kind":"string","nodeType":"YulLiteral","src":"4765:15:9","type":"","value":"zero duration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4738:6:9"},"nodeType":"YulFunctionCall","src":"4738:43:9"},"nodeType":"YulExpressionStatement","src":"4738:43:9"},{"nodeType":"YulAssignment","src":"4790:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4802:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4813:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4798:3:9"},"nodeType":"YulFunctionCall","src":"4798:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4790:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d5d4526f829be465ccbde8596dd019082d9287da875164147f9d3b62eb798278__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4636:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4650:4:9","type":""}],"src":"4485:337:9"},{"body":{"nodeType":"YulBlock","src":"5001:161:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5018:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5029:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:9"},"nodeType":"YulFunctionCall","src":"5011:21:9"},"nodeType":"YulExpressionStatement","src":"5011:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5052:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5063:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5048:3:9"},"nodeType":"YulFunctionCall","src":"5048:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"5068:2:9","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5041:6:9"},"nodeType":"YulFunctionCall","src":"5041:30:9"},"nodeType":"YulExpressionStatement","src":"5041:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5091:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5102:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5087:3:9"},"nodeType":"YulFunctionCall","src":"5087:18:9"},{"hexValue":"656d707479206172726179","kind":"string","nodeType":"YulLiteral","src":"5107:13:9","type":"","value":"empty array"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5080:6:9"},"nodeType":"YulFunctionCall","src":"5080:41:9"},"nodeType":"YulExpressionStatement","src":"5080:41:9"},{"nodeType":"YulAssignment","src":"5130:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5142:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5153:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5138:3:9"},"nodeType":"YulFunctionCall","src":"5138:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5130:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_5a4cf96a83d0a38785b2b1a0589568d8f7d392fad654884d30a3f6c440683520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4978:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4992:4:9","type":""}],"src":"4827:335:9"},{"body":{"nodeType":"YulBlock","src":"5341:171:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5358:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5369:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5351:6:9"},"nodeType":"YulFunctionCall","src":"5351:21:9"},"nodeType":"YulExpressionStatement","src":"5351:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5392:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5403:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5388:3:9"},"nodeType":"YulFunctionCall","src":"5388:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"5408:2:9","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5381:6:9"},"nodeType":"YulFunctionCall","src":"5381:30:9"},"nodeType":"YulExpressionStatement","src":"5381:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5431:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5442:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5427:3:9"},"nodeType":"YulFunctionCall","src":"5427:18:9"},{"hexValue":"76617279696e672d6c656e67746820617272617973","kind":"string","nodeType":"YulLiteral","src":"5447:23:9","type":"","value":"varying-length arrays"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5420:6:9"},"nodeType":"YulFunctionCall","src":"5420:51:9"},"nodeType":"YulExpressionStatement","src":"5420:51:9"},{"nodeType":"YulAssignment","src":"5480:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5492:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5503:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5488:3:9"},"nodeType":"YulFunctionCall","src":"5488:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5480:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_14ceb87ab7af812e92c4e3834f3009df06974b8f915e614b208227f229f7b205__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5318:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5332:4:9","type":""}],"src":"5167:345:9"},{"body":{"nodeType":"YulBlock","src":"5549:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5566:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5569:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5559:6:9"},"nodeType":"YulFunctionCall","src":"5559:88:9"},"nodeType":"YulExpressionStatement","src":"5559:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5663:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5666:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5656:6:9"},"nodeType":"YulFunctionCall","src":"5656:15:9"},"nodeType":"YulExpressionStatement","src":"5656:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5687:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5690:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5680:6:9"},"nodeType":"YulFunctionCall","src":"5680:15:9"},"nodeType":"YulExpressionStatement","src":"5680:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5517:184:9"},{"body":{"nodeType":"YulBlock","src":"5880:163:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5897:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5908:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5890:6:9"},"nodeType":"YulFunctionCall","src":"5890:21:9"},"nodeType":"YulExpressionStatement","src":"5890:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5931:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5942:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5927:3:9"},"nodeType":"YulFunctionCall","src":"5927:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"5947:2:9","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5920:6:9"},"nodeType":"YulFunctionCall","src":"5920:30:9"},"nodeType":"YulExpressionStatement","src":"5920:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5970:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5981:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5966:3:9"},"nodeType":"YulFunctionCall","src":"5966:18:9"},{"hexValue":"62616420726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"5986:15:9","type":"","value":"bad recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5959:6:9"},"nodeType":"YulFunctionCall","src":"5959:43:9"},"nodeType":"YulExpressionStatement","src":"5959:43:9"},{"nodeType":"YulAssignment","src":"6011:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6023:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6034:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6019:3:9"},"nodeType":"YulFunctionCall","src":"6019:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6011:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4acb2f2dca5bce49f355e714f7431e47358d79e6463dc0451fed1877b7a6eb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5857:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5871:4:9","type":""}],"src":"5706:337:9"},{"body":{"nodeType":"YulBlock","src":"6096:189:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6106:36:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6116:26:9","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6110:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6151:21:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6166:1:9"},{"name":"_1","nodeType":"YulIdentifier","src":"6169:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6162:3:9"},"nodeType":"YulFunctionCall","src":"6162:10:9"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"6155:3:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6181:21:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6196:1:9"},{"name":"_1","nodeType":"YulIdentifier","src":"6199:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6192:3:9"},"nodeType":"YulFunctionCall","src":"6192:10:9"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"6185:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6227:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6229:16:9"},"nodeType":"YulFunctionCall","src":"6229:18:9"},"nodeType":"YulExpressionStatement","src":"6229:18:9"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"6217:3:9"},{"name":"y_1","nodeType":"YulIdentifier","src":"6222:3:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6214:2:9"},"nodeType":"YulFunctionCall","src":"6214:12:9"},"nodeType":"YulIf","src":"6211:38:9"},{"nodeType":"YulAssignment","src":"6258:21:9","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"6270:3:9"},{"name":"y_1","nodeType":"YulIdentifier","src":"6275:3:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6266:3:9"},"nodeType":"YulFunctionCall","src":"6266:13:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6258:4:9"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6078:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"6081:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6087:4:9","type":""}],"src":"6048:237:9"},{"body":{"nodeType":"YulBlock","src":"6464:172:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6481:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6492:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6474:6:9"},"nodeType":"YulFunctionCall","src":"6474:21:9"},"nodeType":"YulExpressionStatement","src":"6474:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6515:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6526:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6511:3:9"},"nodeType":"YulFunctionCall","src":"6511:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"6531:2:9","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6504:6:9"},"nodeType":"YulFunctionCall","src":"6504:30:9"},"nodeType":"YulExpressionStatement","src":"6504:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6554:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6565:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6550:3:9"},"nodeType":"YulFunctionCall","src":"6550:18:9"},{"hexValue":"73686f72742076657374696e67206475726174696f6e","kind":"string","nodeType":"YulLiteral","src":"6570:24:9","type":"","value":"short vesting duration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6543:6:9"},"nodeType":"YulFunctionCall","src":"6543:52:9"},"nodeType":"YulExpressionStatement","src":"6543:52:9"},{"nodeType":"YulAssignment","src":"6604:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6616:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6627:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6612:3:9"},"nodeType":"YulFunctionCall","src":"6612:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6604:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_91549934cd3ddb3b69848a33bb3e6f2f6c6e5aeb53ecdfce1296983a8e8f9ae3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6441:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6455:4:9","type":""}],"src":"6290:346:9"},{"body":{"nodeType":"YulBlock","src":"6815:168:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6832:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6843:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6825:6:9"},"nodeType":"YulFunctionCall","src":"6825:21:9"},"nodeType":"YulExpressionStatement","src":"6825:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6866:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6877:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6862:3:9"},"nodeType":"YulFunctionCall","src":"6862:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"6882:2:9","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6855:6:9"},"nodeType":"YulFunctionCall","src":"6855:30:9"},"nodeType":"YulExpressionStatement","src":"6855:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6905:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6916:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6901:3:9"},"nodeType":"YulFunctionCall","src":"6901:18:9"},{"hexValue":"696e76616c696420616c6c6f636174696f6e","kind":"string","nodeType":"YulLiteral","src":"6921:20:9","type":"","value":"invalid allocation"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6894:6:9"},"nodeType":"YulFunctionCall","src":"6894:48:9"},"nodeType":"YulExpressionStatement","src":"6894:48:9"},{"nodeType":"YulAssignment","src":"6951:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6963:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6974:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6959:3:9"},"nodeType":"YulFunctionCall","src":"6959:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6951:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d696d95254cfbddd7f9c4536fe32fc4aff9a76fa75ac9e194155d25390e9a490__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6792:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6806:4:9","type":""}],"src":"6641:342:9"},{"body":{"nodeType":"YulBlock","src":"7034:228:9","statements":[{"body":{"nodeType":"YulBlock","src":"7065:168:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7086:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7089:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7079:6:9"},"nodeType":"YulFunctionCall","src":"7079:88:9"},"nodeType":"YulExpressionStatement","src":"7079:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7187:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7190:4:9","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7180:6:9"},"nodeType":"YulFunctionCall","src":"7180:15:9"},"nodeType":"YulExpressionStatement","src":"7180:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7215:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7218:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7208:6:9"},"nodeType":"YulFunctionCall","src":"7208:15:9"},"nodeType":"YulExpressionStatement","src":"7208:15:9"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7054:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7047:6:9"},"nodeType":"YulFunctionCall","src":"7047:9:9"},"nodeType":"YulIf","src":"7044:189:9"},{"nodeType":"YulAssignment","src":"7242:14:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7251:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"7254:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7247:3:9"},"nodeType":"YulFunctionCall","src":"7247:9:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7242:1:9"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7019:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"7022:1:9","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7028:1:9","type":""}],"src":"6988:274:9"},{"body":{"nodeType":"YulBlock","src":"7441:172:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7458:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7469:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7451:6:9"},"nodeType":"YulFunctionCall","src":"7451:21:9"},"nodeType":"YulExpressionStatement","src":"7451:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7492:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7503:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:9"},"nodeType":"YulFunctionCall","src":"7488:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"7508:2:9","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7481:6:9"},"nodeType":"YulFunctionCall","src":"7481:30:9"},"nodeType":"YulExpressionStatement","src":"7481:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7531:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7542:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7527:3:9"},"nodeType":"YulFunctionCall","src":"7527:18:9"},{"hexValue":"72617465207472756e636174656420746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"7547:24:9","type":"","value":"rate truncated to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7520:6:9"},"nodeType":"YulFunctionCall","src":"7520:52:9"},"nodeType":"YulExpressionStatement","src":"7520:52:9"},{"nodeType":"YulAssignment","src":"7581:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7593:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7604:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:9"},"nodeType":"YulFunctionCall","src":"7589:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7581:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_454b82c3995abe0e17d215facdf0517a8bee51b5d963b4725d38a121058a9200__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7418:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7432:4:9","type":""}],"src":"7267:346:9"},{"body":{"nodeType":"YulBlock","src":"7665:197:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7675:36:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7685:26:9","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7679:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7720:21:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7735:1:9"},{"name":"_1","nodeType":"YulIdentifier","src":"7738:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7731:3:9"},"nodeType":"YulFunctionCall","src":"7731:10:9"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"7724:3:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7750:21:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7765:1:9"},{"name":"_1","nodeType":"YulIdentifier","src":"7768:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7761:3:9"},"nodeType":"YulFunctionCall","src":"7761:10:9"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"7754:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7805:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7807:16:9"},"nodeType":"YulFunctionCall","src":"7807:18:9"},"nodeType":"YulExpressionStatement","src":"7807:18:9"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"7786:3:9"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7795:2:9"},{"name":"y_1","nodeType":"YulIdentifier","src":"7799:3:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7791:3:9"},"nodeType":"YulFunctionCall","src":"7791:12:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7783:2:9"},"nodeType":"YulFunctionCall","src":"7783:21:9"},"nodeType":"YulIf","src":"7780:47:9"},{"nodeType":"YulAssignment","src":"7836:20:9","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"7847:3:9"},{"name":"y_1","nodeType":"YulIdentifier","src":"7852:3:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7843:3:9"},"nodeType":"YulFunctionCall","src":"7843:13:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7836:3:9"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7648:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"7651:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7657:3:9","type":""}],"src":"7618:244:9"},{"body":{"nodeType":"YulBlock","src":"7996:119:9","statements":[{"nodeType":"YulAssignment","src":"8006:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8018:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8029:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8014:3:9"},"nodeType":"YulFunctionCall","src":"8014:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8006:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8048:9:9"},{"name":"value0","nodeType":"YulIdentifier","src":"8059:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8041:6:9"},"nodeType":"YulFunctionCall","src":"8041:25:9"},"nodeType":"YulExpressionStatement","src":"8041:25:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8086:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8097:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8082:3:9"},"nodeType":"YulFunctionCall","src":"8082:18:9"},{"name":"value1","nodeType":"YulIdentifier","src":"8102:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8075:6:9"},"nodeType":"YulFunctionCall","src":"8075:34:9"},"nodeType":"YulExpressionStatement","src":"8075:34:9"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7957:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7968:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7976:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7987:4:9","type":""}],"src":"7867:248:9"},{"body":{"nodeType":"YulBlock","src":"8167:148:9","statements":[{"body":{"nodeType":"YulBlock","src":"8258:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8260:16:9"},"nodeType":"YulFunctionCall","src":"8260:18:9"},"nodeType":"YulExpressionStatement","src":"8260:18:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8183:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"8190:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8180:2:9"},"nodeType":"YulFunctionCall","src":"8180:77:9"},"nodeType":"YulIf","src":"8177:103:9"},{"nodeType":"YulAssignment","src":"8289:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8300:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"8307:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8296:3:9"},"nodeType":"YulFunctionCall","src":"8296:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8289:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8149:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8159:3:9","type":""}],"src":"8120:195:9"},{"body":{"nodeType":"YulBlock","src":"8401:103:9","statements":[{"body":{"nodeType":"YulBlock","src":"8447:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8456:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8459:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8449:6:9"},"nodeType":"YulFunctionCall","src":"8449:12:9"},"nodeType":"YulExpressionStatement","src":"8449:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8422:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8431:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8418:3:9"},"nodeType":"YulFunctionCall","src":"8418:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"8443:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8414:3:9"},"nodeType":"YulFunctionCall","src":"8414:32:9"},"nodeType":"YulIf","src":"8411:52:9"},{"nodeType":"YulAssignment","src":"8472:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8488:9:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8482:5:9"},"nodeType":"YulFunctionCall","src":"8482:16:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8472:6:9"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8367:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8378:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8390:6:9","type":""}],"src":"8320:184:9"},{"body":{"nodeType":"YulBlock","src":"8683:161:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8700:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8711:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8693:6:9"},"nodeType":"YulFunctionCall","src":"8693:21:9"},"nodeType":"YulExpressionStatement","src":"8693:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8734:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8730:3:9"},"nodeType":"YulFunctionCall","src":"8730:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"8750:2:9","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8723:6:9"},"nodeType":"YulFunctionCall","src":"8723:30:9"},"nodeType":"YulExpressionStatement","src":"8723:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8773:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8784:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8769:3:9"},"nodeType":"YulFunctionCall","src":"8769:18:9"},{"hexValue":"6c6f772062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"8789:13:9","type":"","value":"low balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8762:6:9"},"nodeType":"YulFunctionCall","src":"8762:41:9"},"nodeType":"YulExpressionStatement","src":"8762:41:9"},{"nodeType":"YulAssignment","src":"8812:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8824:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8835:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8820:3:9"},"nodeType":"YulFunctionCall","src":"8820:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8812:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_7708efe8f9e439a7d89f7815a7ac4039dfdc1f0bb479f643603c5e8dde3f73f1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8660:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8674:4:9","type":""}],"src":"8509:335:9"},{"body":{"nodeType":"YulBlock","src":"9023:168:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9040:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9051:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9033:6:9"},"nodeType":"YulFunctionCall","src":"9033:21:9"},"nodeType":"YulExpressionStatement","src":"9033:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9074:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9085:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9070:3:9"},"nodeType":"YulFunctionCall","src":"9070:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9090:2:9","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9063:6:9"},"nodeType":"YulFunctionCall","src":"9063:30:9"},"nodeType":"YulExpressionStatement","src":"9063:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9113:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9124:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9109:3:9"},"nodeType":"YulFunctionCall","src":"9109:18:9"},{"hexValue":"6e6f2070656e64696e672068617276657374","kind":"string","nodeType":"YulLiteral","src":"9129:20:9","type":"","value":"no pending harvest"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9102:6:9"},"nodeType":"YulFunctionCall","src":"9102:48:9"},"nodeType":"YulExpressionStatement","src":"9102:48:9"},{"nodeType":"YulAssignment","src":"9159:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9171:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9182:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9167:3:9"},"nodeType":"YulFunctionCall","src":"9167:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9159:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_ecc0a3380755da3568d31401b31e8b3872e01c3836eb4b80fe4866793cf44c8e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9000:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9014:4:9","type":""}],"src":"8849:342:9"},{"body":{"nodeType":"YulBlock","src":"9370:178:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9398:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9380:6:9"},"nodeType":"YulFunctionCall","src":"9380:21:9"},"nodeType":"YulExpressionStatement","src":"9380:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9421:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9432:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9417:3:9"},"nodeType":"YulFunctionCall","src":"9417:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9437:2:9","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9410:6:9"},"nodeType":"YulFunctionCall","src":"9410:30:9"},"nodeType":"YulExpressionStatement","src":"9410:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9460:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9471:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9456:3:9"},"nodeType":"YulFunctionCall","src":"9456:18:9"},{"hexValue":"436c61696d61626c653a206e6f742070656e64696e67206f776e6572","kind":"string","nodeType":"YulLiteral","src":"9476:30:9","type":"","value":"Claimable: not pending owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9449:6:9"},"nodeType":"YulFunctionCall","src":"9449:58:9"},"nodeType":"YulExpressionStatement","src":"9449:58:9"},{"nodeType":"YulAssignment","src":"9516:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9528:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9539:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9524:3:9"},"nodeType":"YulFunctionCall","src":"9524:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9516:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4d1e7dfd90f1a9f5ff7eb15697c8849def6789d3dd644f128b7a0451146bc601__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9347:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9361:4:9","type":""}],"src":"9196:352:9"},{"body":{"nodeType":"YulBlock","src":"9727:231:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9744:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9755:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9737:6:9"},"nodeType":"YulFunctionCall","src":"9737:21:9"},"nodeType":"YulExpressionStatement","src":"9737:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9778:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9789:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9774:3:9"},"nodeType":"YulFunctionCall","src":"9774:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9794:2:9","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9767:6:9"},"nodeType":"YulFunctionCall","src":"9767:30:9"},"nodeType":"YulExpressionStatement","src":"9767:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9817:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9828:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9813:3:9"},"nodeType":"YulFunctionCall","src":"9813:18:9"},{"hexValue":"436c61696d61626c653a2070656e64696e67206f776e6572206e6f74207a6572","kind":"string","nodeType":"YulLiteral","src":"9833:34:9","type":"","value":"Claimable: pending owner not zer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9806:6:9"},"nodeType":"YulFunctionCall","src":"9806:62:9"},"nodeType":"YulExpressionStatement","src":"9806:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9888:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9899:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9884:3:9"},"nodeType":"YulFunctionCall","src":"9884:18:9"},{"hexValue":"6f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9904:11:9","type":"","value":"o address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9877:6:9"},"nodeType":"YulFunctionCall","src":"9877:39:9"},"nodeType":"YulExpressionStatement","src":"9877:39:9"},{"nodeType":"YulAssignment","src":"9925:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9937:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9948:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9933:3:9"},"nodeType":"YulFunctionCall","src":"9933:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9925:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ad45a29af4d1a11fffff7cb7a07ebeb55a5b27ee49d3e4255f3e6f2fe8d4aa1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9704:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9718:4:9","type":""}],"src":"9553:405:9"},{"body":{"nodeType":"YulBlock","src":"10137:182:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10154:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10165:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10147:6:9"},"nodeType":"YulFunctionCall","src":"10147:21:9"},"nodeType":"YulExpressionStatement","src":"10147:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10188:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10199:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10184:3:9"},"nodeType":"YulFunctionCall","src":"10184:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"10204:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10177:6:9"},"nodeType":"YulFunctionCall","src":"10177:30:9"},"nodeType":"YulExpressionStatement","src":"10177:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10238:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:9"},"nodeType":"YulFunctionCall","src":"10223:18:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10243:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10216:6:9"},"nodeType":"YulFunctionCall","src":"10216:62:9"},"nodeType":"YulExpressionStatement","src":"10216:62:9"},{"nodeType":"YulAssignment","src":"10287:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10299:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10310:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10295:3:9"},"nodeType":"YulFunctionCall","src":"10295:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10287:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10114:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10128:4:9","type":""}],"src":"9963:356:9"},{"body":{"nodeType":"YulBlock","src":"10453:168:9","statements":[{"nodeType":"YulAssignment","src":"10463:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10475:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10486:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10471:3:9"},"nodeType":"YulFunctionCall","src":"10471:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10463:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10505:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10520:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10528:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10516:3:9"},"nodeType":"YulFunctionCall","src":"10516:55:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10498:6:9"},"nodeType":"YulFunctionCall","src":"10498:74:9"},"nodeType":"YulExpressionStatement","src":"10498:74:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10592:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10603:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10588:3:9"},"nodeType":"YulFunctionCall","src":"10588:18:9"},{"name":"value1","nodeType":"YulIdentifier","src":"10608:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10581:6:9"},"nodeType":"YulFunctionCall","src":"10581:34:9"},"nodeType":"YulExpressionStatement","src":"10581:34:9"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10414:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10425:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10433:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10444:4:9","type":""}],"src":"10324:297:9"},{"body":{"nodeType":"YulBlock","src":"10658:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10675:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10678:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10668:6:9"},"nodeType":"YulFunctionCall","src":"10668:88:9"},"nodeType":"YulExpressionStatement","src":"10668:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10772:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10775:4:9","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10765:6:9"},"nodeType":"YulFunctionCall","src":"10765:15:9"},"nodeType":"YulExpressionStatement","src":"10765:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10796:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10799:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10789:6:9"},"nodeType":"YulFunctionCall","src":"10789:15:9"},"nodeType":"YulExpressionStatement","src":"10789:15:9"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"10626:184:9"},{"body":{"nodeType":"YulBlock","src":"10893:199:9","statements":[{"body":{"nodeType":"YulBlock","src":"10939:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10948:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10951:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10941:6:9"},"nodeType":"YulFunctionCall","src":"10941:12:9"},"nodeType":"YulExpressionStatement","src":"10941:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10914:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10923:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10910:3:9"},"nodeType":"YulFunctionCall","src":"10910:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"10935:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10906:3:9"},"nodeType":"YulFunctionCall","src":"10906:32:9"},"nodeType":"YulIf","src":"10903:52:9"},{"nodeType":"YulVariableDeclaration","src":"10964:29:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10983:9:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10977:5:9"},"nodeType":"YulFunctionCall","src":"10977:16:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10968:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11046:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11055:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11058:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11048:6:9"},"nodeType":"YulFunctionCall","src":"11048:12:9"},"nodeType":"YulExpressionStatement","src":"11048:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11015:5:9"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11036:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11029:6:9"},"nodeType":"YulFunctionCall","src":"11029:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11022:6:9"},"nodeType":"YulFunctionCall","src":"11022:21:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11012:2:9"},"nodeType":"YulFunctionCall","src":"11012:32:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11005:6:9"},"nodeType":"YulFunctionCall","src":"11005:40:9"},"nodeType":"YulIf","src":"11002:60:9"},{"nodeType":"YulAssignment","src":"11071:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"11081:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11071:6:9"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10859:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10870:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10882:6:9","type":""}],"src":"10815:277:9"},{"body":{"nodeType":"YulBlock","src":"11271:232:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11288:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11299:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11281:6:9"},"nodeType":"YulFunctionCall","src":"11281:21:9"},"nodeType":"YulExpressionStatement","src":"11281:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11322:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11333:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11318:3:9"},"nodeType":"YulFunctionCall","src":"11318:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"11338:2:9","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11311:6:9"},"nodeType":"YulFunctionCall","src":"11311:30:9"},"nodeType":"YulExpressionStatement","src":"11311:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11361:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11372:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11357:3:9"},"nodeType":"YulFunctionCall","src":"11357:18:9"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"11377:34:9","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11350:6:9"},"nodeType":"YulFunctionCall","src":"11350:62:9"},"nodeType":"YulExpressionStatement","src":"11350:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11432:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11443:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11428:3:9"},"nodeType":"YulFunctionCall","src":"11428:18:9"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"11448:12:9","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11421:6:9"},"nodeType":"YulFunctionCall","src":"11421:40:9"},"nodeType":"YulExpressionStatement","src":"11421:40:9"},{"nodeType":"YulAssignment","src":"11470:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11482:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11493:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11478:3:9"},"nodeType":"YulFunctionCall","src":"11478:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11470:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11248:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11262:4:9","type":""}],"src":"11097:406:9"},{"body":{"nodeType":"YulBlock","src":"11682:228:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11699:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11710:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11692:6:9"},"nodeType":"YulFunctionCall","src":"11692:21:9"},"nodeType":"YulExpressionStatement","src":"11692:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11733:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11744:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11729:3:9"},"nodeType":"YulFunctionCall","src":"11729:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"11749:2:9","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11722:6:9"},"nodeType":"YulFunctionCall","src":"11722:30:9"},"nodeType":"YulExpressionStatement","src":"11722:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11772:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11783:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11768:3:9"},"nodeType":"YulFunctionCall","src":"11768:18:9"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"11788:34:9","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11761:6:9"},"nodeType":"YulFunctionCall","src":"11761:62:9"},"nodeType":"YulExpressionStatement","src":"11761:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11843:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11854:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11839:3:9"},"nodeType":"YulFunctionCall","src":"11839:18:9"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"11859:8:9","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11832:6:9"},"nodeType":"YulFunctionCall","src":"11832:36:9"},"nodeType":"YulExpressionStatement","src":"11832:36:9"},{"nodeType":"YulAssignment","src":"11877:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11889:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11900:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11885:3:9"},"nodeType":"YulFunctionCall","src":"11885:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11877:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11659:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11673:4:9","type":""}],"src":"11508:402:9"},{"body":{"nodeType":"YulBlock","src":"11968:205:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11978:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11987:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11982:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"12047:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12072:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"12077:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12068:3:9"},"nodeType":"YulFunctionCall","src":"12068:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12091:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"12096:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12087:3:9"},"nodeType":"YulFunctionCall","src":"12087:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12081:5:9"},"nodeType":"YulFunctionCall","src":"12081:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12061:6:9"},"nodeType":"YulFunctionCall","src":"12061:39:9"},"nodeType":"YulExpressionStatement","src":"12061:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12008:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"12011:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12005:2:9"},"nodeType":"YulFunctionCall","src":"12005:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12019:19:9","statements":[{"nodeType":"YulAssignment","src":"12021:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12030:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"12033:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12026:3:9"},"nodeType":"YulFunctionCall","src":"12026:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12021:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"12001:3:9","statements":[]},"src":"11997:113:9"},{"body":{"nodeType":"YulBlock","src":"12136:31:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12149:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"12154:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12145:3:9"},"nodeType":"YulFunctionCall","src":"12145:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"12163:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12138:6:9"},"nodeType":"YulFunctionCall","src":"12138:27:9"},"nodeType":"YulExpressionStatement","src":"12138:27:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12125:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"12128:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12122:2:9"},"nodeType":"YulFunctionCall","src":"12122:13:9"},"nodeType":"YulIf","src":"12119:48:9"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11946:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11951:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"11956:6:9","type":""}],"src":"11915:258:9"},{"body":{"nodeType":"YulBlock","src":"12315:137:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12325:27:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12345:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12339:5:9"},"nodeType":"YulFunctionCall","src":"12339:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12329:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12387:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"12395:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12383:3:9"},"nodeType":"YulFunctionCall","src":"12383:17:9"},{"name":"pos","nodeType":"YulIdentifier","src":"12402:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"12407:6:9"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12361:21:9"},"nodeType":"YulFunctionCall","src":"12361:53:9"},"nodeType":"YulExpressionStatement","src":"12361:53:9"},{"nodeType":"YulAssignment","src":"12423:23:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12434:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"12439:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12430:3:9"},"nodeType":"YulFunctionCall","src":"12430:16:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12423:3:9"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12291:3:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12296:6:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12307:3:9","type":""}],"src":"12178:274:9"},{"body":{"nodeType":"YulBlock","src":"12631:179:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12648:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12659:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12641:6:9"},"nodeType":"YulFunctionCall","src":"12641:21:9"},"nodeType":"YulExpressionStatement","src":"12641:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12682:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12693:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12678:3:9"},"nodeType":"YulFunctionCall","src":"12678:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"12698:2:9","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12671:6:9"},"nodeType":"YulFunctionCall","src":"12671:30:9"},"nodeType":"YulExpressionStatement","src":"12671:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12721:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12732:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12717:3:9"},"nodeType":"YulFunctionCall","src":"12717:18:9"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"12737:31:9","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12710:6:9"},"nodeType":"YulFunctionCall","src":"12710:59:9"},"nodeType":"YulExpressionStatement","src":"12710:59:9"},{"nodeType":"YulAssignment","src":"12778:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12790:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12801:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12786:3:9"},"nodeType":"YulFunctionCall","src":"12786:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12778:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12608:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12622:4:9","type":""}],"src":"12457:353:9"},{"body":{"nodeType":"YulBlock","src":"12936:321:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12953:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12964:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12946:6:9"},"nodeType":"YulFunctionCall","src":"12946:21:9"},"nodeType":"YulExpressionStatement","src":"12946:21:9"},{"nodeType":"YulVariableDeclaration","src":"12976:27:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12996:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12990:5:9"},"nodeType":"YulFunctionCall","src":"12990:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12980:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13023:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13034:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13019:3:9"},"nodeType":"YulFunctionCall","src":"13019:18:9"},{"name":"length","nodeType":"YulIdentifier","src":"13039:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13012:6:9"},"nodeType":"YulFunctionCall","src":"13012:34:9"},"nodeType":"YulExpressionStatement","src":"13012:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13081:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13089:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13077:3:9"},"nodeType":"YulFunctionCall","src":"13077:15:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13098:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13109:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13094:3:9"},"nodeType":"YulFunctionCall","src":"13094:18:9"},{"name":"length","nodeType":"YulIdentifier","src":"13114:6:9"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13055:21:9"},"nodeType":"YulFunctionCall","src":"13055:66:9"},"nodeType":"YulExpressionStatement","src":"13055:66:9"},{"nodeType":"YulAssignment","src":"13130:121:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13146:9:9"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13165:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13173:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13161:3:9"},"nodeType":"YulFunctionCall","src":"13161:15:9"},{"kind":"number","nodeType":"YulLiteral","src":"13178:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13157:3:9"},"nodeType":"YulFunctionCall","src":"13157:88:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13142:3:9"},"nodeType":"YulFunctionCall","src":"13142:104:9"},{"kind":"number","nodeType":"YulLiteral","src":"13248:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13138:3:9"},"nodeType":"YulFunctionCall","src":"13138:113:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13130:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12905:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12916:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12927:4:9","type":""}],"src":"12815:442:9"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_uint256__to_t_uint96_t_uint96_t_uint64_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d5d4526f829be465ccbde8596dd019082d9287da875164147f9d3b62eb798278__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"zero duration\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5a4cf96a83d0a38785b2b1a0589568d8f7d392fad654884d30a3f6c440683520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"empty array\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14ceb87ab7af812e92c4e3834f3009df06974b8f915e614b208227f229f7b205__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"varying-length arrays\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_e4acb2f2dca5bce49f355e714f7431e47358d79e6463dc0451fed1877b7a6eb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"bad recipient\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint96(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_91549934cd3ddb3b69848a33bb3e6f2f6c6e5aeb53ecdfce1296983a8e8f9ae3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"short vesting duration\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d696d95254cfbddd7f9c4536fe32fc4aff9a76fa75ac9e194155d25390e9a490__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"invalid allocation\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_454b82c3995abe0e17d215facdf0517a8bee51b5d963b4725d38a121058a9200__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"rate truncated to zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_7708efe8f9e439a7d89f7815a7ac4039dfdc1f0bb479f643603c5e8dde3f73f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"low balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ecc0a3380755da3568d31401b31e8b3872e01c3836eb4b80fe4866793cf44c8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"no pending harvest\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4d1e7dfd90f1a9f5ff7eb15697c8849def6789d3dd644f128b7a0451146bc601__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Claimable: not pending owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4ad45a29af4d1a11fffff7cb7a07ebeb55a5b27ee49d3e4255f3e6f2fe8d4aa1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Claimable: pending owner not zer\")\n        mstore(add(headStart, 96), \"o address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1597":[{"length":32,"start":665},{"length":32,"start":2225},{"length":32,"start":2539},{"length":32,"start":2946},{"length":32,"start":3387}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063cd3293de11610066578063cd3293de14610267578063e30c397814610270578063f2fde38b14610281578063fc0c546a1461029457600080fd5b8063715018a61461021d5780638da5cb5b146102255780639eab52531461024a578063c6728c6c1461025f57600080fd5b80632e1a7d4d116100d35780632e1a7d4d146101f15780634641257d146102045780634e71e0c81461020c578063567157611461021457600080fd5b806307d41e791461010557806308ae4b0c1461012b5780631674bade146101c9578063182a89e6146101de575b600080fd5b61011861011336600461134e565b6102bb565b6040519081526020015b60405180910390f35b61018a61013936600461134e565b600260205260009081526040902080546001909101546bffffffffffffffffffffffff808316926c01000000000000000000000000810490911691600160c01b90910467ffffffffffffffff169084565b604080516bffffffffffffffffffffffff958616815294909316602085015267ffffffffffffffff909116918301919091526060820152608001610122565b6101dc6101d7366004611377565b610398565b005b6101dc6101ec3660046113dc565b610431565b6101dc6101ff366004611377565b61097f565b6101dc610a42565b6101dc610be2565b61011860065481565b6101dc610c5c565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610122565b610252610ced565b6040516101229190611476565b610118610cfe565b61011860055481565b6001546001600160a01b0316610232565b6101dc61028f36600461134e565b610db0565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0381166000908152600260209081526040808320815160808101835281546bffffffffffffffffffffffff80821683526c0100000000000000000000000082041694820194909452600160c01b90930467ffffffffffffffff169183018290526001015460608301819052839161033990426114d9565b61034391906114f0565b82602001516bffffffffffffffffffffffff16610360919061150f565b82519091506bffffffffffffffffffffffff16811161037f5780610390565b81516bffffffffffffffffffffffff165b949350505050565b6103a0610e1a565b806000036103f55760405162461bcd60e51b815260206004820152600d60248201527f7a65726f206475726174696f6e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b60068190556040518181527f850b0d4898947ead6a23251622e8c2ea46d217fa5ff2c1f06638f92e91880bfe906020015b60405180910390a150565b610439610e1a565b60055460065486919060008390036104935760405162461bcd60e51b815260206004820152600b60248201527f656d70747920617272617900000000000000000000000000000000000000000060448201526064016103ec565b82861480156104a157508284145b6104ed5760405162461bcd60e51b815260206004820152601560248201527f76617279696e672d6c656e67746820617272617973000000000000000000000060448201526064016103ec565b60005b838110156108805760008a8a8381811061050c5761050c611527565b9050602002016020810190610521919061134e565b9050600089898481811061053757610537611527565b905060200201359050600088888581811061055457610554611527565b60200291909101359150506001600160a01b0383166105b55760405162461bcd60e51b815260206004820152600d60248201527f62616420726563697069656e740000000000000000000000000000000000000060448201526064016103ec565b6001600160a01b038316600090815260026020526040902080546bffffffffffffffffffffffff16801561065c5760006105ee866102bb565b83547fffffffffffffffff000000000000000000000000ffffffffffffffffffffffff166c010000000000000000000000006bffffffffffffffffffffffff831602178455905061063f818361153d565b610657906bffffffffffffffffffffffff168a6114d9565b985090505b83156107cd57868310156106b25760405162461bcd60e51b815260206004820152601660248201527f73686f72742076657374696e67206475726174696f6e0000000000000000000060448201526064016103ec565b6bffffffffffffffffffffffff84111561070e5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420616c6c6f636174696f6e000000000000000000000000000060448201526064016103ec565b610718848961150f565b97506000610726848661156a565b9050806000036107785760405162461bcd60e51b815260206004820152601660248201527f72617465207472756e636174656420746f207a65726f0000000000000000000060448201526064016103ec565b610782858361158c565b60018401829055835477ffffffffffffffffffffffffffffffffffffffffffffffff16600160c01b4267ffffffffffffffff160217845591506107c6600387610e74565b50506107f0565b806bffffffffffffffffffffffff166000036107f0576107ee600386610e92565b505b81547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff821617825560408051858152602081018590526001600160a01b038716917f159e9e56dec3d6bf3e3c20510a7b005a0b9f89bd991ff9eb0c4f387b1fd3682d910160405180910390a2505050505080610879906115bc565b90506104f0565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092491906115d6565b10156109725760405162461bcd60e51b815260206004820152600b60248201527f6c6f772062616c616e636500000000000000000000000000000000000000000060448201526064016103ec565b5060055550505050505050565b610987610e1a565b80610990610cfe565b10156109de5760405162461bcd60e51b815260206004820152600b60248201527f6c6f772062616c616e636500000000000000000000000000000000000000000060448201526064016103ec565b610a126001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610ea7565b6040518181527f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b5690602001610426565b33600081815260026020526040812091610a5b906102bb565b905080600003610aad5760405162461bcd60e51b815260206004820152601260248201527f6e6f2070656e64696e672068617276657374000000000000000000000000000060448201526064016103ec565b81546bffffffffffffffffffffffff908116600160c01b4267ffffffffffffffff16027fffffffffffffffff000000000000000000000000ffffffffffffffffffffffff81168217855583928592600092610b0c92869291161761153d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508060056000828254610b4c91906114d9565b909155505081546bffffffffffffffffffffffff16600003610b7557610b73600333610e92565b505b610ba96001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610ea7565b60405181815233907f121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf9060200160405180910390a25050565b6001546001600160a01b0316336001600160a01b031614610c455760405162461bcd60e51b815260206004820152601c60248201527f436c61696d61626c653a206e6f742070656e64696e67206f776e65720000000060448201526064016103ec565b600154610c5a906001600160a01b0316610f2c565b565b610c64610e1a565b6001546001600160a01b031615610ce35760405162461bcd60e51b815260206004820152602960248201527f436c61696d61626c653a2070656e64696e67206f776e6572206e6f74207a657260448201527f6f2061646472657373000000000000000000000000000000000000000000000060648201526084016103ec565b610c5a6000610f2c565b6060610cf96003610f94565b905090565b6005546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da691906115d6565b610cf991906114d9565b610db8610e1a565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f590600090a250565b6000546001600160a01b03163314610c5a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ec565b6000610e89836001600160a01b038416610fa8565b90505b92915050565b6000610e89836001600160a01b038416610ff7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610f279084906110ea565b505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606000610fa1836111cf565b9392505050565b6000818152600183016020526040812054610fef57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610e8c565b506000610e8c565b600081815260018301602052604081205480156110e057600061101b6001836114d9565b855490915060009061102f906001906114d9565b905081811461109457600086600001828154811061104f5761104f611527565b906000526020600020015490508087600001848154811061107257611072611527565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806110a5576110a56115ef565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610e8c565b6000915050610e8c565b600061113f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661122b9092919063ffffffff16565b805190915015610f27578080602001905181019061115d9190611605565b610f275760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103ec565b60608160000180548060200260200160405190810160405280929190818152602001828054801561121f57602002820191906000526020600020905b81548152602001906001019080831161120b575b50505050509050919050565b6060610390848460008585600080866001600160a01b031685876040516112529190611657565b60006040518083038185875af1925050503d806000811461128f576040519150601f19603f3d011682016040523d82523d6000602084013e611294565b606091505b50915091506112a5878383876112b0565b979650505050505050565b6060831561131f578251600003611318576001600160a01b0385163b6113185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ec565b5081610390565b61039083838151156113345781518083602001fd5b8060405162461bcd60e51b81526004016103ec9190611673565b60006020828403121561136057600080fd5b81356001600160a01b0381168114610fa157600080fd5b60006020828403121561138957600080fd5b5035919050565b60008083601f8401126113a257600080fd5b50813567ffffffffffffffff8111156113ba57600080fd5b6020830191508360208260051b85010111156113d557600080fd5b9250929050565b600080600080600080606087890312156113f557600080fd5b863567ffffffffffffffff8082111561140d57600080fd5b6114198a838b01611390565b9098509650602089013591508082111561143257600080fd5b61143e8a838b01611390565b9096509450604089013591508082111561145757600080fd5b5061146489828a01611390565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b818110156114b75783516001600160a01b031683529284019291840191600101611492565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156114eb576114eb6114c3565b500390565b600081600019048311821515161561150a5761150a6114c3565b500290565b60008219821115611522576115226114c3565b500190565b634e487b7160e01b600052603260045260246000fd5b60006bffffffffffffffffffffffff83811690831681811015611562576115626114c3565b039392505050565b60008261158757634e487b7160e01b600052601260045260246000fd5b500490565b60006bffffffffffffffffffffffff8083168185168083038211156115b3576115b36114c3565b01949350505050565b600060001982036115cf576115cf6114c3565b5060010190565b6000602082840312156115e857600080fd5b5051919050565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561161757600080fd5b81518015158114610fa157600080fd5b60005b8381101561164257818101518382015260200161162a565b83811115611651576000848401525b50505050565b60008251611669818460208701611627565b9190910192915050565b6020815260008251806020840152611692816040850160208701611627565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212207ec4adc59eaf03143a165aa488feb198a16092b74c0cd01eda710466895c757e64736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCD3293DE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x9EAB5253 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xC6728C6C EQ PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x4E71E0C8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x56715761 EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D41E79 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x1674BADE EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x182A89E6 EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH13 0x1000000000000000000000000 DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x118 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x252 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH2 0x118 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x118 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x232 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x232 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH13 0x1000000000000000000000000 DUP3 DIV AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP4 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE DUP4 SWAP2 PUSH2 0x339 SWAP1 TIMESTAMP PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT PUSH2 0x37F JUMPI DUP1 PUSH2 0x390 JUMP JUMPDEST DUP2 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0xE1A JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7A65726F206475726174696F6E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x850B0D4898947EAD6A23251622E8C2EA46D217FA5FF2C1F06638F92E91880BFE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656D707479206172726179000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST DUP3 DUP7 EQ DUP1 ISZERO PUSH2 0x4A1 JUMPI POP DUP3 DUP5 EQ JUMPDEST PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76617279696E672D6C656E677468206172726179730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x880 JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x50C JUMPI PUSH2 0x50C PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x537 JUMPI PUSH2 0x537 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x554 JUMPI PUSH2 0x554 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616420726563697069656E7400000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 PUSH2 0x5EE DUP7 PUSH2 0x2BB JUMP JUMPDEST DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND MUL OR DUP5 SSTORE SWAP1 POP PUSH2 0x63F DUP2 DUP4 PUSH2 0x153D JUMP JUMPDEST PUSH2 0x657 SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x14D9 JUMP JUMPDEST SWAP9 POP SWAP1 POP JUMPDEST DUP4 ISZERO PUSH2 0x7CD JUMPI DUP7 DUP4 LT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73686F72742076657374696E67206475726174696F6E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420616C6C6F636174696F6E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x718 DUP5 DUP10 PUSH2 0x150F JUMP JUMPDEST SWAP8 POP PUSH1 0x0 PUSH2 0x726 DUP5 DUP7 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72617465207472756E636174656420746F207A65726F00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x782 DUP6 DUP4 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x1 DUP5 ADD DUP3 SWAP1 SSTORE DUP4 SLOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xC0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR DUP5 SSTORE SWAP2 POP PUSH2 0x7C6 PUSH1 0x3 DUP8 PUSH2 0xE74 JUMP JUMPDEST POP POP PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x7F0 JUMPI PUSH2 0x7EE PUSH1 0x3 DUP7 PUSH2 0xE92 JUMP JUMPDEST POP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x159E9E56DEC3D6BF3E3C20510A7B005A0B9F89BD991FF9EB0C4F387B1FD3682D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP DUP1 PUSH2 0x879 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP1 POP PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST LT ISZERO PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F772062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST POP PUSH1 0x5 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x987 PUSH2 0xE1A JUMP JUMPDEST DUP1 PUSH2 0x990 PUSH2 0xCFE JUMP JUMPDEST LT ISZERO PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F772062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0xA12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x430648DE173157E069201C943ADB2D4E340E7CF5B27B1B09C9CB852F03D63B56 SWAP1 PUSH1 0x20 ADD PUSH2 0x426 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0xA5B SWAP1 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F2070656E64696E6720686172766573740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST DUP2 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 OR DUP6 SSTORE DUP4 SWAP3 DUP6 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xB0C SWAP3 DUP7 SWAP3 SWAP2 AND OR PUSH2 0x153D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0xB75 JUMPI PUSH2 0xB73 PUSH1 0x3 CALLER PUSH2 0xE92 JUMP JUMPDEST POP JUMPDEST PUSH2 0xBA9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x121C5042302BAE5FC561FBC64368F297CA60A880878E1E3A7F7E9380377260BF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C653A206E6F742070656E64696E67206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF2C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC64 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C653A2070656E64696E67206F776E6572206E6F74207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F20616464726573730000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0xC5A PUSH1 0x0 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCF9 PUSH1 0x3 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0xDB8 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE89 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE89 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xF27 SWAP1 DUP5 SWAP1 PUSH2 0x10EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFA1 DUP4 PUSH2 0x11CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xFEF JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xE8C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x0 PUSH2 0x101B PUSH1 0x1 DUP4 PUSH2 0x14D9 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x102F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1094 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104F PUSH2 0x1527 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1072 JUMPI PUSH2 0x1072 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x10A5 JUMPI PUSH2 0x10A5 PUSH2 0x15EF JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x122B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF27 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x121F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x120B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x390 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1252 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12A5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x12B0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x131F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1318 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST POP DUP2 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x390 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1334 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1419 DUP11 DUP4 DUP12 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143E DUP11 DUP4 DUP12 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1464 DUP10 DUP3 DUP11 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14B7 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1492 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EB PUSH2 0x14C3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x150A JUMPI PUSH2 0x150A PUSH2 0x14C3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1522 JUMPI PUSH2 0x1522 PUSH2 0x14C3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1562 JUMPI PUSH2 0x1562 PUSH2 0x14C3 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1587 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x15B3 JUMPI PUSH2 0x15B3 PUSH2 0x14C3 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x15CF JUMPI PUSH2 0x15CF PUSH2 0x14C3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1642 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x162A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1651 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1669 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1692 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xC4ADC59EAF03143A165AA488FEB198A16092B74C0CD01EDA710466895C757E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"442:9891:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9537:484;;;;;;:::i;:::-;;:::i;:::-;;;474:25:9;;;462:2;447:18;9537:484:8;;;;;;;;1075:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1075:41:8;;;;;;;;;;;;745:26:9;798:15;;;780:34;;850:15;;;;845:2;830:18;;823:43;914:18;902:31;;;882:18;;;875:59;;;;965:2;950:18;;943:34;722:3;707:19;1075:41:8;510:473:9;8713:317:8;;;;;;:::i;:::-;;:::i;:::-;;5088:3449;;;;;;:::i;:::-;;:::i;4389:354::-;;;;;;:::i;:::-;;:::i;3325:893::-;;;:::i;315:165:7:-;;;:::i;1568:36:8:-;;;;;;652:201:7;;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;2802:55:9;;;2784:74;;2772:2;2757:18;1201:85:0;2638:226:9;9191:113:8;;;:::i;:::-;;;;;;;:::i;10215:116::-;;;:::i;1467:22::-;;;;;;859:99:7;938:13;;-1:-1:-1;;;;;938:13:7;859:99;;486:160;;;;;;:::i;:::-;;:::i;1340:29:8:-;;;;;9537:484;-1:-1:-1;;;;;9684:16:8;;9599:7;9684:16;;;:7;:16;;;;;;;;9661:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9661:39:8;;;;;;;;;;;;;;;;;;;;9599:7;;9831:35;;:15;:35;:::i;:::-;9830:51;;;;:::i;:::-;9814:6;:12;;;:68;;;;;;:::i;:::-;9974:14;;9797:85;;-1:-1:-1;9965:23:8;;;;:49;;10008:6;9965:49;;;9991:14;;9965:49;;;9958:56;9537:484;-1:-1:-1;;;;9537:484:8:o;8713:317::-;1094:13:0;:11;:13::i;:::-;8851:14:8::1;8869:1;8851:19:::0;8843:45:::1;;;::::0;-1:-1:-1;;;8843:45:8;;4687:2:9;8843:45:8::1;::::0;::::1;4669:21:9::0;4726:2;4706:18;;;4699:30;4765:15;4745:18;;;4738:43;4798:18;;8843:45:8::1;;;;;;;;;8950:11;:28:::0;;;8993:30:::1;::::0;474:25:9;;;8993:30:8::1;::::0;462:2:9;447:18;8993:30:8::1;;;;;;;;8713:317:::0;:::o;5088:3449::-;1094:13:0;:11;:13::i;:::-;5389:7:8::1;::::0;5431:11:::1;::::0;5343:8;;5389:7;5326:14:::1;5521:11:::0;;;5513:35:::1;;;::::0;-1:-1:-1;;;5513:35:8;;5029:2:9;5513:35:8::1;::::0;::::1;5011:21:9::0;5068:2;5048:18;;;5041:30;5107:13;5087:18;;;5080:41;5138:18;;5513:35:8::1;4827:335:9::0;5513:35:8::1;5579:28:::0;;::::1;:58:::0;::::1;;;-1:-1:-1::0;5611:26:8;;::::1;5579:58;5558:126;;;::::0;-1:-1:-1;;;5558:126:8;;5369:2:9;5558:126:8::1;::::0;::::1;5351:21:9::0;5408:2;5388:18;;;5381:30;5447:23;5427:18;;;5420:51;5488:18;;5558:126:8::1;5167:345:9::0;5558:126:8::1;5750:9;5745:2545;5765:6;5761:1;:10;5745:2545;;;5847:15;5865:8;;5874:1;5865:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5847:29;;5890:18;5911:11;;5923:1;5911:14;;;;;;;:::i;:::-;;;;;;;5890:35;;5939:16;5958:9;;5968:1;5958:12;;;;;;;:::i;:::-;;;::::0;;;::::1;;::::0;-1:-1:-1;;;;;;;6056:21:8;::::1;6048:47;;;::::0;-1:-1:-1;;;6048:47:8;;5908:2:9;6048:47:8::1;::::0;::::1;5890:21:9::0;5947:2;5927:18;;;5920:30;5986:15;5966:18;;;5959:43;6019:18;;6048:47:8::1;5706:337:9::0;6048:47:8::1;-1:-1:-1::0;;;;;6213:16:8;::::1;6189:21;6213:16:::0;;;:7:::1;:16;::::0;;;;6269:14;;::::1;;6358:21:::0;;6354:511:::1;;6483:21;6514:23;6529:7;6514:14;:23::i;:::-;6556:29:::0;;;::::1;::::0;::::1;::::0;::::1;;;::::0;;;-1:-1:-1;6697:33:8::1;6556:29:::0;6697:16;:33:::1;:::i;:::-;6682:49;::::0;::::1;;::::0;::::1;:::i;:::-;::::0;-1:-1:-1;6836:14:8;-1:-1:-1;6354:511:8::1;6933:15:::0;;6929:1104:::1;;7088:14;7076:8;:26;;7068:61;;;::::0;-1:-1:-1;;;7068:61:8;;6492:2:9;7068:61:8::1;::::0;::::1;6474:21:9::0;6531:2;6511:18;;;6504:30;6570:24;6550:18;;;6543:52;6612:18;;7068:61:8::1;6290:346:9::0;7068:61:8::1;7169:16;7155:30:::0;::::1;;7147:61;;;::::0;-1:-1:-1;;;7147:61:8;;6843:2:9;7147:61:8::1;::::0;::::1;6825:21:9::0;6882:2;6862:18;;;6855:30;6921:20;6901:18;;;6894:48;6959:18;;7147:61:8::1;6641:342:9::0;7147:61:8::1;7282:24;7296:10:::0;7282:24;::::1;:::i;:::-;::::0;-1:-1:-1;7402:12:8::1;7417:21;7430:8:::0;7417:10;:21:::1;:::i;:::-;7402:36;;7464:4;7472:1;7464:9:::0;7456:44:::1;;;::::0;-1:-1:-1;;;7456:44:8;;7469:2:9;7456:44:8::1;::::0;::::1;7451:21:9::0;7508:2;7488:18;;;7481:30;7547:24;7527:18;;;7520:52;7589:18;;7456:44:8::1;7267:346:9::0;7456:44:8::1;7564:38;7591:10:::0;7564:38;::::1;:::i;:::-;7620:11;::::0;::::1;:18:::0;;;7656:43;;;::::1;-1:-1:-1::0;;;7683:15:8::1;7656:43;;;;::::0;;7564:38;-1:-1:-1;7813:30:8::1;:17;7835:7:::0;7813:21:::1;:30::i;:::-;;6950:908;6929:1104;;;7868:16;:21;;7888:1;7868:21:::0;7864:169:::1;;7985:33;:17;8010:7:::0;7985:24:::1;:33::i;:::-;;7864:169;8129:33:::0;;;::::1;;::::0;::::1;;::::0;;8235:44:::1;::::0;;8041:25:9;;;8097:2;8082:18;;8075:34;;;-1:-1:-1;;;;;8235:44:8;::::1;::::0;::::1;::::0;8014:18:9;8235:44:8::1;;;;;;;5778:2512;;;;;5773:3;;;;:::i;:::-;;;5745:2545;;;-1:-1:-1::0;8377:30:8::1;::::0;;;;8401:4:::1;8377:30;::::0;::::1;2784:74:9::0;8411:10:8;;8377:5:::1;-1:-1:-1::0;;;;;8377:15:8::1;::::0;::::1;::::0;2757:18:9;;8377:30:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;8369:68;;;::::0;-1:-1:-1;;;8369:68:8;;8711:2:9;8369:68:8::1;::::0;::::1;8693:21:9::0;8750:2;8730:18;;;8723:30;8789:13;8769:18;;;8762:41;8820:18;;8369:68:8::1;8509:335:9::0;8369:68:8::1;-1:-1:-1::0;8510:7:8::1;:20:::0;-1:-1:-1;;;;;;;5088:3449:8:o;4389:354::-;1094:13:0;:11;:13::i;:::-;4546:6:8::1;4530:12;:10;:12::i;:::-;:22;;4522:46;;;::::0;-1:-1:-1;;;4522:46:8;;8711:2:9;4522:46:8::1;::::0;::::1;8693:21:9::0;8750:2;8730:18;;;8723:30;8789:13;8769:18;;;8762:41;8820:18;;4522:46:8::1;8509:335:9::0;4522:46:8::1;4666:38;-1:-1:-1::0;;;;;4666:5:8::1;:18;4685:10;4697:6:::0;4666:18:::1;:38::i;:::-;4719:17;::::0;474:25:9;;;4719:17:8::1;::::0;462:2:9;447:18;4719:17:8::1;328:177:9::0;3325:893:8;3446:10;3414:21;3438:19;;;:7;:19;;;;;;3537:26;;:14;:26::i;:::-;3520:43;;3581:6;3591:1;3581:11;3573:42;;;;-1:-1:-1;;;3573:42:8;;9051:2:9;3573:42:8;;;9033:21:9;9090:2;9070:18;;;9063:30;9129:20;9109:18;;;9102:48;9167:18;;3573:42:8;8849:342:9;3573:42:8;3667:43;;3720:16;;;;-1:-1:-1;;;3694:15:8;3667:43;;;3720:16;;;;;;;3771:6;;3667:43;;-1:-1:-1;;3746:32:8;;3771:6;;3746:32;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3850:6;3839:7;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;3948:14:8;;;;;:19;3944:86;;3983:36;:17;4008:10;3983:24;:36::i;:::-;;3944:86;4129:38;-1:-1:-1;;;;;4129:5:8;:18;4148:10;4160:6;4129:18;:38::i;:::-;4182:29;;474:25:9;;;4192:10:8;;4182:29;;462:2:9;447:18;4182:29:8;;;;;;;3353:865;;3325:893::o;315:165:7:-;384:13;;-1:-1:-1;;;;;384:13:7;719:10:5;-1:-1:-1;;;;;368:29:7;;360:70;;;;-1:-1:-1;;;360:70:7;;9398:2:9;360:70:7;;;9380:21:9;9437:2;9417:18;;;9410:30;9476;9456:18;;;9449:58;9524:18;;360:70:7;9196:352:9;360:70:7;459:13;;440:33;;-1:-1:-1;;;;;459:13:7;440:18;:33::i;:::-;315:165::o;652:201::-;1094:13:0;:11;:13::i;:::-;733::7::1;::::0;-1:-1:-1;;;;;733:13:7::1;:27:::0;725:81:::1;;;::::0;-1:-1:-1;;;725:81:7;;9755:2:9;725:81:7::1;::::0;::::1;9737:21:9::0;9794:2;9774:18;;;9767:30;9833:34;9813:18;;;9806:62;9904:11;9884:18;;;9877:39;9933:19;;725:81:7::1;9553:405:9::0;725:81:7::1;816:30;843:1;816:18;:30::i;9191:113:8:-:0;9236:16;9271:26;:17;:24;:26::i;:::-;9264:33;;9191:113;:::o;10215:116::-;10317:7;;10284:30;;;;;10308:4;10284:30;;;2784:74:9;10258:7:8;;10317;-1:-1:-1;;;;;10284:5:8;:15;;;;2757:18:9;;10284:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;486:160:7:-;1094:13:0;:11;:13::i;:::-;575::7::1;:24:::0;;;::::1;-1:-1:-1::0;;;;;575:24:7;::::1;::::0;;::::1;::::0;;;614:25:::1;::::0;::::1;::::0;-1:-1:-1;;614:25:7::1;486:160:::0;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10165:2:9;1414:68:0;;;10147:21:9;;;10184:18;;;10177:30;10243:34;10223:18;;;10216:62;10295:18;;1414:68:0;9963:356:9;8297:150:6;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:6;;8390:4;:50::i;:::-;8383:57;;8297:150;;;;;:::o;8615:156::-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:6;;8711:7;:53::i;763:205:3:-;902:58;;;-1:-1:-1;;;;;10516:55:9;;902:58:3;;;10498:74:9;10588:18;;;;10581:34;;;902:58:3;;;;;;;;;;10471:18:9;;;;902:58:3;;;;;;;;;;925:23;902:58;;;875:86;;895:5;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;10251:300:6:-;10314:16;10342:22;10367:19;10375:3;10367:7;:19::i;:::-;10342:44;10251:300;-1:-1:-1;;;10251:300:6:o;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:6;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:6;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:6;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;3747:706:3;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:3;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:3;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:3;;11299:2:9;4351:85:3;;;11281:21:9;11338:2;11318:18;;;11311:30;11377:34;11357:18;;;11350:62;11448:12;11428:18;;;11421:40;11478:19;;4351:85:3;11097:406:9;5562:109:6;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;3873:223:4:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:4;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:4:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:4;;;7908:60;;;;-1:-1:-1;;;7908:60:4;;12659:2:9;7908:60:4;;;12641:21:9;12698:2;12678:18;;;12671:30;12737:31;12717:18;;;12710:59;12786:18;;7908:60:4;12457:353:9;7908:60:4;-1:-1:-1;8003:10:4;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:4;;;;;;;;:::i;14:309:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:9;220:54;213:5;210:65;200:93;;289:1;286;279:12;988:180;1047:6;1100:2;1088:9;1079:7;1075:23;1071:32;1068:52;;;1116:1;1113;1106:12;1068:52;-1:-1:-1;1139:23:9;;988:180;-1:-1:-1;988:180:9:o;1173:367::-;1236:8;1246:6;1300:3;1293:4;1285:6;1281:17;1277:27;1267:55;;1318:1;1315;1308:12;1267:55;-1:-1:-1;1341:20:9;;1384:18;1373:30;;1370:50;;;1416:1;1413;1406:12;1370:50;1453:4;1445:6;1441:17;1429:29;;1513:3;1506:4;1496:6;1493:1;1489:14;1481:6;1477:27;1473:38;1470:47;1467:67;;;1530:1;1527;1520:12;1467:67;1173:367;;;;;:::o;1545:1088::-;1703:6;1711;1719;1727;1735;1743;1796:2;1784:9;1775:7;1771:23;1767:32;1764:52;;;1812:1;1809;1802:12;1764:52;1852:9;1839:23;1881:18;1922:2;1914:6;1911:14;1908:34;;;1938:1;1935;1928:12;1908:34;1977:70;2039:7;2030:6;2019:9;2015:22;1977:70;:::i;:::-;2066:8;;-1:-1:-1;1951:96:9;-1:-1:-1;2154:2:9;2139:18;;2126:32;;-1:-1:-1;2170:16:9;;;2167:36;;;2199:1;2196;2189:12;2167:36;2238:72;2302:7;2291:8;2280:9;2276:24;2238:72;:::i;:::-;2329:8;;-1:-1:-1;2212:98:9;-1:-1:-1;2417:2:9;2402:18;;2389:32;;-1:-1:-1;2433:16:9;;;2430:36;;;2462:1;2459;2452:12;2430:36;;2501:72;2565:7;2554:8;2543:9;2539:24;2501:72;:::i;:::-;1545:1088;;;;-1:-1:-1;1545:1088:9;;-1:-1:-1;1545:1088:9;;2592:8;;1545:1088;-1:-1:-1;;;1545:1088:9:o;2869:681::-;3040:2;3092:21;;;3162:13;;3065:18;;;3184:22;;;3011:4;;3040:2;3263:15;;;;3237:2;3222:18;;;3011:4;3306:218;3320:6;3317:1;3314:13;3306:218;;;3385:13;;-1:-1:-1;;;;;3381:62:9;3369:75;;3499:15;;;;3464:12;;;;3342:1;3335:9;3306:218;;;-1:-1:-1;3541:3:9;;2869:681;-1:-1:-1;;;;;;2869:681:9:o;3800:184::-;-1:-1:-1;;;3849:1:9;3842:88;3949:4;3946:1;3939:15;3973:4;3970:1;3963:15;3989:125;4029:4;4057:1;4054;4051:8;4048:34;;;4062:18;;:::i;:::-;-1:-1:-1;4099:9:9;;3989:125::o;4119:228::-;4159:7;4285:1;-1:-1:-1;;4213:74:9;4210:1;4207:81;4202:1;4195:9;4188:17;4184:105;4181:131;;;4292:18;;:::i;:::-;-1:-1:-1;4332:9:9;;4119:228::o;4352:128::-;4392:3;4423:1;4419:6;4416:1;4413:13;4410:39;;;4429:18;;:::i;:::-;-1:-1:-1;4465:9:9;;4352:128::o;5517:184::-;-1:-1:-1;;;5566:1:9;5559:88;5666:4;5663:1;5656:15;5690:4;5687:1;5680:15;6048:237;6087:4;6116:26;6192:10;;;;6162;;6214:12;;;6211:38;;;6229:18;;:::i;:::-;6266:13;;6048:237;-1:-1:-1;;;6048:237:9:o;6988:274::-;7028:1;7054;7044:189;;-1:-1:-1;;;7086:1:9;7079:88;7190:4;7187:1;7180:15;7218:4;7215:1;7208:15;7044:189;-1:-1:-1;7247:9:9;;6988:274::o;7618:244::-;7657:3;7685:26;7738:2;7735:1;7731:10;7768:2;7765:1;7761:10;7799:3;7795:2;7791:12;7786:3;7783:21;7780:47;;;7807:18;;:::i;:::-;7843:13;;7618:244;-1:-1:-1;;;;7618:244:9:o;8120:195::-;8159:3;-1:-1:-1;;8183:5:9;8180:77;8177:103;;8260:18;;:::i;:::-;-1:-1:-1;8307:1:9;8296:13;;8120:195::o;8320:184::-;8390:6;8443:2;8431:9;8422:7;8418:23;8414:32;8411:52;;;8459:1;8456;8449:12;8411:52;-1:-1:-1;8482:16:9;;8320:184;-1:-1:-1;8320:184:9:o;10626:::-;-1:-1:-1;;;10675:1:9;10668:88;10775:4;10772:1;10765:15;10799:4;10796:1;10789:15;10815:277;10882:6;10935:2;10923:9;10914:7;10910:23;10906:32;10903:52;;;10951:1;10948;10941:12;10903:52;10983:9;10977:16;11036:5;11029:13;11022:21;11015:5;11012:32;11002:60;;11058:1;11055;11048:12;11915:258;11987:1;11997:113;12011:6;12008:1;12005:13;11997:113;;;12087:11;;;12081:18;12068:11;;;12061:39;12033:2;12026:10;11997:113;;;12128:6;12125:1;12122:13;12119:48;;;12163:1;12154:6;12149:3;12145:16;12138:27;12119:48;;11915:258;;;:::o;12178:274::-;12307:3;12345:6;12339:13;12361:53;12407:6;12402:3;12395:4;12387:6;12383:17;12361:53;:::i;:::-;12430:16;;;;;12178:274;-1:-1:-1;;12178:274:9:o;12815:442::-;12964:2;12953:9;12946:21;12927:4;12996:6;12990:13;13039:6;13034:2;13023:9;13019:18;13012:34;13055:66;13114:6;13109:2;13098:9;13094:18;13089:2;13081:6;13077:15;13055:66;:::i;:::-;13173:2;13161:15;13178:66;13157:88;13142:104;;;;13248:2;13138:113;;12815:442;-1:-1:-1;;12815:442:9:o"},"methodIdentifiers":{"claimOwnership()":"4e71e0c8","getMembers()":"9eab5253","harvest()":"4641257d","members(address)":"08ae4b0c","minDuration()":"56715761","owner()":"8da5cb5b","pendingHarvest(address)":"07d41e79","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","reserve()":"cd3293de","setAllocations(address[],uint256[],uint256[])":"182a89e6","setMinDuration(uint256)":"1674bade","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","unreserved()":"c6728c6c","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"AllocationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinDuration\",\"type\":\"uint256\"}],\"name\":\"MinDurationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"reserve\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"stash\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"lastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pendingHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"allocations\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"durations\",\"type\":\"uint256[]\"}],\"name\":\"setAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinDuration\",\"type\":\"uint256\"}],\"name\":\"setMinDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unreserved\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"shung for Arcanum\",\"events\":{\"AllocationSet(address,uint256,uint256)\":{\"params\":{\"allocation\":\"The new amount of tokens allocated for the member.\",\"duration\":\"The time it will take to distribute the whole `allocation`.\",\"member\":\"The address of the member whose allocation was changed.\"}},\"Harvested(address,uint256)\":{\"params\":{\"amount\":\"The amount of reward tokens that was harvested.\",\"member\":\"The address of the member whose rewards were harvested.\"}},\"MinDurationSet(uint256)\":{\"params\":{\"newMinDuration\":\"The minimum duration that can be defined for any allocation set after this event.\"}},\"Withdrawn(uint256)\":{\"params\":{\"amount\":\"The amount of reward tokens that was withdrawn from the contract.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"distributionToken\":\"The address of the token to be distributed.\"}},\"getMembers()\":{\"returns\":{\"_0\":\"The list of all members who have remaining allocation.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingHarvest(address)\":{\"params\":{\"account\":\"The address of the member.\"},\"returns\":{\"_0\":\"The amount of harvestable reward tokens of the member.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAllocations(address[],uint256[],uint256[])\":{\"params\":{\"accounts\":\"An array of member addresses.\",\"allocations\":\"The amount of tokens to allocate to the corresponding member.\",\"durations\":\"The duration the corresponding allocation will last for.\"}},\"setMinDuration(uint256)\":{\"params\":{\"newMinDuration\":\"The new minimum duration a vesting can last for.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unreserved()\":{\"returns\":{\"_0\":\"The amount of unallocated reward tokens in the contract.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw.\"}}},\"title\":\"Allocation Vester\",\"version\":1},\"userdoc\":{\"events\":{\"AllocationSet(address,uint256,uint256)\":{\"notice\":\"Emit an event whenever an allocation is changed.\"},\"Harvested(address,uint256)\":{\"notice\":\"Emit an event whenever a member's pending rewards are harvested.\"},\"MinDurationSet(uint256)\":{\"notice\":\"Emit an event whenever the `minDuration` is changed.\"},\"Withdrawn(uint256)\":{\"notice\":\"Emit an event when unallocated tokens from the contract are withdrawn by the admin.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs a new AllocationVester contract.\"},\"getMembers()\":{\"notice\":\"External view function to get all active the members.\"},\"harvest()\":{\"notice\":\"External function to claim pending rewards of the caller.\"},\"members(address)\":{\"notice\":\"The mapping of member addresses to their properties.\"},\"minDuration()\":{\"notice\":\"The minimum duration a vesting can last.\"},\"pendingHarvest(address)\":{\"notice\":\"Public view function to get the amount of pending reward tokens of a member.\"},\"reserve()\":{\"notice\":\"The total amount of tokens set to be vested to all members.\"},\"setAllocations(address[],uint256[],uint256[])\":{\"notice\":\"External restricted function to add or removes members, or change their allocations.\"},\"setMinDuration(uint256)\":{\"notice\":\"External restricted function to change the minimum duration.\"},\"token()\":{\"notice\":\"The address of the token being distributed.\"},\"unreserved()\":{\"notice\":\"Public view function to get the amount of unallocated reward tokens in the contract.\"},\"withdraw(uint256)\":{\"notice\":\"External restricted function to withdraw unallocated tokens from the contract.\"}},\"notice\":\"This contract allows allocating and distributing tokens to recipients by vesting (i.e., streaming) it for arbitrary durations for each recipient.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/allocation-vester/AllocationVester.sol\":\"AllocationVester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/Claimable.sol\":{\"keccak256\":\"0x8f1319603974d71dd2be410db2c4879a10c37cda7ffb2b34ec787a07908ca2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3591b60b502da192846c4fcb7cb68f5b705c9209c3c053de0055fc22f1f71a25\",\"dweb:/ipfs/QmVHuVHoqNF1eNiwnDtc9ZdGotNQNRFriqB8A8LFhVq1cJ\"]},\"contracts/allocation-vester/AllocationVester.sol\":{\"keccak256\":\"0xc95af42abf538a2363478274995af2807ffbc0100d0ee25d3f7876b11d522ec8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://404dc022615afd66aec3af7655020f2ffaeb7a8dcaf435483f2ebf1b0bad2139\",\"dweb:/ipfs/QmPfKkskNsouoTkr8oeCK4yzHhcbf3wAu5BHVDC6vk7rP2\"]}},\"version\":1}"}}}}}